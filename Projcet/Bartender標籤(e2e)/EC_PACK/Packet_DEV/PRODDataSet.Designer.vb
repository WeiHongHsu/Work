'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("PRODDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class PRODDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableCASEDETAIL As CASEDETAILDataTable
    
    Private tableVw_PICKDETAIL_Rate As Vw_PICKDETAIL_RateDataTable
    
    Private tableCombination_CaseDetail As Combination_CaseDetailDataTable
    
    Private tableVw_Case_Addr_Invoice As Vw_Case_Addr_InvoiceDataTable
    
    Private tableVw_Rpt_PickList As Vw_Rpt_PickListDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CASEDETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New CASEDETAILDataTable(ds.Tables("CASEDETAIL")))
            End If
            If (Not (ds.Tables("Vw_PICKDETAIL_Rate")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_PICKDETAIL_RateDataTable(ds.Tables("Vw_PICKDETAIL_Rate")))
            End If
            If (Not (ds.Tables("Combination_CaseDetail")) Is Nothing) Then
                MyBase.Tables.Add(New Combination_CaseDetailDataTable(ds.Tables("Combination_CaseDetail")))
            End If
            If (Not (ds.Tables("Vw_Case_Addr_Invoice")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_Case_Addr_InvoiceDataTable(ds.Tables("Vw_Case_Addr_Invoice")))
            End If
            If (Not (ds.Tables("Vw_Rpt_PickList")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_Rpt_PickListDataTable(ds.Tables("Vw_Rpt_PickList")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CASEDETAIL() As CASEDETAILDataTable
        Get
            Return Me.tableCASEDETAIL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Vw_PICKDETAIL_Rate() As Vw_PICKDETAIL_RateDataTable
        Get
            Return Me.tableVw_PICKDETAIL_Rate
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Combination_CaseDetail() As Combination_CaseDetailDataTable
        Get
            Return Me.tableCombination_CaseDetail
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Vw_Case_Addr_Invoice() As Vw_Case_Addr_InvoiceDataTable
        Get
            Return Me.tableVw_Case_Addr_Invoice
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Vw_Rpt_PickList() As Vw_Rpt_PickListDataTable
        Get
            Return Me.tableVw_Rpt_PickList
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As PRODDataSet = CType(MyBase.Clone,PRODDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("CASEDETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New CASEDETAILDataTable(ds.Tables("CASEDETAIL")))
            End If
            If (Not (ds.Tables("Vw_PICKDETAIL_Rate")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_PICKDETAIL_RateDataTable(ds.Tables("Vw_PICKDETAIL_Rate")))
            End If
            If (Not (ds.Tables("Combination_CaseDetail")) Is Nothing) Then
                MyBase.Tables.Add(New Combination_CaseDetailDataTable(ds.Tables("Combination_CaseDetail")))
            End If
            If (Not (ds.Tables("Vw_Case_Addr_Invoice")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_Case_Addr_InvoiceDataTable(ds.Tables("Vw_Case_Addr_Invoice")))
            End If
            If (Not (ds.Tables("Vw_Rpt_PickList")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_Rpt_PickListDataTable(ds.Tables("Vw_Rpt_PickList")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCASEDETAIL = CType(MyBase.Tables("CASEDETAIL"),CASEDETAILDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCASEDETAIL) Is Nothing) Then
                Me.tableCASEDETAIL.InitVars
            End If
        End If
        Me.tableVw_PICKDETAIL_Rate = CType(MyBase.Tables("Vw_PICKDETAIL_Rate"),Vw_PICKDETAIL_RateDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVw_PICKDETAIL_Rate) Is Nothing) Then
                Me.tableVw_PICKDETAIL_Rate.InitVars
            End If
        End If
        Me.tableCombination_CaseDetail = CType(MyBase.Tables("Combination_CaseDetail"),Combination_CaseDetailDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCombination_CaseDetail) Is Nothing) Then
                Me.tableCombination_CaseDetail.InitVars
            End If
        End If
        Me.tableVw_Case_Addr_Invoice = CType(MyBase.Tables("Vw_Case_Addr_Invoice"),Vw_Case_Addr_InvoiceDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVw_Case_Addr_Invoice) Is Nothing) Then
                Me.tableVw_Case_Addr_Invoice.InitVars
            End If
        End If
        Me.tableVw_Rpt_PickList = CType(MyBase.Tables("Vw_Rpt_PickList"),Vw_Rpt_PickListDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVw_Rpt_PickList) Is Nothing) Then
                Me.tableVw_Rpt_PickList.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "PRODDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/PRODDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCASEDETAIL = New CASEDETAILDataTable()
        MyBase.Tables.Add(Me.tableCASEDETAIL)
        Me.tableVw_PICKDETAIL_Rate = New Vw_PICKDETAIL_RateDataTable()
        MyBase.Tables.Add(Me.tableVw_PICKDETAIL_Rate)
        Me.tableCombination_CaseDetail = New Combination_CaseDetailDataTable()
        MyBase.Tables.Add(Me.tableCombination_CaseDetail)
        Me.tableVw_Case_Addr_Invoice = New Vw_Case_Addr_InvoiceDataTable()
        MyBase.Tables.Add(Me.tableVw_Case_Addr_Invoice)
        Me.tableVw_Rpt_PickList = New Vw_Rpt_PickListDataTable()
        MyBase.Tables.Add(Me.tableVw_Rpt_PickList)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeCASEDETAIL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeVw_PICKDETAIL_Rate() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeCombination_CaseDetail() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeVw_Case_Addr_Invoice() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeVw_Rpt_PickList() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As PRODDataSet = New PRODDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub CASEDETAILRowChangeEventHandler(ByVal sender As Object, ByVal e As CASEDETAILRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub Vw_PICKDETAIL_RateRowChangeEventHandler(ByVal sender As Object, ByVal e As Vw_PICKDETAIL_RateRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub Combination_CaseDetailRowChangeEventHandler(ByVal sender As Object, ByVal e As Combination_CaseDetailRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub Vw_Case_Addr_InvoiceRowChangeEventHandler(ByVal sender As Object, ByVal e As Vw_Case_Addr_InvoiceRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub Vw_Rpt_PickListRowChangeEventHandler(ByVal sender As Object, ByVal e As Vw_Rpt_PickListRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CASEDETAILDataTable
        Inherits Global.System.Data.TypedTableBase(Of CASEDETAILRow)
        
        Private columnPICKDETAILKEY As Global.System.Data.DataColumn
        
        Private columnCASEID As Global.System.Data.DataColumn
        
        Private columnPICKHEADERKEY As Global.System.Data.DataColumn
        
        Private columnEXTERNORDERKEY As Global.System.Data.DataColumn
        
        Private columnORDERKEY As Global.System.Data.DataColumn
        
        Private columnORDERLINENUMBER As Global.System.Data.DataColumn
        
        Private columnSTORERKEY As Global.System.Data.DataColumn
        
        Private columnSKU As Global.System.Data.DataColumn
        
        Private columnALTSKU As Global.System.Data.DataColumn
        
        Private columnQTY As Global.System.Data.DataColumn
        
        Private columnPKQTY As Global.System.Data.DataColumn
        
        Private columnOPQTY As Global.System.Data.DataColumn
        
        Private columnSTATUS As Global.System.Data.DataColumn
        
        Private columnLOC As Global.System.Data.DataColumn
        
        Private columnTOLOC As Global.System.Data.DataColumn
        
        Private columnWAVEKEY As Global.System.Data.DataColumn
        
        Private columnEFFECTIVEDATE As Global.System.Data.DataColumn
        
        Private columnCONSIGNEEKEY As Global.System.Data.DataColumn
        
        Private columnROUTE As Global.System.Data.DataColumn
        
        Private columnDOOR As Global.System.Data.DataColumn
        
        Private columnNOTES As Global.System.Data.DataColumn
        
        Private columnSOURCEKEY As Global.System.Data.DataColumn
        
        Private columnEDITDATE As Global.System.Data.DataColumn
        
        Private columnEDITWHO As Global.System.Data.DataColumn
        
        Private columnPackMod As Global.System.Data.DataColumn
        
        Private columnGUINO As Global.System.Data.DataColumn
        
        Private columnPOKEYLINENUMBER As Global.System.Data.DataColumn
        
        Private columnPOKEY As Global.System.Data.DataColumn
        
        Private columnCASELABLE As Global.System.Data.DataColumn
        
        Private columnSHIPDATE As Global.System.Data.DataColumn
        
        Private columnSprint As Global.System.Data.DataColumn
        
        Private columnLastShipment As Global.System.Data.DataColumn
        
        Private columnBarcode_image As Global.System.Data.DataColumn
        
        Private columnTaxType As Global.System.Data.DataColumn
        
        Private columnUNITPRICE As Global.System.Data.DataColumn
        
        Private columnPRICE As Global.System.Data.DataColumn
        
        Private columnTAX01 As Global.System.Data.DataColumn
        
        Private columnCURCY As Global.System.Data.DataColumn
        
        Private columnDESCR As Global.System.Data.DataColumn
        
        Private columnWeight As Global.System.Data.DataColumn
        
        Private columnAmount As Global.System.Data.DataColumn
        
        Private columnRandomNumber As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CASEDETAIL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PICKDETAILKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPICKDETAILKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CASEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PICKHEADERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPICKHEADERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EXTERNORDERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTERNORDERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ORDERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ORDERLINENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERLINENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STORERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTORERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SKUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ALTSKUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALTSKU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PKQTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPKQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OPQTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TOLOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOLOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WAVEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWAVEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EFFECTIVEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEFFECTIVEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONSIGNEEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONSIGNEEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ROUTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROUTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DOORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOTESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOTES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SOURCEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOURCEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EDITDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDITDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EDITWHOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDITWHO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PackModColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackMod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property GUINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUINO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POKEYLINENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOKEYLINENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CASELABLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASELABLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHIPDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHIPDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SprintColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSprint
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LastShipmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastShipment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Barcode_imageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcode_image
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TaxTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UNITPRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNITPRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TAX01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAX01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CURCYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURCY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DESCRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RandomNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRandomNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CASEDETAILRow
            Get
                Return CType(Me.Rows(index),CASEDETAILRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CASEDETAILRowChanging As CASEDETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CASEDETAILRowChanged As CASEDETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CASEDETAILRowDeleting As CASEDETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event CASEDETAILRowDeleted As CASEDETAILRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddCASEDETAILRow(ByVal row As CASEDETAILRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddCASEDETAILRow( _
                    ByVal PICKDETAILKEY As String,  _
                    ByVal CASEID As String,  _
                    ByVal PICKHEADERKEY As String,  _
                    ByVal EXTERNORDERKEY As String,  _
                    ByVal ORDERKEY As String,  _
                    ByVal ORDERLINENUMBER As String,  _
                    ByVal STORERKEY As String,  _
                    ByVal SKU As String,  _
                    ByVal ALTSKU As String,  _
                    ByVal QTY As Decimal,  _
                    ByVal PKQTY As Decimal,  _
                    ByVal OPQTY As Decimal,  _
                    ByVal STATUS As String,  _
                    ByVal LOC As String,  _
                    ByVal TOLOC As String,  _
                    ByVal WAVEKEY As String,  _
                    ByVal EFFECTIVEDATE As Date,  _
                    ByVal CONSIGNEEKEY As String,  _
                    ByVal ROUTE As String,  _
                    ByVal DOOR As String,  _
                    ByVal NOTES As String,  _
                    ByVal SOURCEKEY As String,  _
                    ByVal EDITDATE As Date,  _
                    ByVal EDITWHO As String,  _
                    ByVal PackMod As String,  _
                    ByVal GUINO As String,  _
                    ByVal POKEYLINENUMBER As String,  _
                    ByVal POKEY As String,  _
                    ByVal CASELABLE As String,  _
                    ByVal SHIPDATE As Date,  _
                    ByVal Sprint As Short,  _
                    ByVal LastShipment As String,  _
                    ByVal Barcode_image() As Byte,  _
                    ByVal TaxType As String,  _
                    ByVal UNITPRICE As Decimal,  _
                    ByVal PRICE As Decimal,  _
                    ByVal TAX01 As Decimal,  _
                    ByVal CURCY As String,  _
                    ByVal DESCR As String,  _
                    ByVal Weight As String,  _
                    ByVal Amount As Decimal,  _
                    ByVal RandomNumber As String) As CASEDETAILRow
            Dim rowCASEDETAILRow As CASEDETAILRow = CType(Me.NewRow,CASEDETAILRow)
            Dim columnValuesArray() As Object = New Object() {PICKDETAILKEY, CASEID, PICKHEADERKEY, EXTERNORDERKEY, ORDERKEY, ORDERLINENUMBER, STORERKEY, SKU, ALTSKU, QTY, PKQTY, OPQTY, STATUS, LOC, TOLOC, WAVEKEY, EFFECTIVEDATE, CONSIGNEEKEY, ROUTE, DOOR, NOTES, SOURCEKEY, EDITDATE, EDITWHO, PackMod, GUINO, POKEYLINENUMBER, POKEY, CASELABLE, SHIPDATE, Sprint, LastShipment, Barcode_image, TaxType, UNITPRICE, PRICE, TAX01, CURCY, DESCR, Weight, Amount, RandomNumber}
            rowCASEDETAILRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCASEDETAILRow)
            Return rowCASEDETAILRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CASEDETAILDataTable = CType(MyBase.Clone,CASEDETAILDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CASEDETAILDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPICKDETAILKEY = MyBase.Columns("PICKDETAILKEY")
            Me.columnCASEID = MyBase.Columns("CASEID")
            Me.columnPICKHEADERKEY = MyBase.Columns("PICKHEADERKEY")
            Me.columnEXTERNORDERKEY = MyBase.Columns("EXTERNORDERKEY")
            Me.columnORDERKEY = MyBase.Columns("ORDERKEY")
            Me.columnORDERLINENUMBER = MyBase.Columns("ORDERLINENUMBER")
            Me.columnSTORERKEY = MyBase.Columns("STORERKEY")
            Me.columnSKU = MyBase.Columns("SKU")
            Me.columnALTSKU = MyBase.Columns("ALTSKU")
            Me.columnQTY = MyBase.Columns("QTY")
            Me.columnPKQTY = MyBase.Columns("PKQTY")
            Me.columnOPQTY = MyBase.Columns("OPQTY")
            Me.columnSTATUS = MyBase.Columns("STATUS")
            Me.columnLOC = MyBase.Columns("LOC")
            Me.columnTOLOC = MyBase.Columns("TOLOC")
            Me.columnWAVEKEY = MyBase.Columns("WAVEKEY")
            Me.columnEFFECTIVEDATE = MyBase.Columns("EFFECTIVEDATE")
            Me.columnCONSIGNEEKEY = MyBase.Columns("CONSIGNEEKEY")
            Me.columnROUTE = MyBase.Columns("ROUTE")
            Me.columnDOOR = MyBase.Columns("DOOR")
            Me.columnNOTES = MyBase.Columns("NOTES")
            Me.columnSOURCEKEY = MyBase.Columns("SOURCEKEY")
            Me.columnEDITDATE = MyBase.Columns("EDITDATE")
            Me.columnEDITWHO = MyBase.Columns("EDITWHO")
            Me.columnPackMod = MyBase.Columns("PackMod")
            Me.columnGUINO = MyBase.Columns("GUINO")
            Me.columnPOKEYLINENUMBER = MyBase.Columns("POKEYLINENUMBER")
            Me.columnPOKEY = MyBase.Columns("POKEY")
            Me.columnCASELABLE = MyBase.Columns("CASELABLE")
            Me.columnSHIPDATE = MyBase.Columns("SHIPDATE")
            Me.columnSprint = MyBase.Columns("Sprint")
            Me.columnLastShipment = MyBase.Columns("LastShipment")
            Me.columnBarcode_image = MyBase.Columns("Barcode_image")
            Me.columnTaxType = MyBase.Columns("TaxType")
            Me.columnUNITPRICE = MyBase.Columns("UNITPRICE")
            Me.columnPRICE = MyBase.Columns("PRICE")
            Me.columnTAX01 = MyBase.Columns("TAX01")
            Me.columnCURCY = MyBase.Columns("CURCY")
            Me.columnDESCR = MyBase.Columns("DESCR")
            Me.columnWeight = MyBase.Columns("Weight")
            Me.columnAmount = MyBase.Columns("Amount")
            Me.columnRandomNumber = MyBase.Columns("RandomNumber")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPICKDETAILKEY = New Global.System.Data.DataColumn("PICKDETAILKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPICKDETAILKEY)
            Me.columnCASEID = New Global.System.Data.DataColumn("CASEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASEID)
            Me.columnPICKHEADERKEY = New Global.System.Data.DataColumn("PICKHEADERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPICKHEADERKEY)
            Me.columnEXTERNORDERKEY = New Global.System.Data.DataColumn("EXTERNORDERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTERNORDERKEY)
            Me.columnORDERKEY = New Global.System.Data.DataColumn("ORDERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERKEY)
            Me.columnORDERLINENUMBER = New Global.System.Data.DataColumn("ORDERLINENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERLINENUMBER)
            Me.columnSTORERKEY = New Global.System.Data.DataColumn("STORERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTORERKEY)
            Me.columnSKU = New Global.System.Data.DataColumn("SKU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKU)
            Me.columnALTSKU = New Global.System.Data.DataColumn("ALTSKU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALTSKU)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.columnPKQTY = New Global.System.Data.DataColumn("PKQTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPKQTY)
            Me.columnOPQTY = New Global.System.Data.DataColumn("OPQTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPQTY)
            Me.columnSTATUS = New Global.System.Data.DataColumn("STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATUS)
            Me.columnLOC = New Global.System.Data.DataColumn("LOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOC)
            Me.columnTOLOC = New Global.System.Data.DataColumn("TOLOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOLOC)
            Me.columnWAVEKEY = New Global.System.Data.DataColumn("WAVEKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWAVEKEY)
            Me.columnEFFECTIVEDATE = New Global.System.Data.DataColumn("EFFECTIVEDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEFFECTIVEDATE)
            Me.columnCONSIGNEEKEY = New Global.System.Data.DataColumn("CONSIGNEEKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONSIGNEEKEY)
            Me.columnROUTE = New Global.System.Data.DataColumn("ROUTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROUTE)
            Me.columnDOOR = New Global.System.Data.DataColumn("DOOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOOR)
            Me.columnNOTES = New Global.System.Data.DataColumn("NOTES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOTES)
            Me.columnSOURCEKEY = New Global.System.Data.DataColumn("SOURCEKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOURCEKEY)
            Me.columnEDITDATE = New Global.System.Data.DataColumn("EDITDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDITDATE)
            Me.columnEDITWHO = New Global.System.Data.DataColumn("EDITWHO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDITWHO)
            Me.columnPackMod = New Global.System.Data.DataColumn("PackMod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackMod)
            Me.columnGUINO = New Global.System.Data.DataColumn("GUINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUINO)
            Me.columnPOKEYLINENUMBER = New Global.System.Data.DataColumn("POKEYLINENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOKEYLINENUMBER)
            Me.columnPOKEY = New Global.System.Data.DataColumn("POKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOKEY)
            Me.columnCASELABLE = New Global.System.Data.DataColumn("CASELABLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASELABLE)
            Me.columnSHIPDATE = New Global.System.Data.DataColumn("SHIPDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHIPDATE)
            Me.columnSprint = New Global.System.Data.DataColumn("Sprint", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSprint)
            Me.columnLastShipment = New Global.System.Data.DataColumn("LastShipment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastShipment)
            Me.columnBarcode_image = New Global.System.Data.DataColumn("Barcode_image", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcode_image)
            Me.columnTaxType = New Global.System.Data.DataColumn("TaxType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxType)
            Me.columnUNITPRICE = New Global.System.Data.DataColumn("UNITPRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNITPRICE)
            Me.columnPRICE = New Global.System.Data.DataColumn("PRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRICE)
            Me.columnTAX01 = New Global.System.Data.DataColumn("TAX01", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAX01)
            Me.columnCURCY = New Global.System.Data.DataColumn("CURCY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURCY)
            Me.columnDESCR = New Global.System.Data.DataColumn("DESCR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCR)
            Me.columnWeight = New Global.System.Data.DataColumn("Weight", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeight)
            Me.columnAmount = New Global.System.Data.DataColumn("Amount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount)
            Me.columnRandomNumber = New Global.System.Data.DataColumn("RandomNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRandomNumber)
            Me.columnPICKDETAILKEY.AllowDBNull = false
            Me.columnPICKDETAILKEY.MaxLength = 18
            Me.columnCASEID.MaxLength = 20
            Me.columnPICKHEADERKEY.MaxLength = 18
            Me.columnEXTERNORDERKEY.MaxLength = 20
            Me.columnORDERKEY.AllowDBNull = false
            Me.columnORDERKEY.MaxLength = 10
            Me.columnORDERLINENUMBER.AllowDBNull = false
            Me.columnORDERLINENUMBER.MaxLength = 5
            Me.columnSTORERKEY.AllowDBNull = false
            Me.columnSTORERKEY.MaxLength = 15
            Me.columnSKU.AllowDBNull = false
            Me.columnSKU.MaxLength = 20
            Me.columnALTSKU.MaxLength = 20
            Me.columnSTATUS.MaxLength = 10
            Me.columnLOC.MaxLength = 10
            Me.columnTOLOC.MaxLength = 10
            Me.columnWAVEKEY.MaxLength = 10
            Me.columnCONSIGNEEKEY.MaxLength = 15
            Me.columnROUTE.MaxLength = 18
            Me.columnDOOR.MaxLength = 18
            Me.columnNOTES.MaxLength = 80
            Me.columnSOURCEKEY.MaxLength = 20
            Me.columnEDITWHO.MaxLength = 30
            Me.columnPackMod.MaxLength = 30
            Me.columnGUINO.MaxLength = 20
            Me.columnPOKEYLINENUMBER.MaxLength = 6
            Me.columnPOKEY.MaxLength = 10
            Me.columnCASELABLE.MaxLength = 50
            Me.columnLastShipment.MaxLength = 5
            Me.columnTaxType.MaxLength = 10
            Me.columnCURCY.MaxLength = 10
            Me.columnDESCR.MaxLength = 160
            Me.columnWeight.MaxLength = 20
            Me.columnRandomNumber.MaxLength = 4
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewCASEDETAILRow() As CASEDETAILRow
            Return CType(Me.NewRow,CASEDETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CASEDETAILRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CASEDETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CASEDETAILRowChangedEvent) Is Nothing) Then
                RaiseEvent CASEDETAILRowChanged(Me, New CASEDETAILRowChangeEvent(CType(e.Row,CASEDETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CASEDETAILRowChangingEvent) Is Nothing) Then
                RaiseEvent CASEDETAILRowChanging(Me, New CASEDETAILRowChangeEvent(CType(e.Row,CASEDETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CASEDETAILRowDeletedEvent) Is Nothing) Then
                RaiseEvent CASEDETAILRowDeleted(Me, New CASEDETAILRowChangeEvent(CType(e.Row,CASEDETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CASEDETAILRowDeletingEvent) Is Nothing) Then
                RaiseEvent CASEDETAILRowDeleting(Me, New CASEDETAILRowChangeEvent(CType(e.Row,CASEDETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveCASEDETAILRow(ByVal row As CASEDETAILRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PRODDataSet = New PRODDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CASEDETAILDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Vw_PICKDETAIL_RateDataTable
        Inherits Global.System.Data.TypedTableBase(Of Vw_PICKDETAIL_RateRow)
        
        Private columnGENNUMBER As Global.System.Data.DataColumn
        
        Private columnPICKDETAILKEY As Global.System.Data.DataColumn
        
        Private columnCASEID As Global.System.Data.DataColumn
        
        Private columnPICKHEADERKEY As Global.System.Data.DataColumn
        
        Private columnORDERKEY As Global.System.Data.DataColumn
        
        Private columnORDERLINENUMBER As Global.System.Data.DataColumn
        
        Private columnLOT As Global.System.Data.DataColumn
        
        Private columnSTORERKEY As Global.System.Data.DataColumn
        
        Private columnSKU As Global.System.Data.DataColumn
        
        Private columnALTSKU As Global.System.Data.DataColumn
        
        Private columnUOM As Global.System.Data.DataColumn
        
        Private columnUOMQTY As Global.System.Data.DataColumn
        
        Private columnQTY As Global.System.Data.DataColumn
        
        Private columnQTYMOVED As Global.System.Data.DataColumn
        
        Private columnSTATUS As Global.System.Data.DataColumn
        
        Private columnDROPID As Global.System.Data.DataColumn
        
        Private columnLOC As Global.System.Data.DataColumn
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnPACKKEY As Global.System.Data.DataColumn
        
        Private columnUPDATESOURCE As Global.System.Data.DataColumn
        
        Private columnCARTONGROUP As Global.System.Data.DataColumn
        
        Private columnCARTONTYPE As Global.System.Data.DataColumn
        
        Private columnTOLOC As Global.System.Data.DataColumn
        
        Private columnDOREPLENISH As Global.System.Data.DataColumn
        
        Private columnREPLENISHZONE As Global.System.Data.DataColumn
        
        Private columnDOCARTONIZE As Global.System.Data.DataColumn
        
        Private columnPICKMETHOD As Global.System.Data.DataColumn
        
        Private columnWAVEKEY As Global.System.Data.DataColumn
        
        Private columnEFFECTIVEDATE As Global.System.Data.DataColumn
        
        Private columnADDDATE As Global.System.Data.DataColumn
        
        Private columnADDWHO As Global.System.Data.DataColumn
        
        Private columnEDITDATE As Global.System.Data.DataColumn
        
        Private columnEDITWHO As Global.System.Data.DataColumn
        
        Private columnFORTE_FLAG As Global.System.Data.DataColumn
        
        Private columnTRAFFICCOP As Global.System.Data.DataColumn
        
        Private columnARCHIVECOP As Global.System.Data.DataColumn
        
        Private columnOPTIMIZECOP As Global.System.Data.DataColumn
        
        Private columnLOADID As Global.System.Data.DataColumn
        
        Private columnSTOP As Global.System.Data.DataColumn
        
        Private columnROUTE As Global.System.Data.DataColumn
        
        Private columnDOOR As Global.System.Data.DataColumn
        
        Private columnTRACKINGID As Global.System.Data.DataColumn
        
        Private columnFREIGHTCHARGES As Global.System.Data.DataColumn
        
        Private columnINTERMODALVEHICLE As Global.System.Data.DataColumn
        
        Private columnEFQTY As Global.System.Data.DataColumn
        
        Private columnNOTES As Global.System.Data.DataColumn
        
        Private columnRfeKey1 As Global.System.Data.DataColumn
        
        Private columnRfeKey2 As Global.System.Data.DataColumn
        
        Private columnRfeKey3 As Global.System.Data.DataColumn
        
        Private columnExtkey4 As Global.System.Data.DataColumn
        
        Private columnRfelino3 As Global.System.Data.DataColumn
        
        Private columnExtLin2 As Global.System.Data.DataColumn
        
        Private columnCarPickId As Global.System.Data.DataColumn
        
        Private columnCarPickTrips As Global.System.Data.DataColumn
        
        Private columnCarPickNo As Global.System.Data.DataColumn
        
        Private columnPrintMark As Global.System.Data.DataColumn
        
        Private columnGUINO As Global.System.Data.DataColumn
        
        Private columnGUIDATE As Global.System.Data.DataColumn
        
        Private columnCURCY As Global.System.Data.DataColumn
        
        Private columnTaxType As Global.System.Data.DataColumn
        
        Private columnSTO As Global.System.Data.DataColumn
        
        Private columnSTOLINENO As Global.System.Data.DataColumn
        
        Private columnBOOKDESC As Global.System.Data.DataColumn
        
        Private columnC_CONTACT1 As Global.System.Data.DataColumn
        
        Private columnC_ADDRESS1 As Global.System.Data.DataColumn
        
        Private columnKUNDEUINR As Global.System.Data.DataColumn
        
        Private columnTAX01 As Global.System.Data.DataColumn
        
        Private columnPRICE As Global.System.Data.DataColumn
        
        Private columnUNITPRICE As Global.System.Data.DataColumn
        
        Private columnEXTERNORDERKEY As Global.System.Data.DataColumn
        
        Private columnEXTERNLINENO As Global.System.Data.DataColumn
        
        Private columnDeliveryKey As Global.System.Data.DataColumn
        
        Private columnCaseLable As Global.System.Data.DataColumn
        
        Private columnC_KEEPPY As Global.System.Data.DataColumn
        
        Private columnCombinationNumber As Global.System.Data.DataColumn
        
        Private columnCombinationRule As Global.System.Data.DataColumn
        
        Private columnC_PHONE1 As Global.System.Data.DataColumn
        
        Private columnC_PHONE2 As Global.System.Data.DataColumn
        
        Private columnCURRENCY As Global.System.Data.DataColumn
        
        Private columnPRICE_RATE As Global.System.Data.DataColumn
        
        Private columnBUSR2 As Global.System.Data.DataColumn
        
        Private columnBUSR3 As Global.System.Data.DataColumn
        
        Private columnDESCR As Global.System.Data.DataColumn
        
        Private columnPICKQTY As Global.System.Data.DataColumn
        
        Private columnPACKQTY As Global.System.Data.DataColumn
        
        Private columnPART As Global.System.Data.DataColumn
        
        Private columnC_ZIP As Global.System.Data.DataColumn
        
        Private columnAmount As Global.System.Data.DataColumn
        
        Private columnRandomNumber As Global.System.Data.DataColumn
        
        Private columnPlateNo As Global.System.Data.DataColumn
        
        Private columnPlateSTATUS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Vw_PICKDETAIL_Rate"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property GENNUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGENNUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PICKDETAILKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPICKDETAILKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CASEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PICKHEADERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPICKHEADERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ORDERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ORDERLINENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERLINENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LOTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STORERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTORERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SKUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ALTSKUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALTSKU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UOMQTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUOMQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property QTYMOVEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTYMOVED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DROPIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDROPID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PACKKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPACKKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UPDATESOURCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDATESOURCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CARTONGROUPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARTONGROUP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CARTONTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARTONTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TOLOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOLOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DOREPLENISHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOREPLENISH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property REPLENISHZONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPLENISHZONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DOCARTONIZEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOCARTONIZE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PICKMETHODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPICKMETHOD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WAVEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWAVEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EFFECTIVEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEFFECTIVEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ADDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ADDWHOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDWHO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EDITDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDITDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EDITWHOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDITWHO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FORTE_FLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFORTE_FLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TRAFFICCOPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRAFFICCOP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ARCHIVECOPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnARCHIVECOP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OPTIMIZECOPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPTIMIZECOP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LOADIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOADID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STOPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ROUTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROUTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DOORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TRACKINGIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRACKINGID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FREIGHTCHARGESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFREIGHTCHARGES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property INTERMODALVEHICLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTERMODALVEHICLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EFQTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEFQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOTESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOTES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RfeKey1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRfeKey1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RfeKey2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRfeKey2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RfeKey3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRfeKey3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Extkey4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtkey4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Rfelino3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRfelino3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ExtLin2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtLin2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CarPickIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCarPickId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CarPickTripsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCarPickTrips
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CarPickNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCarPickNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PrintMarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrintMark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property GUINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUINO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property GUIDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUIDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CURCYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURCY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TaxTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STOLINENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOLINENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BOOKDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBOOKDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_CONTACT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_CONTACT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_ADDRESS1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_ADDRESS1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property KUNDEUINRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKUNDEUINR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TAX01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAX01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UNITPRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNITPRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EXTERNORDERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTERNORDERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EXTERNLINENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTERNLINENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DeliveryKeyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeliveryKey
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CaseLableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseLable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_KEEPPYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_KEEPPY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CombinationNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCombinationNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CombinationRuleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCombinationRule
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_PHONE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_PHONE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_PHONE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_PHONE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CURRENCYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURRENCY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PRICE_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRICE_RATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BUSR2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUSR2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BUSR3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUSR3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DESCRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PICKQTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPICKQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PACKQTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPACKQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PARTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPART
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_ZIPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_ZIP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RandomNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRandomNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PlateNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlateNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PlateSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlateSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Vw_PICKDETAIL_RateRow
            Get
                Return CType(Me.Rows(index),Vw_PICKDETAIL_RateRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Vw_PICKDETAIL_RateRowChanging As Vw_PICKDETAIL_RateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Vw_PICKDETAIL_RateRowChanged As Vw_PICKDETAIL_RateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Vw_PICKDETAIL_RateRowDeleting As Vw_PICKDETAIL_RateRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Vw_PICKDETAIL_RateRowDeleted As Vw_PICKDETAIL_RateRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddVw_PICKDETAIL_RateRow(ByVal row As Vw_PICKDETAIL_RateRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddVw_PICKDETAIL_RateRow( _
                    ByVal GENNUMBER As Decimal,  _
                    ByVal PICKDETAILKEY As String,  _
                    ByVal CASEID As String,  _
                    ByVal PICKHEADERKEY As String,  _
                    ByVal ORDERKEY As String,  _
                    ByVal ORDERLINENUMBER As String,  _
                    ByVal LOT As String,  _
                    ByVal STORERKEY As String,  _
                    ByVal SKU As String,  _
                    ByVal ALTSKU As String,  _
                    ByVal UOM As String,  _
                    ByVal UOMQTY As Decimal,  _
                    ByVal QTY As Decimal,  _
                    ByVal QTYMOVED As Decimal,  _
                    ByVal STATUS As String,  _
                    ByVal DROPID As String,  _
                    ByVal LOC As String,  _
                    ByVal ID As String,  _
                    ByVal PACKKEY As String,  _
                    ByVal UPDATESOURCE As String,  _
                    ByVal CARTONGROUP As String,  _
                    ByVal CARTONTYPE As String,  _
                    ByVal TOLOC As String,  _
                    ByVal DOREPLENISH As String,  _
                    ByVal REPLENISHZONE As String,  _
                    ByVal DOCARTONIZE As String,  _
                    ByVal PICKMETHOD As String,  _
                    ByVal WAVEKEY As String,  _
                    ByVal EFFECTIVEDATE As Date,  _
                    ByVal ADDDATE As Date,  _
                    ByVal ADDWHO As String,  _
                    ByVal EDITDATE As Date,  _
                    ByVal EDITWHO As String,  _
                    ByVal FORTE_FLAG As String,  _
                    ByVal TRAFFICCOP As String,  _
                    ByVal ARCHIVECOP As String,  _
                    ByVal OPTIMIZECOP As String,  _
                    ByVal LOADID As Decimal,  _
                    ByVal _STOP As Decimal,  _
                    ByVal ROUTE As String,  _
                    ByVal DOOR As String,  _
                    ByVal TRACKINGID As String,  _
                    ByVal FREIGHTCHARGES As Decimal,  _
                    ByVal INTERMODALVEHICLE As String,  _
                    ByVal EFQTY As Decimal,  _
                    ByVal NOTES As String,  _
                    ByVal RfeKey1 As String,  _
                    ByVal RfeKey2 As String,  _
                    ByVal RfeKey3 As String,  _
                    ByVal Extkey4 As String,  _
                    ByVal Rfelino3 As String,  _
                    ByVal ExtLin2 As String,  _
                    ByVal CarPickId As String,  _
                    ByVal CarPickTrips As String,  _
                    ByVal CarPickNo As String,  _
                    ByVal PrintMark As String,  _
                    ByVal GUINO As String,  _
                    ByVal GUIDATE As Date,  _
                    ByVal CURCY As String,  _
                    ByVal TaxType As String,  _
                    ByVal STO As String,  _
                    ByVal STOLINENO As String,  _
                    ByVal BOOKDESC As String,  _
                    ByVal C_CONTACT1 As String,  _
                    ByVal C_ADDRESS1 As String,  _
                    ByVal KUNDEUINR As String,  _
                    ByVal TAX01 As Decimal,  _
                    ByVal PRICE As Decimal,  _
                    ByVal UNITPRICE As Decimal,  _
                    ByVal EXTERNORDERKEY As String,  _
                    ByVal EXTERNLINENO As String,  _
                    ByVal DeliveryKey As String,  _
                    ByVal CaseLable As String,  _
                    ByVal C_KEEPPY As Decimal,  _
                    ByVal CombinationNumber As String,  _
                    ByVal CombinationRule As String,  _
                    ByVal C_PHONE1 As String,  _
                    ByVal C_PHONE2 As String,  _
                    ByVal CURRENCY As String,  _
                    ByVal PRICE_RATE As Decimal,  _
                    ByVal BUSR2 As String,  _
                    ByVal BUSR3 As String,  _
                    ByVal DESCR As String,  _
                    ByVal PICKQTY As Integer,  _
                    ByVal PACKQTY As Integer,  _
                    ByVal PART As String,  _
                    ByVal C_ZIP As String,  _
                    ByVal Amount As Decimal,  _
                    ByVal RandomNumber As String,  _
                    ByVal PlateNo As String,  _
                    ByVal PlateSTATUS As String) As Vw_PICKDETAIL_RateRow
            Dim rowVw_PICKDETAIL_RateRow As Vw_PICKDETAIL_RateRow = CType(Me.NewRow,Vw_PICKDETAIL_RateRow)
            Dim columnValuesArray() As Object = New Object() {GENNUMBER, PICKDETAILKEY, CASEID, PICKHEADERKEY, ORDERKEY, ORDERLINENUMBER, LOT, STORERKEY, SKU, ALTSKU, UOM, UOMQTY, QTY, QTYMOVED, STATUS, DROPID, LOC, ID, PACKKEY, UPDATESOURCE, CARTONGROUP, CARTONTYPE, TOLOC, DOREPLENISH, REPLENISHZONE, DOCARTONIZE, PICKMETHOD, WAVEKEY, EFFECTIVEDATE, ADDDATE, ADDWHO, EDITDATE, EDITWHO, FORTE_FLAG, TRAFFICCOP, ARCHIVECOP, OPTIMIZECOP, LOADID, _STOP, ROUTE, DOOR, TRACKINGID, FREIGHTCHARGES, INTERMODALVEHICLE, EFQTY, NOTES, RfeKey1, RfeKey2, RfeKey3, Extkey4, Rfelino3, ExtLin2, CarPickId, CarPickTrips, CarPickNo, PrintMark, GUINO, GUIDATE, CURCY, TaxType, STO, STOLINENO, BOOKDESC, C_CONTACT1, C_ADDRESS1, KUNDEUINR, TAX01, PRICE, UNITPRICE, EXTERNORDERKEY, EXTERNLINENO, DeliveryKey, CaseLable, C_KEEPPY, CombinationNumber, CombinationRule, C_PHONE1, C_PHONE2, CURRENCY, PRICE_RATE, BUSR2, BUSR3, DESCR, PICKQTY, PACKQTY, PART, C_ZIP, Amount, RandomNumber, PlateNo, PlateSTATUS}
            rowVw_PICKDETAIL_RateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVw_PICKDETAIL_RateRow)
            Return rowVw_PICKDETAIL_RateRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByPICKDETAILKEYORDERKEYORDERLINENUMBERSTORERKEYLOC(ByVal PICKDETAILKEY As String, ByVal ORDERKEY As String, ByVal ORDERLINENUMBER As String, ByVal STORERKEY As String, ByVal LOC As String) As Vw_PICKDETAIL_RateRow
            Return CType(Me.Rows.Find(New Object() {PICKDETAILKEY, ORDERKEY, ORDERLINENUMBER, STORERKEY, LOC}),Vw_PICKDETAIL_RateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Vw_PICKDETAIL_RateDataTable = CType(MyBase.Clone,Vw_PICKDETAIL_RateDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Vw_PICKDETAIL_RateDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGENNUMBER = MyBase.Columns("GENNUMBER")
            Me.columnPICKDETAILKEY = MyBase.Columns("PICKDETAILKEY")
            Me.columnCASEID = MyBase.Columns("CASEID")
            Me.columnPICKHEADERKEY = MyBase.Columns("PICKHEADERKEY")
            Me.columnORDERKEY = MyBase.Columns("ORDERKEY")
            Me.columnORDERLINENUMBER = MyBase.Columns("ORDERLINENUMBER")
            Me.columnLOT = MyBase.Columns("LOT")
            Me.columnSTORERKEY = MyBase.Columns("STORERKEY")
            Me.columnSKU = MyBase.Columns("SKU")
            Me.columnALTSKU = MyBase.Columns("ALTSKU")
            Me.columnUOM = MyBase.Columns("UOM")
            Me.columnUOMQTY = MyBase.Columns("UOMQTY")
            Me.columnQTY = MyBase.Columns("QTY")
            Me.columnQTYMOVED = MyBase.Columns("QTYMOVED")
            Me.columnSTATUS = MyBase.Columns("STATUS")
            Me.columnDROPID = MyBase.Columns("DROPID")
            Me.columnLOC = MyBase.Columns("LOC")
            Me.columnID = MyBase.Columns("ID")
            Me.columnPACKKEY = MyBase.Columns("PACKKEY")
            Me.columnUPDATESOURCE = MyBase.Columns("UPDATESOURCE")
            Me.columnCARTONGROUP = MyBase.Columns("CARTONGROUP")
            Me.columnCARTONTYPE = MyBase.Columns("CARTONTYPE")
            Me.columnTOLOC = MyBase.Columns("TOLOC")
            Me.columnDOREPLENISH = MyBase.Columns("DOREPLENISH")
            Me.columnREPLENISHZONE = MyBase.Columns("REPLENISHZONE")
            Me.columnDOCARTONIZE = MyBase.Columns("DOCARTONIZE")
            Me.columnPICKMETHOD = MyBase.Columns("PICKMETHOD")
            Me.columnWAVEKEY = MyBase.Columns("WAVEKEY")
            Me.columnEFFECTIVEDATE = MyBase.Columns("EFFECTIVEDATE")
            Me.columnADDDATE = MyBase.Columns("ADDDATE")
            Me.columnADDWHO = MyBase.Columns("ADDWHO")
            Me.columnEDITDATE = MyBase.Columns("EDITDATE")
            Me.columnEDITWHO = MyBase.Columns("EDITWHO")
            Me.columnFORTE_FLAG = MyBase.Columns("FORTE_FLAG")
            Me.columnTRAFFICCOP = MyBase.Columns("TRAFFICCOP")
            Me.columnARCHIVECOP = MyBase.Columns("ARCHIVECOP")
            Me.columnOPTIMIZECOP = MyBase.Columns("OPTIMIZECOP")
            Me.columnLOADID = MyBase.Columns("LOADID")
            Me.columnSTOP = MyBase.Columns("STOP")
            Me.columnROUTE = MyBase.Columns("ROUTE")
            Me.columnDOOR = MyBase.Columns("DOOR")
            Me.columnTRACKINGID = MyBase.Columns("TRACKINGID")
            Me.columnFREIGHTCHARGES = MyBase.Columns("FREIGHTCHARGES")
            Me.columnINTERMODALVEHICLE = MyBase.Columns("INTERMODALVEHICLE")
            Me.columnEFQTY = MyBase.Columns("EFQTY")
            Me.columnNOTES = MyBase.Columns("NOTES")
            Me.columnRfeKey1 = MyBase.Columns("RfeKey1")
            Me.columnRfeKey2 = MyBase.Columns("RfeKey2")
            Me.columnRfeKey3 = MyBase.Columns("RfeKey3")
            Me.columnExtkey4 = MyBase.Columns("Extkey4")
            Me.columnRfelino3 = MyBase.Columns("Rfelino3")
            Me.columnExtLin2 = MyBase.Columns("ExtLin2")
            Me.columnCarPickId = MyBase.Columns("CarPickId")
            Me.columnCarPickTrips = MyBase.Columns("CarPickTrips")
            Me.columnCarPickNo = MyBase.Columns("CarPickNo")
            Me.columnPrintMark = MyBase.Columns("PrintMark")
            Me.columnGUINO = MyBase.Columns("GUINO")
            Me.columnGUIDATE = MyBase.Columns("GUIDATE")
            Me.columnCURCY = MyBase.Columns("CURCY")
            Me.columnTaxType = MyBase.Columns("TaxType")
            Me.columnSTO = MyBase.Columns("STO")
            Me.columnSTOLINENO = MyBase.Columns("STOLINENO")
            Me.columnBOOKDESC = MyBase.Columns("BOOKDESC")
            Me.columnC_CONTACT1 = MyBase.Columns("C_CONTACT1")
            Me.columnC_ADDRESS1 = MyBase.Columns("C_ADDRESS1")
            Me.columnKUNDEUINR = MyBase.Columns("KUNDEUINR")
            Me.columnTAX01 = MyBase.Columns("TAX01")
            Me.columnPRICE = MyBase.Columns("PRICE")
            Me.columnUNITPRICE = MyBase.Columns("UNITPRICE")
            Me.columnEXTERNORDERKEY = MyBase.Columns("EXTERNORDERKEY")
            Me.columnEXTERNLINENO = MyBase.Columns("EXTERNLINENO")
            Me.columnDeliveryKey = MyBase.Columns("DeliveryKey")
            Me.columnCaseLable = MyBase.Columns("CaseLable")
            Me.columnC_KEEPPY = MyBase.Columns("C_KEEPPY")
            Me.columnCombinationNumber = MyBase.Columns("CombinationNumber")
            Me.columnCombinationRule = MyBase.Columns("CombinationRule")
            Me.columnC_PHONE1 = MyBase.Columns("C_PHONE1")
            Me.columnC_PHONE2 = MyBase.Columns("C_PHONE2")
            Me.columnCURRENCY = MyBase.Columns("CURRENCY")
            Me.columnPRICE_RATE = MyBase.Columns("PRICE_RATE")
            Me.columnBUSR2 = MyBase.Columns("BUSR2")
            Me.columnBUSR3 = MyBase.Columns("BUSR3")
            Me.columnDESCR = MyBase.Columns("DESCR")
            Me.columnPICKQTY = MyBase.Columns("PICKQTY")
            Me.columnPACKQTY = MyBase.Columns("PACKQTY")
            Me.columnPART = MyBase.Columns("PART")
            Me.columnC_ZIP = MyBase.Columns("C_ZIP")
            Me.columnAmount = MyBase.Columns("Amount")
            Me.columnRandomNumber = MyBase.Columns("RandomNumber")
            Me.columnPlateNo = MyBase.Columns("PlateNo")
            Me.columnPlateSTATUS = MyBase.Columns("PlateSTATUS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGENNUMBER = New Global.System.Data.DataColumn("GENNUMBER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGENNUMBER)
            Me.columnPICKDETAILKEY = New Global.System.Data.DataColumn("PICKDETAILKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPICKDETAILKEY)
            Me.columnCASEID = New Global.System.Data.DataColumn("CASEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASEID)
            Me.columnPICKHEADERKEY = New Global.System.Data.DataColumn("PICKHEADERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPICKHEADERKEY)
            Me.columnORDERKEY = New Global.System.Data.DataColumn("ORDERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERKEY)
            Me.columnORDERLINENUMBER = New Global.System.Data.DataColumn("ORDERLINENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERLINENUMBER)
            Me.columnLOT = New Global.System.Data.DataColumn("LOT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOT)
            Me.columnSTORERKEY = New Global.System.Data.DataColumn("STORERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTORERKEY)
            Me.columnSKU = New Global.System.Data.DataColumn("SKU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKU)
            Me.columnALTSKU = New Global.System.Data.DataColumn("ALTSKU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALTSKU)
            Me.columnUOM = New Global.System.Data.DataColumn("UOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUOM)
            Me.columnUOMQTY = New Global.System.Data.DataColumn("UOMQTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUOMQTY)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.columnQTYMOVED = New Global.System.Data.DataColumn("QTYMOVED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTYMOVED)
            Me.columnSTATUS = New Global.System.Data.DataColumn("STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATUS)
            Me.columnDROPID = New Global.System.Data.DataColumn("DROPID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDROPID)
            Me.columnLOC = New Global.System.Data.DataColumn("LOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOC)
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnPACKKEY = New Global.System.Data.DataColumn("PACKKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPACKKEY)
            Me.columnUPDATESOURCE = New Global.System.Data.DataColumn("UPDATESOURCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDATESOURCE)
            Me.columnCARTONGROUP = New Global.System.Data.DataColumn("CARTONGROUP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARTONGROUP)
            Me.columnCARTONTYPE = New Global.System.Data.DataColumn("CARTONTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARTONTYPE)
            Me.columnTOLOC = New Global.System.Data.DataColumn("TOLOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOLOC)
            Me.columnDOREPLENISH = New Global.System.Data.DataColumn("DOREPLENISH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOREPLENISH)
            Me.columnREPLENISHZONE = New Global.System.Data.DataColumn("REPLENISHZONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPLENISHZONE)
            Me.columnDOCARTONIZE = New Global.System.Data.DataColumn("DOCARTONIZE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOCARTONIZE)
            Me.columnPICKMETHOD = New Global.System.Data.DataColumn("PICKMETHOD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPICKMETHOD)
            Me.columnWAVEKEY = New Global.System.Data.DataColumn("WAVEKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWAVEKEY)
            Me.columnEFFECTIVEDATE = New Global.System.Data.DataColumn("EFFECTIVEDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEFFECTIVEDATE)
            Me.columnADDDATE = New Global.System.Data.DataColumn("ADDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDDATE)
            Me.columnADDWHO = New Global.System.Data.DataColumn("ADDWHO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDWHO)
            Me.columnEDITDATE = New Global.System.Data.DataColumn("EDITDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDITDATE)
            Me.columnEDITWHO = New Global.System.Data.DataColumn("EDITWHO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDITWHO)
            Me.columnFORTE_FLAG = New Global.System.Data.DataColumn("FORTE_FLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFORTE_FLAG)
            Me.columnTRAFFICCOP = New Global.System.Data.DataColumn("TRAFFICCOP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRAFFICCOP)
            Me.columnARCHIVECOP = New Global.System.Data.DataColumn("ARCHIVECOP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnARCHIVECOP)
            Me.columnOPTIMIZECOP = New Global.System.Data.DataColumn("OPTIMIZECOP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPTIMIZECOP)
            Me.columnLOADID = New Global.System.Data.DataColumn("LOADID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOADID)
            Me.columnSTOP = New Global.System.Data.DataColumn("STOP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnSTOP.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "STOPColumn")
            Me.columnSTOP.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnSTOP")
            Me.columnSTOP.ExtendedProperties.Add("Generator_UserColumnName", "STOP")
            MyBase.Columns.Add(Me.columnSTOP)
            Me.columnROUTE = New Global.System.Data.DataColumn("ROUTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROUTE)
            Me.columnDOOR = New Global.System.Data.DataColumn("DOOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOOR)
            Me.columnTRACKINGID = New Global.System.Data.DataColumn("TRACKINGID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRACKINGID)
            Me.columnFREIGHTCHARGES = New Global.System.Data.DataColumn("FREIGHTCHARGES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFREIGHTCHARGES)
            Me.columnINTERMODALVEHICLE = New Global.System.Data.DataColumn("INTERMODALVEHICLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTERMODALVEHICLE)
            Me.columnEFQTY = New Global.System.Data.DataColumn("EFQTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEFQTY)
            Me.columnNOTES = New Global.System.Data.DataColumn("NOTES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOTES)
            Me.columnRfeKey1 = New Global.System.Data.DataColumn("RfeKey1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRfeKey1)
            Me.columnRfeKey2 = New Global.System.Data.DataColumn("RfeKey2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRfeKey2)
            Me.columnRfeKey3 = New Global.System.Data.DataColumn("RfeKey3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRfeKey3)
            Me.columnExtkey4 = New Global.System.Data.DataColumn("Extkey4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtkey4)
            Me.columnRfelino3 = New Global.System.Data.DataColumn("Rfelino3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRfelino3)
            Me.columnExtLin2 = New Global.System.Data.DataColumn("ExtLin2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtLin2)
            Me.columnCarPickId = New Global.System.Data.DataColumn("CarPickId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCarPickId)
            Me.columnCarPickTrips = New Global.System.Data.DataColumn("CarPickTrips", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCarPickTrips)
            Me.columnCarPickNo = New Global.System.Data.DataColumn("CarPickNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCarPickNo)
            Me.columnPrintMark = New Global.System.Data.DataColumn("PrintMark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrintMark)
            Me.columnGUINO = New Global.System.Data.DataColumn("GUINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUINO)
            Me.columnGUIDATE = New Global.System.Data.DataColumn("GUIDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUIDATE)
            Me.columnCURCY = New Global.System.Data.DataColumn("CURCY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURCY)
            Me.columnTaxType = New Global.System.Data.DataColumn("TaxType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxType)
            Me.columnSTO = New Global.System.Data.DataColumn("STO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTO)
            Me.columnSTOLINENO = New Global.System.Data.DataColumn("STOLINENO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOLINENO)
            Me.columnBOOKDESC = New Global.System.Data.DataColumn("BOOKDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBOOKDESC)
            Me.columnC_CONTACT1 = New Global.System.Data.DataColumn("C_CONTACT1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_CONTACT1)
            Me.columnC_ADDRESS1 = New Global.System.Data.DataColumn("C_ADDRESS1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_ADDRESS1)
            Me.columnKUNDEUINR = New Global.System.Data.DataColumn("KUNDEUINR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKUNDEUINR)
            Me.columnTAX01 = New Global.System.Data.DataColumn("TAX01", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAX01)
            Me.columnPRICE = New Global.System.Data.DataColumn("PRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRICE)
            Me.columnUNITPRICE = New Global.System.Data.DataColumn("UNITPRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNITPRICE)
            Me.columnEXTERNORDERKEY = New Global.System.Data.DataColumn("EXTERNORDERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTERNORDERKEY)
            Me.columnEXTERNLINENO = New Global.System.Data.DataColumn("EXTERNLINENO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTERNLINENO)
            Me.columnDeliveryKey = New Global.System.Data.DataColumn("DeliveryKey", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeliveryKey)
            Me.columnCaseLable = New Global.System.Data.DataColumn("CaseLable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseLable)
            Me.columnC_KEEPPY = New Global.System.Data.DataColumn("C_KEEPPY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_KEEPPY)
            Me.columnCombinationNumber = New Global.System.Data.DataColumn("CombinationNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCombinationNumber)
            Me.columnCombinationRule = New Global.System.Data.DataColumn("CombinationRule", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCombinationRule)
            Me.columnC_PHONE1 = New Global.System.Data.DataColumn("C_PHONE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_PHONE1)
            Me.columnC_PHONE2 = New Global.System.Data.DataColumn("C_PHONE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_PHONE2)
            Me.columnCURRENCY = New Global.System.Data.DataColumn("CURRENCY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURRENCY)
            Me.columnPRICE_RATE = New Global.System.Data.DataColumn("PRICE_RATE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRICE_RATE)
            Me.columnBUSR2 = New Global.System.Data.DataColumn("BUSR2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUSR2)
            Me.columnBUSR3 = New Global.System.Data.DataColumn("BUSR3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUSR3)
            Me.columnDESCR = New Global.System.Data.DataColumn("DESCR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCR)
            Me.columnPICKQTY = New Global.System.Data.DataColumn("PICKQTY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPICKQTY)
            Me.columnPACKQTY = New Global.System.Data.DataColumn("PACKQTY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPACKQTY)
            Me.columnPART = New Global.System.Data.DataColumn("PART", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPART)
            Me.columnC_ZIP = New Global.System.Data.DataColumn("C_ZIP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_ZIP)
            Me.columnAmount = New Global.System.Data.DataColumn("Amount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount)
            Me.columnRandomNumber = New Global.System.Data.DataColumn("RandomNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRandomNumber)
            Me.columnPlateNo = New Global.System.Data.DataColumn("PlateNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlateNo)
            Me.columnPlateSTATUS = New Global.System.Data.DataColumn("PlateSTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlateSTATUS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPICKDETAILKEY, Me.columnORDERKEY, Me.columnORDERLINENUMBER, Me.columnSTORERKEY, Me.columnLOC}, true))
            Me.columnGENNUMBER.AllowDBNull = false
            Me.columnPICKDETAILKEY.AllowDBNull = false
            Me.columnPICKDETAILKEY.MaxLength = 18
            Me.columnCASEID.MaxLength = 20
            Me.columnPICKHEADERKEY.MaxLength = 18
            Me.columnORDERKEY.AllowDBNull = false
            Me.columnORDERKEY.MaxLength = 10
            Me.columnORDERLINENUMBER.AllowDBNull = false
            Me.columnORDERLINENUMBER.MaxLength = 5
            Me.columnLOT.MaxLength = 10
            Me.columnSTORERKEY.AllowDBNull = false
            Me.columnSTORERKEY.MaxLength = 15
            Me.columnSKU.AllowDBNull = false
            Me.columnSKU.MaxLength = 20
            Me.columnALTSKU.MaxLength = 20
            Me.columnUOM.MaxLength = 10
            Me.columnSTATUS.AllowDBNull = false
            Me.columnSTATUS.MaxLength = 10
            Me.columnDROPID.MaxLength = 18
            Me.columnLOC.AllowDBNull = false
            Me.columnLOC.MaxLength = 10
            Me.columnID.MaxLength = 18
            Me.columnPACKKEY.MaxLength = 50
            Me.columnUPDATESOURCE.MaxLength = 10
            Me.columnCARTONGROUP.MaxLength = 10
            Me.columnCARTONTYPE.MaxLength = 10
            Me.columnTOLOC.MaxLength = 10
            Me.columnDOREPLENISH.MaxLength = 1
            Me.columnREPLENISHZONE.MaxLength = 10
            Me.columnDOCARTONIZE.MaxLength = 1
            Me.columnPICKMETHOD.MaxLength = 1
            Me.columnWAVEKEY.MaxLength = 10
            Me.columnADDWHO.MaxLength = 30
            Me.columnEDITWHO.MaxLength = 30
            Me.columnFORTE_FLAG.MaxLength = 6
            Me.columnTRAFFICCOP.MaxLength = 1
            Me.columnARCHIVECOP.MaxLength = 1
            Me.columnOPTIMIZECOP.MaxLength = 1
            Me.columnROUTE.MaxLength = 18
            Me.columnDOOR.MaxLength = 18
            Me.columnTRACKINGID.MaxLength = 45
            Me.columnINTERMODALVEHICLE.MaxLength = 30
            Me.columnNOTES.MaxLength = 200
            Me.columnRfeKey1.MaxLength = 20
            Me.columnRfeKey2.MaxLength = 20
            Me.columnRfeKey3.MaxLength = 20
            Me.columnExtkey4.MaxLength = 20
            Me.columnRfelino3.MaxLength = 10
            Me.columnExtLin2.MaxLength = 10
            Me.columnCarPickId.MaxLength = 10
            Me.columnCarPickTrips.MaxLength = 10
            Me.columnCarPickNo.MaxLength = 10
            Me.columnPrintMark.MaxLength = 2
            Me.columnGUINO.MaxLength = 20
            Me.columnCURCY.MaxLength = 10
            Me.columnTaxType.MaxLength = 10
            Me.columnSTO.MaxLength = 30
            Me.columnSTOLINENO.MaxLength = 10
            Me.columnBOOKDESC.MaxLength = 30
            Me.columnC_CONTACT1.MaxLength = 100
            Me.columnC_ADDRESS1.MaxLength = 200
            Me.columnKUNDEUINR.MaxLength = 15
            Me.columnEXTERNORDERKEY.MaxLength = 30
            Me.columnEXTERNLINENO.MaxLength = 10
            Me.columnDeliveryKey.MaxLength = 30
            Me.columnCaseLable.MaxLength = 30
            Me.columnCombinationNumber.MaxLength = 20
            Me.columnCombinationRule.MaxLength = 20
            Me.columnC_PHONE1.MaxLength = 50
            Me.columnC_PHONE2.MaxLength = 50
            Me.columnCURRENCY.MaxLength = 20
            Me.columnPRICE_RATE.ReadOnly = true
            Me.columnBUSR2.MaxLength = 30
            Me.columnBUSR3.MaxLength = 30
            Me.columnDESCR.MaxLength = 160
            Me.columnPART.MaxLength = 5
            Me.columnC_ZIP.MaxLength = 18
            Me.columnRandomNumber.MaxLength = 4
            Me.columnPlateNo.MaxLength = 30
            Me.columnPlateSTATUS.AllowDBNull = false
            Me.columnPlateSTATUS.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewVw_PICKDETAIL_RateRow() As Vw_PICKDETAIL_RateRow
            Return CType(Me.NewRow,Vw_PICKDETAIL_RateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Vw_PICKDETAIL_RateRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Vw_PICKDETAIL_RateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Vw_PICKDETAIL_RateRowChangedEvent) Is Nothing) Then
                RaiseEvent Vw_PICKDETAIL_RateRowChanged(Me, New Vw_PICKDETAIL_RateRowChangeEvent(CType(e.Row,Vw_PICKDETAIL_RateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Vw_PICKDETAIL_RateRowChangingEvent) Is Nothing) Then
                RaiseEvent Vw_PICKDETAIL_RateRowChanging(Me, New Vw_PICKDETAIL_RateRowChangeEvent(CType(e.Row,Vw_PICKDETAIL_RateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Vw_PICKDETAIL_RateRowDeletedEvent) Is Nothing) Then
                RaiseEvent Vw_PICKDETAIL_RateRowDeleted(Me, New Vw_PICKDETAIL_RateRowChangeEvent(CType(e.Row,Vw_PICKDETAIL_RateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Vw_PICKDETAIL_RateRowDeletingEvent) Is Nothing) Then
                RaiseEvent Vw_PICKDETAIL_RateRowDeleting(Me, New Vw_PICKDETAIL_RateRowChangeEvent(CType(e.Row,Vw_PICKDETAIL_RateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveVw_PICKDETAIL_RateRow(ByVal row As Vw_PICKDETAIL_RateRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PRODDataSet = New PRODDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Vw_PICKDETAIL_RateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Combination_CaseDetailDataTable
        Inherits Global.System.Data.TypedTableBase(Of Combination_CaseDetailRow)
        
        Private columnItem_No As Global.System.Data.DataColumn
        
        Private columnCombinationNumber As Global.System.Data.DataColumn
        
        Private columnCombinationNumberID As Global.System.Data.DataColumn
        
        Private columnCombinationLineNumber As Global.System.Data.DataColumn
        
        Private columnCombinationType As Global.System.Data.DataColumn
        
        Private columnStorerkey As Global.System.Data.DataColumn
        
        Private columnOrderkey As Global.System.Data.DataColumn
        
        Private columnOrderkeyLineNumber As Global.System.Data.DataColumn
        
        Private columnExternorderkey As Global.System.Data.DataColumn
        
        Private columnWAVEKEY As Global.System.Data.DataColumn
        
        Private columnROUTE As Global.System.Data.DataColumn
        
        Private columnDOOR As Global.System.Data.DataColumn
        
        Private columndescr As Global.System.Data.DataColumn
        
        Private columnSku As Global.System.Data.DataColumn
        
        Private columnLoc As Global.System.Data.DataColumn
        
        Private columnQTY As Global.System.Data.DataColumn
        
        Private columnGUINO As Global.System.Data.DataColumn
        
        Private columnPACKKEY As Global.System.Data.DataColumn
        
        Private columnNOTES As Global.System.Data.DataColumn
        
        Private columnRfrkey1 As Global.System.Data.DataColumn
        
        Private columnRfrkey2 As Global.System.Data.DataColumn
        
        Private columnRfrkey3 As Global.System.Data.DataColumn
        
        Private columnADDDATE As Global.System.Data.DataColumn
        
        Private columnADDWHO As Global.System.Data.DataColumn
        
        Private columnEDITDATE As Global.System.Data.DataColumn
        
        Private columnEDITWHO As Global.System.Data.DataColumn
        
        Private columnPICKDETAILKEY As Global.System.Data.DataColumn
        
        Private columnCURCY As Global.System.Data.DataColumn
        
        Private columnTAX01 As Global.System.Data.DataColumn
        
        Private columnPRICE As Global.System.Data.DataColumn
        
        Private columnUNITPRICE As Global.System.Data.DataColumn
        
        Private columnTaxType As Global.System.Data.DataColumn
        
        Private columnWeight As Global.System.Data.DataColumn
        
        Private columnAmount As Global.System.Data.DataColumn
        
        Private columnRandomNumber As Global.System.Data.DataColumn
        
        Private columnPackMod As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Combination_CaseDetail"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Item_NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_No
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CombinationNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCombinationNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CombinationNumberIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCombinationNumberID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CombinationLineNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCombinationLineNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CombinationTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCombinationType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property StorerkeyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStorerkey
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OrderkeyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderkey
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OrderkeyLineNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderkeyLineNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ExternorderkeyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExternorderkey
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WAVEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWAVEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ROUTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROUTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DOORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property descrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SkuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property GUINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUINO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PACKKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPACKKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOTESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOTES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Rfrkey1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRfrkey1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Rfrkey2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRfrkey2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Rfrkey3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRfrkey3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ADDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ADDWHOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDWHO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EDITDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDITDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EDITWHOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDITWHO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PICKDETAILKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPICKDETAILKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CURCYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURCY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TAX01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAX01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UNITPRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNITPRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TaxTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RandomNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRandomNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PackModColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackMod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Combination_CaseDetailRow
            Get
                Return CType(Me.Rows(index),Combination_CaseDetailRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Combination_CaseDetailRowChanging As Combination_CaseDetailRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Combination_CaseDetailRowChanged As Combination_CaseDetailRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Combination_CaseDetailRowDeleting As Combination_CaseDetailRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Combination_CaseDetailRowDeleted As Combination_CaseDetailRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddCombination_CaseDetailRow(ByVal row As Combination_CaseDetailRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddCombination_CaseDetailRow( _
                    ByVal CombinationNumber As String,  _
                    ByVal CombinationNumberID As String,  _
                    ByVal CombinationLineNumber As String,  _
                    ByVal CombinationType As String,  _
                    ByVal Storerkey As String,  _
                    ByVal Orderkey As String,  _
                    ByVal OrderkeyLineNumber As String,  _
                    ByVal Externorderkey As String,  _
                    ByVal WAVEKEY As String,  _
                    ByVal ROUTE As String,  _
                    ByVal DOOR As String,  _
                    ByVal descr As String,  _
                    ByVal Sku As String,  _
                    ByVal Loc As String,  _
                    ByVal QTY As Integer,  _
                    ByVal GUINO As String,  _
                    ByVal PACKKEY As String,  _
                    ByVal NOTES As String,  _
                    ByVal Rfrkey1 As String,  _
                    ByVal Rfrkey2 As String,  _
                    ByVal Rfrkey3 As String,  _
                    ByVal ADDDATE As Date,  _
                    ByVal ADDWHO As String,  _
                    ByVal EDITDATE As Date,  _
                    ByVal EDITWHO As String,  _
                    ByVal PICKDETAILKEY As String,  _
                    ByVal CURCY As String,  _
                    ByVal TAX01 As Decimal,  _
                    ByVal PRICE As Decimal,  _
                    ByVal UNITPRICE As Decimal,  _
                    ByVal TaxType As String,  _
                    ByVal Weight As String,  _
                    ByVal Amount As Decimal,  _
                    ByVal RandomNumber As String,  _
                    ByVal PackMod As String) As Combination_CaseDetailRow
            Dim rowCombination_CaseDetailRow As Combination_CaseDetailRow = CType(Me.NewRow,Combination_CaseDetailRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CombinationNumber, CombinationNumberID, CombinationLineNumber, CombinationType, Storerkey, Orderkey, OrderkeyLineNumber, Externorderkey, WAVEKEY, ROUTE, DOOR, descr, Sku, Loc, QTY, GUINO, PACKKEY, NOTES, Rfrkey1, Rfrkey2, Rfrkey3, ADDDATE, ADDWHO, EDITDATE, EDITWHO, PICKDETAILKEY, CURCY, TAX01, PRICE, UNITPRICE, TaxType, Weight, Amount, RandomNumber, PackMod}
            rowCombination_CaseDetailRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCombination_CaseDetailRow)
            Return rowCombination_CaseDetailRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByItem_No(ByVal Item_No As Integer) As Combination_CaseDetailRow
            Return CType(Me.Rows.Find(New Object() {Item_No}),Combination_CaseDetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Combination_CaseDetailDataTable = CType(MyBase.Clone,Combination_CaseDetailDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Combination_CaseDetailDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnItem_No = MyBase.Columns("Item_No")
            Me.columnCombinationNumber = MyBase.Columns("CombinationNumber")
            Me.columnCombinationNumberID = MyBase.Columns("CombinationNumberID")
            Me.columnCombinationLineNumber = MyBase.Columns("CombinationLineNumber")
            Me.columnCombinationType = MyBase.Columns("CombinationType")
            Me.columnStorerkey = MyBase.Columns("Storerkey")
            Me.columnOrderkey = MyBase.Columns("Orderkey")
            Me.columnOrderkeyLineNumber = MyBase.Columns("OrderkeyLineNumber")
            Me.columnExternorderkey = MyBase.Columns("Externorderkey")
            Me.columnWAVEKEY = MyBase.Columns("WAVEKEY")
            Me.columnROUTE = MyBase.Columns("ROUTE")
            Me.columnDOOR = MyBase.Columns("DOOR")
            Me.columndescr = MyBase.Columns("descr")
            Me.columnSku = MyBase.Columns("Sku")
            Me.columnLoc = MyBase.Columns("Loc")
            Me.columnQTY = MyBase.Columns("QTY")
            Me.columnGUINO = MyBase.Columns("GUINO")
            Me.columnPACKKEY = MyBase.Columns("PACKKEY")
            Me.columnNOTES = MyBase.Columns("NOTES")
            Me.columnRfrkey1 = MyBase.Columns("Rfrkey1")
            Me.columnRfrkey2 = MyBase.Columns("Rfrkey2")
            Me.columnRfrkey3 = MyBase.Columns("Rfrkey3")
            Me.columnADDDATE = MyBase.Columns("ADDDATE")
            Me.columnADDWHO = MyBase.Columns("ADDWHO")
            Me.columnEDITDATE = MyBase.Columns("EDITDATE")
            Me.columnEDITWHO = MyBase.Columns("EDITWHO")
            Me.columnPICKDETAILKEY = MyBase.Columns("PICKDETAILKEY")
            Me.columnCURCY = MyBase.Columns("CURCY")
            Me.columnTAX01 = MyBase.Columns("TAX01")
            Me.columnPRICE = MyBase.Columns("PRICE")
            Me.columnUNITPRICE = MyBase.Columns("UNITPRICE")
            Me.columnTaxType = MyBase.Columns("TaxType")
            Me.columnWeight = MyBase.Columns("Weight")
            Me.columnAmount = MyBase.Columns("Amount")
            Me.columnRandomNumber = MyBase.Columns("RandomNumber")
            Me.columnPackMod = MyBase.Columns("PackMod")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnItem_No = New Global.System.Data.DataColumn("Item_No", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_No)
            Me.columnCombinationNumber = New Global.System.Data.DataColumn("CombinationNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCombinationNumber)
            Me.columnCombinationNumberID = New Global.System.Data.DataColumn("CombinationNumberID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCombinationNumberID)
            Me.columnCombinationLineNumber = New Global.System.Data.DataColumn("CombinationLineNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCombinationLineNumber)
            Me.columnCombinationType = New Global.System.Data.DataColumn("CombinationType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCombinationType)
            Me.columnStorerkey = New Global.System.Data.DataColumn("Storerkey", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStorerkey)
            Me.columnOrderkey = New Global.System.Data.DataColumn("Orderkey", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderkey)
            Me.columnOrderkeyLineNumber = New Global.System.Data.DataColumn("OrderkeyLineNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderkeyLineNumber)
            Me.columnExternorderkey = New Global.System.Data.DataColumn("Externorderkey", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExternorderkey)
            Me.columnWAVEKEY = New Global.System.Data.DataColumn("WAVEKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWAVEKEY)
            Me.columnROUTE = New Global.System.Data.DataColumn("ROUTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROUTE)
            Me.columnDOOR = New Global.System.Data.DataColumn("DOOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOOR)
            Me.columndescr = New Global.System.Data.DataColumn("descr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescr)
            Me.columnSku = New Global.System.Data.DataColumn("Sku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSku)
            Me.columnLoc = New Global.System.Data.DataColumn("Loc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoc)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.columnGUINO = New Global.System.Data.DataColumn("GUINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUINO)
            Me.columnPACKKEY = New Global.System.Data.DataColumn("PACKKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPACKKEY)
            Me.columnNOTES = New Global.System.Data.DataColumn("NOTES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOTES)
            Me.columnRfrkey1 = New Global.System.Data.DataColumn("Rfrkey1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRfrkey1)
            Me.columnRfrkey2 = New Global.System.Data.DataColumn("Rfrkey2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRfrkey2)
            Me.columnRfrkey3 = New Global.System.Data.DataColumn("Rfrkey3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRfrkey3)
            Me.columnADDDATE = New Global.System.Data.DataColumn("ADDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDDATE)
            Me.columnADDWHO = New Global.System.Data.DataColumn("ADDWHO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDWHO)
            Me.columnEDITDATE = New Global.System.Data.DataColumn("EDITDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDITDATE)
            Me.columnEDITWHO = New Global.System.Data.DataColumn("EDITWHO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDITWHO)
            Me.columnPICKDETAILKEY = New Global.System.Data.DataColumn("PICKDETAILKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPICKDETAILKEY)
            Me.columnCURCY = New Global.System.Data.DataColumn("CURCY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURCY)
            Me.columnTAX01 = New Global.System.Data.DataColumn("TAX01", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAX01)
            Me.columnPRICE = New Global.System.Data.DataColumn("PRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRICE)
            Me.columnUNITPRICE = New Global.System.Data.DataColumn("UNITPRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNITPRICE)
            Me.columnTaxType = New Global.System.Data.DataColumn("TaxType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxType)
            Me.columnWeight = New Global.System.Data.DataColumn("Weight", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeight)
            Me.columnAmount = New Global.System.Data.DataColumn("Amount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount)
            Me.columnRandomNumber = New Global.System.Data.DataColumn("RandomNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRandomNumber)
            Me.columnPackMod = New Global.System.Data.DataColumn("PackMod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackMod)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnItem_No}, true))
            Me.columnItem_No.AutoIncrement = true
            Me.columnItem_No.AutoIncrementSeed = -1
            Me.columnItem_No.AutoIncrementStep = -1
            Me.columnItem_No.AllowDBNull = false
            Me.columnItem_No.ReadOnly = true
            Me.columnItem_No.Unique = true
            Me.columnCombinationNumber.MaxLength = 20
            Me.columnCombinationNumberID.MaxLength = 20
            Me.columnCombinationLineNumber.MaxLength = 6
            Me.columnCombinationType.MaxLength = 10
            Me.columnStorerkey.MaxLength = 10
            Me.columnOrderkey.MaxLength = 20
            Me.columnOrderkeyLineNumber.MaxLength = 6
            Me.columnExternorderkey.MaxLength = 20
            Me.columnWAVEKEY.MaxLength = 20
            Me.columnROUTE.MaxLength = 10
            Me.columnDOOR.MaxLength = 20
            Me.columndescr.MaxLength = 50
            Me.columnSku.MaxLength = 20
            Me.columnLoc.MaxLength = 20
            Me.columnGUINO.MaxLength = 20
            Me.columnPACKKEY.MaxLength = 20
            Me.columnNOTES.MaxLength = 200
            Me.columnRfrkey1.MaxLength = 200
            Me.columnRfrkey2.MaxLength = 200
            Me.columnRfrkey3.MaxLength = 200
            Me.columnADDWHO.MaxLength = 20
            Me.columnEDITWHO.MaxLength = 20
            Me.columnPICKDETAILKEY.MaxLength = 18
            Me.columnCURCY.MaxLength = 10
            Me.columnTaxType.MaxLength = 10
            Me.columnWeight.MaxLength = 20
            Me.columnRandomNumber.MaxLength = 4
            Me.columnPackMod.MaxLength = 30
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewCombination_CaseDetailRow() As Combination_CaseDetailRow
            Return CType(Me.NewRow,Combination_CaseDetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Combination_CaseDetailRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Combination_CaseDetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Combination_CaseDetailRowChangedEvent) Is Nothing) Then
                RaiseEvent Combination_CaseDetailRowChanged(Me, New Combination_CaseDetailRowChangeEvent(CType(e.Row,Combination_CaseDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Combination_CaseDetailRowChangingEvent) Is Nothing) Then
                RaiseEvent Combination_CaseDetailRowChanging(Me, New Combination_CaseDetailRowChangeEvent(CType(e.Row,Combination_CaseDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Combination_CaseDetailRowDeletedEvent) Is Nothing) Then
                RaiseEvent Combination_CaseDetailRowDeleted(Me, New Combination_CaseDetailRowChangeEvent(CType(e.Row,Combination_CaseDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Combination_CaseDetailRowDeletingEvent) Is Nothing) Then
                RaiseEvent Combination_CaseDetailRowDeleting(Me, New Combination_CaseDetailRowChangeEvent(CType(e.Row,Combination_CaseDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveCombination_CaseDetailRow(ByVal row As Combination_CaseDetailRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PRODDataSet = New PRODDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Combination_CaseDetailDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Vw_Case_Addr_InvoiceDataTable
        Inherits Global.System.Data.TypedTableBase(Of Vw_Case_Addr_InvoiceRow)
        
        Private columnPICKDETAILKEY As Global.System.Data.DataColumn
        
        Private columnCASEID As Global.System.Data.DataColumn
        
        Private columnPICKHEADERKEY As Global.System.Data.DataColumn
        
        Private columnEXTERNORDERKEY As Global.System.Data.DataColumn
        
        Private columnORDERKEY As Global.System.Data.DataColumn
        
        Private columnORDERLINENUMBER As Global.System.Data.DataColumn
        
        Private columnSTORERKEY As Global.System.Data.DataColumn
        
        Private columnSKU As Global.System.Data.DataColumn
        
        Private columnALTSKU As Global.System.Data.DataColumn
        
        Private columnQTY As Global.System.Data.DataColumn
        
        Private columnPKQTY As Global.System.Data.DataColumn
        
        Private columnOPQTY As Global.System.Data.DataColumn
        
        Private columnSTATUS As Global.System.Data.DataColumn
        
        Private columnLOC As Global.System.Data.DataColumn
        
        Private columnTOLOC As Global.System.Data.DataColumn
        
        Private columnWAVEKEY As Global.System.Data.DataColumn
        
        Private columnEFFECTIVEDATE As Global.System.Data.DataColumn
        
        Private columnCONSIGNEEKEY As Global.System.Data.DataColumn
        
        Private columnROUTE As Global.System.Data.DataColumn
        
        Private columnDOOR As Global.System.Data.DataColumn
        
        Private columnSOURCEKEY As Global.System.Data.DataColumn
        
        Private columnEDITDATE As Global.System.Data.DataColumn
        
        Private columnEDITWHO As Global.System.Data.DataColumn
        
        Private columnPackMod As Global.System.Data.DataColumn
        
        Private columnGUINO As Global.System.Data.DataColumn
        
        Private columnPOKEYLINENUMBER As Global.System.Data.DataColumn
        
        Private columnPOKEY As Global.System.Data.DataColumn
        
        Private columnCASELABLE As Global.System.Data.DataColumn
        
        Private columnSHIPDATE As Global.System.Data.DataColumn
        
        Private columnSprint As Global.System.Data.DataColumn
        
        Private columnLastShipment As Global.System.Data.DataColumn
        
        Private columnCompany As Global.System.Data.DataColumn
        
        Private columnS_Address1 As Global.System.Data.DataColumn
        
        Private columnS_Address2 As Global.System.Data.DataColumn
        
        Private columnS_Phone1 As Global.System.Data.DataColumn
        
        Private columnS_Phone2 As Global.System.Data.DataColumn
        
        Private columnC_CONTACT1 As Global.System.Data.DataColumn
        
        Private columnC_ADDRESS1 As Global.System.Data.DataColumn
        
        Private columnC_ZIP As Global.System.Data.DataColumn
        
        Private columnC_PHONE1 As Global.System.Data.DataColumn
        
        Private columnC_KEEPPY As Global.System.Data.DataColumn
        
        Private columnDESCR As Global.System.Data.DataColumn
        
        Private columnBILLTOKEY As Global.System.Data.DataColumn
        
        Private columnCURCY As Global.System.Data.DataColumn
        
        Private columnTAX01 As Global.System.Data.DataColumn
        
        Private columnPRICE As Global.System.Data.DataColumn
        
        Private columnUNITPRICE As Global.System.Data.DataColumn
        
        Private columnTaxType As Global.System.Data.DataColumn
        
        Private columnPRICE_RATE As Global.System.Data.DataColumn
        
        Private columnC_PHONE2 As Global.System.Data.DataColumn
        
        Private columnSALESPERSON As Global.System.Data.DataColumn
        
        Private columnPrintMark As Global.System.Data.DataColumn
        
        Private columnC_COUNTRY As Global.System.Data.DataColumn
        
        Private columnC_CITY As Global.System.Data.DataColumn
        
        Private columnC_STATE As Global.System.Data.DataColumn
        
        Private columnC_EMAIL1 As Global.System.Data.DataColumn
        
        Private columnWeight As Global.System.Data.DataColumn
        
        Private columnAmount As Global.System.Data.DataColumn
        
        Private columnRandomNumber As Global.System.Data.DataColumn
        
        Private columnBarcode_image As Global.System.Data.DataColumn
        
        Private columnBarcode_image2 As Global.System.Data.DataColumn
        
        Private columnBarcode_image3 As Global.System.Data.DataColumn
        
        Private columnBarcode_image4 As Global.System.Data.DataColumn
        
        Private columnBarcode_image1 As Global.System.Data.DataColumn
        
        Private columnNOTES As Global.System.Data.DataColumn
        
        Private columnAREA As Global.System.Data.DataColumn
        
        Private columnRSNO As Global.System.Data.DataColumn
        
        Private columnEQID As Global.System.Data.DataColumn
        
        Private columnTOTALVALUE As Global.System.Data.DataColumn
        
        Private columnINCOTERM As Global.System.Data.DataColumn
        
        Private columnStoreType2 As Global.System.Data.DataColumn
        
        Private columnSUSR5 As Global.System.Data.DataColumn
        
        Private _columnDESCR1 As Global.System.Data.DataColumn
        
        Private columnSPSHIPDATE As Global.System.Data.DataColumn
        
        Private columnSTEP2 As Global.System.Data.DataColumn
        
        Private columnSPSHIPDATE1 As Global.System.Data.DataColumn
        
        Private columnLabx01 As Global.System.Data.DataColumn
        
        Private columnLabx02 As Global.System.Data.DataColumn
        
        Private columnLabx03 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Vw_Case_Addr_Invoice"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PICKDETAILKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPICKDETAILKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CASEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PICKHEADERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPICKHEADERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EXTERNORDERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTERNORDERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ORDERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ORDERLINENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERLINENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STORERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTORERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SKUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ALTSKUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALTSKU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PKQTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPKQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OPQTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TOLOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOLOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WAVEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWAVEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EFFECTIVEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEFFECTIVEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONSIGNEEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONSIGNEEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ROUTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROUTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DOORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SOURCEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOURCEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EDITDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDITDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EDITWHOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDITWHO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PackModColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackMod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property GUINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUINO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POKEYLINENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOKEYLINENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CASELABLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASELABLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHIPDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHIPDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SprintColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSprint
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LastShipmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastShipment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CompanyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompany
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property S_Address1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_Address1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property S_Address2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_Address2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property S_Phone1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_Phone1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property S_Phone2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_Phone2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_CONTACT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_CONTACT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_ADDRESS1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_ADDRESS1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_ZIPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_ZIP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_PHONE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_PHONE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_KEEPPYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_KEEPPY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DESCRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BILLTOKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBILLTOKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CURCYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURCY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TAX01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAX01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UNITPRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNITPRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TaxTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PRICE_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRICE_RATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_PHONE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_PHONE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SALESPERSONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALESPERSON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PrintMarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrintMark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_COUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_CITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_STATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_STATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_EMAIL1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_EMAIL1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RandomNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRandomNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Barcode_imageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcode_image
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Barcode_image2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcode_image2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Barcode_image3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcode_image3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Barcode_image4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcode_image4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Barcode_image1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarcode_image1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOTESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOTES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property AREAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAREA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RSNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRSNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EQIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TOTALVALUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALVALUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property INCOTERMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINCOTERM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property StoreType2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStoreType2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SUSR5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUSR5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property _DESCR1Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnDESCR1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SPSHIPDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPSHIPDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STEP2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTEP2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SPSHIPDATE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPSHIPDATE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Labx01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnLabx01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Labx02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnLabx02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Labx03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnLabx03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Vw_Case_Addr_InvoiceRow
            Get
                Return CType(Me.Rows(index),Vw_Case_Addr_InvoiceRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Vw_Case_Addr_InvoiceRowChanging As Vw_Case_Addr_InvoiceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Vw_Case_Addr_InvoiceRowChanged As Vw_Case_Addr_InvoiceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Vw_Case_Addr_InvoiceRowDeleting As Vw_Case_Addr_InvoiceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Vw_Case_Addr_InvoiceRowDeleted As Vw_Case_Addr_InvoiceRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddVw_Case_Addr_InvoiceRow(ByVal row As Vw_Case_Addr_InvoiceRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddVw_Case_Addr_InvoiceRow( _
                    ByVal PICKDETAILKEY As String,  _
                    ByVal CASEID As String,  _
                    ByVal PICKHEADERKEY As String,  _
                    ByVal EXTERNORDERKEY As String,  _
                    ByVal ORDERKEY As String,  _
                    ByVal ORDERLINENUMBER As String,  _
                    ByVal STORERKEY As String,  _
                    ByVal SKU As String,  _
                    ByVal ALTSKU As String,  _
                    ByVal QTY As Decimal,  _
                    ByVal PKQTY As Decimal,  _
                    ByVal OPQTY As Decimal,  _
                    ByVal STATUS As String,  _
                    ByVal LOC As String,  _
                    ByVal TOLOC As String,  _
                    ByVal WAVEKEY As String,  _
                    ByVal EFFECTIVEDATE As Date,  _
                    ByVal CONSIGNEEKEY As String,  _
                    ByVal ROUTE As String,  _
                    ByVal DOOR As String,  _
                    ByVal SOURCEKEY As String,  _
                    ByVal EDITDATE As Date,  _
                    ByVal EDITWHO As String,  _
                    ByVal PackMod As String,  _
                    ByVal GUINO As String,  _
                    ByVal POKEYLINENUMBER As String,  _
                    ByVal POKEY As String,  _
                    ByVal CASELABLE As String,  _
                    ByVal SHIPDATE As Date,  _
                    ByVal Sprint As Short,  _
                    ByVal LastShipment As String,  _
                    ByVal Company As String,  _
                    ByVal S_Address1 As String,  _
                    ByVal S_Address2 As String,  _
                    ByVal S_Phone1 As String,  _
                    ByVal S_Phone2 As String,  _
                    ByVal C_CONTACT1 As String,  _
                    ByVal C_ADDRESS1 As String,  _
                    ByVal C_ZIP As String,  _
                    ByVal C_PHONE1 As String,  _
                    ByVal C_KEEPPY As Decimal,  _
                    ByVal DESCR As String,  _
                    ByVal BILLTOKEY As String,  _
                    ByVal CURCY As String,  _
                    ByVal TAX01 As Decimal,  _
                    ByVal PRICE As Decimal,  _
                    ByVal UNITPRICE As Decimal,  _
                    ByVal TaxType As String,  _
                    ByVal PRICE_RATE As Decimal,  _
                    ByVal C_PHONE2 As String,  _
                    ByVal SALESPERSON As String,  _
                    ByVal PrintMark As String,  _
                    ByVal C_COUNTRY As String,  _
                    ByVal C_CITY As String,  _
                    ByVal C_STATE As String,  _
                    ByVal C_EMAIL1 As String,  _
                    ByVal Weight As String,  _
                    ByVal Amount As Decimal,  _
                    ByVal RandomNumber As String,  _
                    ByVal Barcode_image() As Byte,  _
                    ByVal Barcode_image2() As Byte,  _
                    ByVal Barcode_image3() As Byte,  _
                    ByVal Barcode_image4() As Byte,  _
                    ByVal Barcode_image1() As Byte,  _
                    ByVal NOTES As String,  _
                    ByVal AREA As String,  _
                    ByVal RSNO As String,  _
                    ByVal EQID As String,  _
                    ByVal TOTALVALUE As Decimal,  _
                    ByVal INCOTERM As String,  _
                    ByVal StoreType2 As String,  _
                    ByVal SUSR5 As String,  _
                    ByVal _DESCR1 As String,  _
                    ByVal SPSHIPDATE As String,  _
                    ByVal STEP2 As String,  _
                    ByVal SPSHIPDATE1 As Date,  _
                    ByVal Labx01 As String,  _
                    ByVal Labx02 As String,  _
                    ByVal Labx03 As String) As Vw_Case_Addr_InvoiceRow
            Dim rowVw_Case_Addr_InvoiceRow As Vw_Case_Addr_InvoiceRow = CType(Me.NewRow,Vw_Case_Addr_InvoiceRow)
            Dim columnValuesArray() As Object = New Object() {PICKDETAILKEY, CASEID, PICKHEADERKEY, EXTERNORDERKEY, ORDERKEY, ORDERLINENUMBER, STORERKEY, SKU, ALTSKU, QTY, PKQTY, OPQTY, STATUS, LOC, TOLOC, WAVEKEY, EFFECTIVEDATE, CONSIGNEEKEY, ROUTE, DOOR, SOURCEKEY, EDITDATE, EDITWHO, PackMod, GUINO, POKEYLINENUMBER, POKEY, CASELABLE, SHIPDATE, Sprint, LastShipment, Company, S_Address1, S_Address2, S_Phone1, S_Phone2, C_CONTACT1, C_ADDRESS1, C_ZIP, C_PHONE1, C_KEEPPY, DESCR, BILLTOKEY, CURCY, TAX01, PRICE, UNITPRICE, TaxType, PRICE_RATE, C_PHONE2, SALESPERSON, PrintMark, C_COUNTRY, C_CITY, C_STATE, C_EMAIL1, Weight, Amount, RandomNumber, Barcode_image, Barcode_image2, Barcode_image3, Barcode_image4, Barcode_image1, NOTES, AREA, RSNO, EQID, TOTALVALUE, INCOTERM, StoreType2, SUSR5, _DESCR1, SPSHIPDATE, STEP2, SPSHIPDATE1, Labx01, Labx02, Labx03}
            rowVw_Case_Addr_InvoiceRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVw_Case_Addr_InvoiceRow)
            Return rowVw_Case_Addr_InvoiceRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Vw_Case_Addr_InvoiceDataTable = CType(MyBase.Clone,Vw_Case_Addr_InvoiceDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Vw_Case_Addr_InvoiceDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPICKDETAILKEY = MyBase.Columns("PICKDETAILKEY")
            Me.columnCASEID = MyBase.Columns("CASEID")
            Me.columnPICKHEADERKEY = MyBase.Columns("PICKHEADERKEY")
            Me.columnEXTERNORDERKEY = MyBase.Columns("EXTERNORDERKEY")
            Me.columnORDERKEY = MyBase.Columns("ORDERKEY")
            Me.columnORDERLINENUMBER = MyBase.Columns("ORDERLINENUMBER")
            Me.columnSTORERKEY = MyBase.Columns("STORERKEY")
            Me.columnSKU = MyBase.Columns("SKU")
            Me.columnALTSKU = MyBase.Columns("ALTSKU")
            Me.columnQTY = MyBase.Columns("QTY")
            Me.columnPKQTY = MyBase.Columns("PKQTY")
            Me.columnOPQTY = MyBase.Columns("OPQTY")
            Me.columnSTATUS = MyBase.Columns("STATUS")
            Me.columnLOC = MyBase.Columns("LOC")
            Me.columnTOLOC = MyBase.Columns("TOLOC")
            Me.columnWAVEKEY = MyBase.Columns("WAVEKEY")
            Me.columnEFFECTIVEDATE = MyBase.Columns("EFFECTIVEDATE")
            Me.columnCONSIGNEEKEY = MyBase.Columns("CONSIGNEEKEY")
            Me.columnROUTE = MyBase.Columns("ROUTE")
            Me.columnDOOR = MyBase.Columns("DOOR")
            Me.columnSOURCEKEY = MyBase.Columns("SOURCEKEY")
            Me.columnEDITDATE = MyBase.Columns("EDITDATE")
            Me.columnEDITWHO = MyBase.Columns("EDITWHO")
            Me.columnPackMod = MyBase.Columns("PackMod")
            Me.columnGUINO = MyBase.Columns("GUINO")
            Me.columnPOKEYLINENUMBER = MyBase.Columns("POKEYLINENUMBER")
            Me.columnPOKEY = MyBase.Columns("POKEY")
            Me.columnCASELABLE = MyBase.Columns("CASELABLE")
            Me.columnSHIPDATE = MyBase.Columns("SHIPDATE")
            Me.columnSprint = MyBase.Columns("Sprint")
            Me.columnLastShipment = MyBase.Columns("LastShipment")
            Me.columnCompany = MyBase.Columns("Company")
            Me.columnS_Address1 = MyBase.Columns("S_Address1")
            Me.columnS_Address2 = MyBase.Columns("S_Address2")
            Me.columnS_Phone1 = MyBase.Columns("S_Phone1")
            Me.columnS_Phone2 = MyBase.Columns("S_Phone2")
            Me.columnC_CONTACT1 = MyBase.Columns("C_CONTACT1")
            Me.columnC_ADDRESS1 = MyBase.Columns("C_ADDRESS1")
            Me.columnC_ZIP = MyBase.Columns("C_ZIP")
            Me.columnC_PHONE1 = MyBase.Columns("C_PHONE1")
            Me.columnC_KEEPPY = MyBase.Columns("C_KEEPPY")
            Me.columnDESCR = MyBase.Columns("DESCR")
            Me.columnBILLTOKEY = MyBase.Columns("BILLTOKEY")
            Me.columnCURCY = MyBase.Columns("CURCY")
            Me.columnTAX01 = MyBase.Columns("TAX01")
            Me.columnPRICE = MyBase.Columns("PRICE")
            Me.columnUNITPRICE = MyBase.Columns("UNITPRICE")
            Me.columnTaxType = MyBase.Columns("TaxType")
            Me.columnPRICE_RATE = MyBase.Columns("PRICE_RATE")
            Me.columnC_PHONE2 = MyBase.Columns("C_PHONE2")
            Me.columnSALESPERSON = MyBase.Columns("SALESPERSON")
            Me.columnPrintMark = MyBase.Columns("PrintMark")
            Me.columnC_COUNTRY = MyBase.Columns("C_COUNTRY")
            Me.columnC_CITY = MyBase.Columns("C_CITY")
            Me.columnC_STATE = MyBase.Columns("C_STATE")
            Me.columnC_EMAIL1 = MyBase.Columns("C_EMAIL1")
            Me.columnWeight = MyBase.Columns("Weight")
            Me.columnAmount = MyBase.Columns("Amount")
            Me.columnRandomNumber = MyBase.Columns("RandomNumber")
            Me.columnBarcode_image = MyBase.Columns("Barcode_image")
            Me.columnBarcode_image2 = MyBase.Columns("Barcode_image2")
            Me.columnBarcode_image3 = MyBase.Columns("Barcode_image3")
            Me.columnBarcode_image4 = MyBase.Columns("Barcode_image4")
            Me.columnBarcode_image1 = MyBase.Columns("Barcode_image1")
            Me.columnNOTES = MyBase.Columns("NOTES")
            Me.columnAREA = MyBase.Columns("AREA")
            Me.columnRSNO = MyBase.Columns("RSNO")
            Me.columnEQID = MyBase.Columns("EQID")
            Me.columnTOTALVALUE = MyBase.Columns("TOTALVALUE")
            Me.columnINCOTERM = MyBase.Columns("INCOTERM")
            Me.columnStoreType2 = MyBase.Columns("StoreType2")
            Me.columnSUSR5 = MyBase.Columns("SUSR5")
            Me._columnDESCR1 = MyBase.Columns("DESCR1")
            Me.columnSPSHIPDATE = MyBase.Columns("SPSHIPDATE")
            Me.columnSTEP2 = MyBase.Columns("STEP2")
            Me.columnSPSHIPDATE1 = MyBase.Columns("SPSHIPDATE1")
            Me.columnLabx01 = MyBase.Columns("Labx01")
            Me.columnLabx02 = MyBase.Columns("Labx02")
            Me.columnLabx03 = MyBase.Columns("Labx03")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPICKDETAILKEY = New Global.System.Data.DataColumn("PICKDETAILKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPICKDETAILKEY)
            Me.columnCASEID = New Global.System.Data.DataColumn("CASEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASEID)
            Me.columnPICKHEADERKEY = New Global.System.Data.DataColumn("PICKHEADERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPICKHEADERKEY)
            Me.columnEXTERNORDERKEY = New Global.System.Data.DataColumn("EXTERNORDERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTERNORDERKEY)
            Me.columnORDERKEY = New Global.System.Data.DataColumn("ORDERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERKEY)
            Me.columnORDERLINENUMBER = New Global.System.Data.DataColumn("ORDERLINENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERLINENUMBER)
            Me.columnSTORERKEY = New Global.System.Data.DataColumn("STORERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTORERKEY)
            Me.columnSKU = New Global.System.Data.DataColumn("SKU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKU)
            Me.columnALTSKU = New Global.System.Data.DataColumn("ALTSKU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALTSKU)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.columnPKQTY = New Global.System.Data.DataColumn("PKQTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPKQTY)
            Me.columnOPQTY = New Global.System.Data.DataColumn("OPQTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPQTY)
            Me.columnSTATUS = New Global.System.Data.DataColumn("STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATUS)
            Me.columnLOC = New Global.System.Data.DataColumn("LOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOC)
            Me.columnTOLOC = New Global.System.Data.DataColumn("TOLOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOLOC)
            Me.columnWAVEKEY = New Global.System.Data.DataColumn("WAVEKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWAVEKEY)
            Me.columnEFFECTIVEDATE = New Global.System.Data.DataColumn("EFFECTIVEDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEFFECTIVEDATE)
            Me.columnCONSIGNEEKEY = New Global.System.Data.DataColumn("CONSIGNEEKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONSIGNEEKEY)
            Me.columnROUTE = New Global.System.Data.DataColumn("ROUTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROUTE)
            Me.columnDOOR = New Global.System.Data.DataColumn("DOOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOOR)
            Me.columnSOURCEKEY = New Global.System.Data.DataColumn("SOURCEKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOURCEKEY)
            Me.columnEDITDATE = New Global.System.Data.DataColumn("EDITDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDITDATE)
            Me.columnEDITWHO = New Global.System.Data.DataColumn("EDITWHO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDITWHO)
            Me.columnPackMod = New Global.System.Data.DataColumn("PackMod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackMod)
            Me.columnGUINO = New Global.System.Data.DataColumn("GUINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUINO)
            Me.columnPOKEYLINENUMBER = New Global.System.Data.DataColumn("POKEYLINENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOKEYLINENUMBER)
            Me.columnPOKEY = New Global.System.Data.DataColumn("POKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOKEY)
            Me.columnCASELABLE = New Global.System.Data.DataColumn("CASELABLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASELABLE)
            Me.columnSHIPDATE = New Global.System.Data.DataColumn("SHIPDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHIPDATE)
            Me.columnSprint = New Global.System.Data.DataColumn("Sprint", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSprint)
            Me.columnLastShipment = New Global.System.Data.DataColumn("LastShipment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastShipment)
            Me.columnCompany = New Global.System.Data.DataColumn("Company", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompany)
            Me.columnS_Address1 = New Global.System.Data.DataColumn("S_Address1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_Address1)
            Me.columnS_Address2 = New Global.System.Data.DataColumn("S_Address2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_Address2)
            Me.columnS_Phone1 = New Global.System.Data.DataColumn("S_Phone1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_Phone1)
            Me.columnS_Phone2 = New Global.System.Data.DataColumn("S_Phone2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_Phone2)
            Me.columnC_CONTACT1 = New Global.System.Data.DataColumn("C_CONTACT1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_CONTACT1)
            Me.columnC_ADDRESS1 = New Global.System.Data.DataColumn("C_ADDRESS1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_ADDRESS1)
            Me.columnC_ZIP = New Global.System.Data.DataColumn("C_ZIP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_ZIP)
            Me.columnC_PHONE1 = New Global.System.Data.DataColumn("C_PHONE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_PHONE1)
            Me.columnC_KEEPPY = New Global.System.Data.DataColumn("C_KEEPPY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_KEEPPY)
            Me.columnDESCR = New Global.System.Data.DataColumn("DESCR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCR)
            Me.columnBILLTOKEY = New Global.System.Data.DataColumn("BILLTOKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBILLTOKEY)
            Me.columnCURCY = New Global.System.Data.DataColumn("CURCY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURCY)
            Me.columnTAX01 = New Global.System.Data.DataColumn("TAX01", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAX01)
            Me.columnPRICE = New Global.System.Data.DataColumn("PRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRICE)
            Me.columnUNITPRICE = New Global.System.Data.DataColumn("UNITPRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNITPRICE)
            Me.columnTaxType = New Global.System.Data.DataColumn("TaxType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxType)
            Me.columnPRICE_RATE = New Global.System.Data.DataColumn("PRICE_RATE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRICE_RATE)
            Me.columnC_PHONE2 = New Global.System.Data.DataColumn("C_PHONE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_PHONE2)
            Me.columnSALESPERSON = New Global.System.Data.DataColumn("SALESPERSON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALESPERSON)
            Me.columnPrintMark = New Global.System.Data.DataColumn("PrintMark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrintMark)
            Me.columnC_COUNTRY = New Global.System.Data.DataColumn("C_COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_COUNTRY)
            Me.columnC_CITY = New Global.System.Data.DataColumn("C_CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_CITY)
            Me.columnC_STATE = New Global.System.Data.DataColumn("C_STATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_STATE)
            Me.columnC_EMAIL1 = New Global.System.Data.DataColumn("C_EMAIL1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_EMAIL1)
            Me.columnWeight = New Global.System.Data.DataColumn("Weight", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeight)
            Me.columnAmount = New Global.System.Data.DataColumn("Amount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount)
            Me.columnRandomNumber = New Global.System.Data.DataColumn("RandomNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRandomNumber)
            Me.columnBarcode_image = New Global.System.Data.DataColumn("Barcode_image", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcode_image)
            Me.columnBarcode_image2 = New Global.System.Data.DataColumn("Barcode_image2", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcode_image2)
            Me.columnBarcode_image3 = New Global.System.Data.DataColumn("Barcode_image3", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcode_image3)
            Me.columnBarcode_image4 = New Global.System.Data.DataColumn("Barcode_image4", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcode_image4)
            Me.columnBarcode_image1 = New Global.System.Data.DataColumn("Barcode_image1", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarcode_image1)
            Me.columnNOTES = New Global.System.Data.DataColumn("NOTES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOTES)
            Me.columnAREA = New Global.System.Data.DataColumn("AREA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAREA)
            Me.columnRSNO = New Global.System.Data.DataColumn("RSNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRSNO)
            Me.columnEQID = New Global.System.Data.DataColumn("EQID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQID)
            Me.columnTOTALVALUE = New Global.System.Data.DataColumn("TOTALVALUE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALVALUE)
            Me.columnINCOTERM = New Global.System.Data.DataColumn("INCOTERM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINCOTERM)
            Me.columnStoreType2 = New Global.System.Data.DataColumn("StoreType2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStoreType2)
            Me.columnSUSR5 = New Global.System.Data.DataColumn("SUSR5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUSR5)
            Me._columnDESCR1 = New Global.System.Data.DataColumn("DESCR1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnDESCR1.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_DESCR1")
            Me._columnDESCR1.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_DESCR1Column")
            Me._columnDESCR1.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnDESCR1")
            Me._columnDESCR1.ExtendedProperties.Add("Generator_UserColumnName", "DESCR1")
            MyBase.Columns.Add(Me._columnDESCR1)
            Me.columnSPSHIPDATE = New Global.System.Data.DataColumn("SPSHIPDATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPSHIPDATE)
            Me.columnSTEP2 = New Global.System.Data.DataColumn("STEP2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTEP2)
            Me.columnSPSHIPDATE1 = New Global.System.Data.DataColumn("SPSHIPDATE1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPSHIPDATE1)
            Me.columnLabx01 = New Global.System.Data.DataColumn("Labx01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLabx01)
            Me.columnLabx02 = New Global.System.Data.DataColumn("Labx02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLabx02)
            Me.columnLabx03 = New Global.System.Data.DataColumn("Labx03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLabx03)
            Me.columnPICKDETAILKEY.AllowDBNull = false
            Me.columnPICKDETAILKEY.MaxLength = 18
            Me.columnCASEID.MaxLength = 20
            Me.columnPICKHEADERKEY.MaxLength = 18
            Me.columnEXTERNORDERKEY.MaxLength = 20
            Me.columnORDERKEY.AllowDBNull = false
            Me.columnORDERKEY.MaxLength = 10
            Me.columnORDERLINENUMBER.AllowDBNull = false
            Me.columnORDERLINENUMBER.MaxLength = 5
            Me.columnSTORERKEY.AllowDBNull = false
            Me.columnSTORERKEY.MaxLength = 15
            Me.columnSKU.AllowDBNull = false
            Me.columnSKU.MaxLength = 20
            Me.columnALTSKU.MaxLength = 20
            Me.columnSTATUS.MaxLength = 10
            Me.columnLOC.MaxLength = 10
            Me.columnTOLOC.MaxLength = 10
            Me.columnWAVEKEY.MaxLength = 10
            Me.columnCONSIGNEEKEY.MaxLength = 15
            Me.columnROUTE.MaxLength = 18
            Me.columnDOOR.MaxLength = 18
            Me.columnSOURCEKEY.MaxLength = 20
            Me.columnEDITWHO.MaxLength = 30
            Me.columnPackMod.MaxLength = 30
            Me.columnGUINO.MaxLength = 20
            Me.columnPOKEYLINENUMBER.MaxLength = 6
            Me.columnPOKEY.MaxLength = 10
            Me.columnCASELABLE.MaxLength = 50
            Me.columnLastShipment.MaxLength = 5
            Me.columnCompany.MaxLength = 90
            Me.columnS_Address1.MaxLength = 120
            Me.columnS_Address2.MaxLength = 120
            Me.columnS_Phone1.MaxLength = 18
            Me.columnS_Phone2.MaxLength = 18
            Me.columnC_CONTACT1.MaxLength = 60
            Me.columnC_ADDRESS1.MaxLength = 120
            Me.columnC_ZIP.MaxLength = 18
            Me.columnC_PHONE1.MaxLength = 30
            Me.columnDESCR.MaxLength = 160
            Me.columnBILLTOKEY.MaxLength = 15
            Me.columnCURCY.MaxLength = 10
            Me.columnTaxType.MaxLength = 10
            Me.columnPRICE_RATE.ReadOnly = true
            Me.columnC_PHONE2.MaxLength = 18
            Me.columnSALESPERSON.MaxLength = 30
            Me.columnPrintMark.MaxLength = 2
            Me.columnC_COUNTRY.MaxLength = 30
            Me.columnC_CITY.MaxLength = 45
            Me.columnC_STATE.MaxLength = 45
            Me.columnC_EMAIL1.MaxLength = 55
            Me.columnWeight.MaxLength = 20
            Me.columnRandomNumber.MaxLength = 4
            Me.columnBarcode_image4.Caption = "Barcode_image1"
            Me.columnNOTES.MaxLength = 200
            Me.columnAREA.MaxLength = 2
            Me.columnRSNO.MaxLength = 5
            Me.columnEQID.MaxLength = 2
            Me.columnINCOTERM.MaxLength = 10
            Me.columnStoreType2.MaxLength = 30
            Me.columnSUSR5.MaxLength = 30
            Me._columnDESCR1.MaxLength = 160
            Me.columnSTEP2.ReadOnly = true
            Me.columnSTEP2.MaxLength = 4
            Me.columnSPSHIPDATE1.Caption = "SPSHIPDATE"
            Me.columnLabx01.ReadOnly = true
            Me.columnLabx01.MaxLength = 30
            Me.columnLabx02.ReadOnly = true
            Me.columnLabx02.MaxLength = 30
            Me.columnLabx03.ReadOnly = true
            Me.columnLabx03.MaxLength = 200
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewVw_Case_Addr_InvoiceRow() As Vw_Case_Addr_InvoiceRow
            Return CType(Me.NewRow,Vw_Case_Addr_InvoiceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Vw_Case_Addr_InvoiceRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Vw_Case_Addr_InvoiceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Vw_Case_Addr_InvoiceRowChangedEvent) Is Nothing) Then
                RaiseEvent Vw_Case_Addr_InvoiceRowChanged(Me, New Vw_Case_Addr_InvoiceRowChangeEvent(CType(e.Row,Vw_Case_Addr_InvoiceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Vw_Case_Addr_InvoiceRowChangingEvent) Is Nothing) Then
                RaiseEvent Vw_Case_Addr_InvoiceRowChanging(Me, New Vw_Case_Addr_InvoiceRowChangeEvent(CType(e.Row,Vw_Case_Addr_InvoiceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Vw_Case_Addr_InvoiceRowDeletedEvent) Is Nothing) Then
                RaiseEvent Vw_Case_Addr_InvoiceRowDeleted(Me, New Vw_Case_Addr_InvoiceRowChangeEvent(CType(e.Row,Vw_Case_Addr_InvoiceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Vw_Case_Addr_InvoiceRowDeletingEvent) Is Nothing) Then
                RaiseEvent Vw_Case_Addr_InvoiceRowDeleting(Me, New Vw_Case_Addr_InvoiceRowChangeEvent(CType(e.Row,Vw_Case_Addr_InvoiceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveVw_Case_Addr_InvoiceRow(ByVal row As Vw_Case_Addr_InvoiceRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PRODDataSet = New PRODDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Vw_Case_Addr_InvoiceDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Vw_Rpt_PickListDataTable
        Inherits Global.System.Data.TypedTableBase(Of Vw_Rpt_PickListRow)
        
        Private columnPICKDETAILKEY As Global.System.Data.DataColumn
        
        Private columnEXTERNORDERKEY As Global.System.Data.DataColumn
        
        Private columnSTORERKEY As Global.System.Data.DataColumn
        
        Private columnLOC As Global.System.Data.DataColumn
        
        Private columnSKU As Global.System.Data.DataColumn
        
        Private columnBUSR2 As Global.System.Data.DataColumn
        
        Private columnDESCR As Global.System.Data.DataColumn
        
        Private columnQTY As Global.System.Data.DataColumn
        
        Private columnORDERKEY As Global.System.Data.DataColumn
        
        Private columnORDERLINENUMBER As Global.System.Data.DataColumn
        
        Private columnNOTES As Global.System.Data.DataColumn
        
        Private columnPkmemo As Global.System.Data.DataColumn
        
        Private columnWAVEKEY As Global.System.Data.DataColumn
        
        Private columnROUTE As Global.System.Data.DataColumn
        
        Private columnCONSIGNEEKEY As Global.System.Data.DataColumn
        
        Private columnC_CONTACT1 As Global.System.Data.DataColumn
        
        Private columnSALESPERSON As Global.System.Data.DataColumn
        
        Private columnALLOCATIONSTATUS As Global.System.Data.DataColumn
        
        Private columnACTDATE As Global.System.Data.DataColumn
        
        Private columnSHIPPEDDATE As Global.System.Data.DataColumn
        
        Private columnSTATUS As Global.System.Data.DataColumn
        
        Private columnCarPickId As Global.System.Data.DataColumn
        
        Private columnExtLin2 As Global.System.Data.DataColumn
        
        Private columnC_COMPANY As Global.System.Data.DataColumn
        
        Private columnBillingKey As Global.System.Data.DataColumn
        
        Private columnsusr3 As Global.System.Data.DataColumn
        
        Private columnSUSR4 As Global.System.Data.DataColumn
        
        Private columnAgvBox As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Vw_Rpt_PickList"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PICKDETAILKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPICKDETAILKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EXTERNORDERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTERNORDERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STORERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTORERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SKUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BUSR2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUSR2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DESCRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ORDERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ORDERLINENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERLINENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOTESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOTES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PkmemoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPkmemo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WAVEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWAVEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ROUTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROUTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONSIGNEEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONSIGNEEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_CONTACT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_CONTACT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SALESPERSONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALESPERSON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ALLOCATIONSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALLOCATIONSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ACTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHIPPEDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHIPPEDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CarPickIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCarPickId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ExtLin2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtLin2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_COMPANYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_COMPANY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BillingKeyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBillingKey
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property susr3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsusr3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SUSR4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUSR4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property AgvBoxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAgvBox
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Vw_Rpt_PickListRow
            Get
                Return CType(Me.Rows(index),Vw_Rpt_PickListRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Vw_Rpt_PickListRowChanging As Vw_Rpt_PickListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Vw_Rpt_PickListRowChanged As Vw_Rpt_PickListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Vw_Rpt_PickListRowDeleting As Vw_Rpt_PickListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Vw_Rpt_PickListRowDeleted As Vw_Rpt_PickListRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddVw_Rpt_PickListRow(ByVal row As Vw_Rpt_PickListRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddVw_Rpt_PickListRow( _
                    ByVal PICKDETAILKEY As String,  _
                    ByVal EXTERNORDERKEY As String,  _
                    ByVal STORERKEY As String,  _
                    ByVal LOC As String,  _
                    ByVal SKU As String,  _
                    ByVal BUSR2 As String,  _
                    ByVal DESCR As String,  _
                    ByVal QTY As Decimal,  _
                    ByVal ORDERKEY As String,  _
                    ByVal ORDERLINENUMBER As String,  _
                    ByVal NOTES As String,  _
                    ByVal Pkmemo As String,  _
                    ByVal WAVEKEY As String,  _
                    ByVal ROUTE As String,  _
                    ByVal CONSIGNEEKEY As String,  _
                    ByVal C_CONTACT1 As String,  _
                    ByVal SALESPERSON As String,  _
                    ByVal ALLOCATIONSTATUS As String,  _
                    ByVal ACTDATE As Date,  _
                    ByVal SHIPPEDDATE As Date,  _
                    ByVal STATUS As String,  _
                    ByVal CarPickId As Integer,  _
                    ByVal ExtLin2 As String,  _
                    ByVal C_COMPANY As String,  _
                    ByVal BillingKey As String,  _
                    ByVal susr3 As String,  _
                    ByVal SUSR4 As String,  _
                    ByVal AgvBox As String) As Vw_Rpt_PickListRow
            Dim rowVw_Rpt_PickListRow As Vw_Rpt_PickListRow = CType(Me.NewRow,Vw_Rpt_PickListRow)
            Dim columnValuesArray() As Object = New Object() {PICKDETAILKEY, EXTERNORDERKEY, STORERKEY, LOC, SKU, BUSR2, DESCR, QTY, ORDERKEY, ORDERLINENUMBER, NOTES, Pkmemo, WAVEKEY, ROUTE, CONSIGNEEKEY, C_CONTACT1, SALESPERSON, ALLOCATIONSTATUS, ACTDATE, SHIPPEDDATE, STATUS, CarPickId, ExtLin2, C_COMPANY, BillingKey, susr3, SUSR4, AgvBox}
            rowVw_Rpt_PickListRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVw_Rpt_PickListRow)
            Return rowVw_Rpt_PickListRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Vw_Rpt_PickListDataTable = CType(MyBase.Clone,Vw_Rpt_PickListDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Vw_Rpt_PickListDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPICKDETAILKEY = MyBase.Columns("PICKDETAILKEY")
            Me.columnEXTERNORDERKEY = MyBase.Columns("EXTERNORDERKEY")
            Me.columnSTORERKEY = MyBase.Columns("STORERKEY")
            Me.columnLOC = MyBase.Columns("LOC")
            Me.columnSKU = MyBase.Columns("SKU")
            Me.columnBUSR2 = MyBase.Columns("BUSR2")
            Me.columnDESCR = MyBase.Columns("DESCR")
            Me.columnQTY = MyBase.Columns("QTY")
            Me.columnORDERKEY = MyBase.Columns("ORDERKEY")
            Me.columnORDERLINENUMBER = MyBase.Columns("ORDERLINENUMBER")
            Me.columnNOTES = MyBase.Columns("NOTES")
            Me.columnPkmemo = MyBase.Columns("Pkmemo")
            Me.columnWAVEKEY = MyBase.Columns("WAVEKEY")
            Me.columnROUTE = MyBase.Columns("ROUTE")
            Me.columnCONSIGNEEKEY = MyBase.Columns("CONSIGNEEKEY")
            Me.columnC_CONTACT1 = MyBase.Columns("C_CONTACT1")
            Me.columnSALESPERSON = MyBase.Columns("SALESPERSON")
            Me.columnALLOCATIONSTATUS = MyBase.Columns("ALLOCATIONSTATUS")
            Me.columnACTDATE = MyBase.Columns("ACTDATE")
            Me.columnSHIPPEDDATE = MyBase.Columns("SHIPPEDDATE")
            Me.columnSTATUS = MyBase.Columns("STATUS")
            Me.columnCarPickId = MyBase.Columns("CarPickId")
            Me.columnExtLin2 = MyBase.Columns("ExtLin2")
            Me.columnC_COMPANY = MyBase.Columns("C_COMPANY")
            Me.columnBillingKey = MyBase.Columns("BillingKey")
            Me.columnsusr3 = MyBase.Columns("susr3")
            Me.columnSUSR4 = MyBase.Columns("SUSR4")
            Me.columnAgvBox = MyBase.Columns("AgvBox")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPICKDETAILKEY = New Global.System.Data.DataColumn("PICKDETAILKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPICKDETAILKEY)
            Me.columnEXTERNORDERKEY = New Global.System.Data.DataColumn("EXTERNORDERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTERNORDERKEY)
            Me.columnSTORERKEY = New Global.System.Data.DataColumn("STORERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTORERKEY)
            Me.columnLOC = New Global.System.Data.DataColumn("LOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOC)
            Me.columnSKU = New Global.System.Data.DataColumn("SKU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKU)
            Me.columnBUSR2 = New Global.System.Data.DataColumn("BUSR2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUSR2)
            Me.columnDESCR = New Global.System.Data.DataColumn("DESCR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCR)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.columnORDERKEY = New Global.System.Data.DataColumn("ORDERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERKEY)
            Me.columnORDERLINENUMBER = New Global.System.Data.DataColumn("ORDERLINENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERLINENUMBER)
            Me.columnNOTES = New Global.System.Data.DataColumn("NOTES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOTES)
            Me.columnPkmemo = New Global.System.Data.DataColumn("Pkmemo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPkmemo)
            Me.columnWAVEKEY = New Global.System.Data.DataColumn("WAVEKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWAVEKEY)
            Me.columnROUTE = New Global.System.Data.DataColumn("ROUTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROUTE)
            Me.columnCONSIGNEEKEY = New Global.System.Data.DataColumn("CONSIGNEEKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONSIGNEEKEY)
            Me.columnC_CONTACT1 = New Global.System.Data.DataColumn("C_CONTACT1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_CONTACT1)
            Me.columnSALESPERSON = New Global.System.Data.DataColumn("SALESPERSON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALESPERSON)
            Me.columnALLOCATIONSTATUS = New Global.System.Data.DataColumn("ALLOCATIONSTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALLOCATIONSTATUS)
            Me.columnACTDATE = New Global.System.Data.DataColumn("ACTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTDATE)
            Me.columnSHIPPEDDATE = New Global.System.Data.DataColumn("SHIPPEDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHIPPEDDATE)
            Me.columnSTATUS = New Global.System.Data.DataColumn("STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATUS)
            Me.columnCarPickId = New Global.System.Data.DataColumn("CarPickId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCarPickId)
            Me.columnExtLin2 = New Global.System.Data.DataColumn("ExtLin2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtLin2)
            Me.columnC_COMPANY = New Global.System.Data.DataColumn("C_COMPANY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_COMPANY)
            Me.columnBillingKey = New Global.System.Data.DataColumn("BillingKey", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBillingKey)
            Me.columnsusr3 = New Global.System.Data.DataColumn("susr3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsusr3)
            Me.columnSUSR4 = New Global.System.Data.DataColumn("SUSR4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUSR4)
            Me.columnAgvBox = New Global.System.Data.DataColumn("AgvBox", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAgvBox)
            Me.columnPICKDETAILKEY.MaxLength = 18
            Me.columnEXTERNORDERKEY.MaxLength = 30
            Me.columnSTORERKEY.MaxLength = 15
            Me.columnLOC.MaxLength = 10
            Me.columnSKU.MaxLength = 20
            Me.columnBUSR2.ReadOnly = true
            Me.columnBUSR2.MaxLength = 30
            Me.columnDESCR.MaxLength = 160
            Me.columnORDERKEY.MaxLength = 10
            Me.columnORDERLINENUMBER.MaxLength = 5
            Me.columnNOTES.MaxLength = 200
            Me.columnPkmemo.MaxLength = 200
            Me.columnWAVEKEY.MaxLength = 20
            Me.columnROUTE.MaxLength = 15
            Me.columnCONSIGNEEKEY.MaxLength = 15
            Me.columnC_CONTACT1.MaxLength = 50
            Me.columnSALESPERSON.MaxLength = 30
            Me.columnALLOCATIONSTATUS.MaxLength = 10
            Me.columnSTATUS.AllowDBNull = false
            Me.columnSTATUS.MaxLength = 10
            Me.columnCarPickId.ReadOnly = true
            Me.columnExtLin2.ReadOnly = true
            Me.columnExtLin2.MaxLength = 10
            Me.columnC_COMPANY.MaxLength = 60
            Me.columnBillingKey.MaxLength = 30
            Me.columnsusr3.MaxLength = 30
            Me.columnSUSR4.MaxLength = 30
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewVw_Rpt_PickListRow() As Vw_Rpt_PickListRow
            Return CType(Me.NewRow,Vw_Rpt_PickListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Vw_Rpt_PickListRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Vw_Rpt_PickListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Vw_Rpt_PickListRowChangedEvent) Is Nothing) Then
                RaiseEvent Vw_Rpt_PickListRowChanged(Me, New Vw_Rpt_PickListRowChangeEvent(CType(e.Row,Vw_Rpt_PickListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Vw_Rpt_PickListRowChangingEvent) Is Nothing) Then
                RaiseEvent Vw_Rpt_PickListRowChanging(Me, New Vw_Rpt_PickListRowChangeEvent(CType(e.Row,Vw_Rpt_PickListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Vw_Rpt_PickListRowDeletedEvent) Is Nothing) Then
                RaiseEvent Vw_Rpt_PickListRowDeleted(Me, New Vw_Rpt_PickListRowChangeEvent(CType(e.Row,Vw_Rpt_PickListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Vw_Rpt_PickListRowDeletingEvent) Is Nothing) Then
                RaiseEvent Vw_Rpt_PickListRowDeleting(Me, New Vw_Rpt_PickListRowChangeEvent(CType(e.Row,Vw_Rpt_PickListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveVw_Rpt_PickListRow(ByVal row As Vw_Rpt_PickListRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PRODDataSet = New PRODDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Vw_Rpt_PickListDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CASEDETAILRow
        Inherits Global.System.Data.DataRow
        
        Private tableCASEDETAIL As CASEDETAILDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCASEDETAIL = CType(Me.Table,CASEDETAILDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PICKDETAILKEY() As String
            Get
                Return CType(Me(Me.tableCASEDETAIL.PICKDETAILKEYColumn),String)
            End Get
            Set
                Me(Me.tableCASEDETAIL.PICKDETAILKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CASEID() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.CASEIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CASEID' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.CASEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PICKHEADERKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.PICKHEADERKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PICKHEADERKEY' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.PICKHEADERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EXTERNORDERKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.EXTERNORDERKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTERNORDERKEY' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.EXTERNORDERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ORDERKEY() As String
            Get
                Return CType(Me(Me.tableCASEDETAIL.ORDERKEYColumn),String)
            End Get
            Set
                Me(Me.tableCASEDETAIL.ORDERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ORDERLINENUMBER() As String
            Get
                Return CType(Me(Me.tableCASEDETAIL.ORDERLINENUMBERColumn),String)
            End Get
            Set
                Me(Me.tableCASEDETAIL.ORDERLINENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STORERKEY() As String
            Get
                Return CType(Me(Me.tableCASEDETAIL.STORERKEYColumn),String)
            End Get
            Set
                Me(Me.tableCASEDETAIL.STORERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SKU() As String
            Get
                Return CType(Me(Me.tableCASEDETAIL.SKUColumn),String)
            End Get
            Set
                Me(Me.tableCASEDETAIL.SKUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ALTSKU() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.ALTSKUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ALTSKU' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.ALTSKUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PKQTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.PKQTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PKQTY' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.PKQTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OPQTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.OPQTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPQTY' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.OPQTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STATUS' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.LOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOC' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.LOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TOLOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.TOLOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOLOC' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.TOLOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WAVEKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.WAVEKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WAVEKEY' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.WAVEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EFFECTIVEDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.EFFECTIVEDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EFFECTIVEDATE' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.EFFECTIVEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONSIGNEEKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.CONSIGNEEKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONSIGNEEKEY' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.CONSIGNEEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ROUTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.ROUTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ROUTE' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.ROUTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DOOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.DOORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOOR' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.DOORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOTES() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.NOTESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOTES' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.NOTESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SOURCEKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.SOURCEKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SOURCEKEY' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.SOURCEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EDITDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.EDITDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EDITDATE' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.EDITDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EDITWHO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.EDITWHOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EDITWHO' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.EDITWHOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PackMod() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.PackModColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PackMod' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.PackModColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property GUINO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.GUINOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUINO' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.GUINOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POKEYLINENUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.POKEYLINENUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POKEYLINENUMBER' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.POKEYLINENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.POKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POKEY' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.POKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CASELABLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.CASELABLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CASELABLE' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.CASELABLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHIPDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.SHIPDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHIPDATE' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.SHIPDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Sprint() As Short
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.SprintColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sprint' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.SprintColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LastShipment() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.LastShipmentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastShipment' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.LastShipmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Barcode_image() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.Barcode_imageColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode_image' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.Barcode_imageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TaxType() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.TaxTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TaxType' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.TaxTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UNITPRICE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.UNITPRICEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UNITPRICE' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.UNITPRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PRICE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.PRICEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRICE' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.PRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TAX01() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.TAX01Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAX01' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.TAX01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CURCY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.CURCYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURCY' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.CURCYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DESCR() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.DESCRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCR' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.DESCRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Weight() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.WeightColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Weight' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Amount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.AmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amount' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RandomNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableCASEDETAIL.RandomNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RandomNumber' in table 'CASEDETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCASEDETAIL.RandomNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCASEIDNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.CASEIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCASEIDNull()
            Me(Me.tableCASEDETAIL.CASEIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPICKHEADERKEYNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.PICKHEADERKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPICKHEADERKEYNull()
            Me(Me.tableCASEDETAIL.PICKHEADERKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEXTERNORDERKEYNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.EXTERNORDERKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEXTERNORDERKEYNull()
            Me(Me.tableCASEDETAIL.EXTERNORDERKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsALTSKUNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.ALTSKUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetALTSKUNull()
            Me(Me.tableCASEDETAIL.ALTSKUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsQTYNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetQTYNull()
            Me(Me.tableCASEDETAIL.QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPKQTYNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.PKQTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPKQTYNull()
            Me(Me.tableCASEDETAIL.PKQTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOPQTYNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.OPQTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOPQTYNull()
            Me(Me.tableCASEDETAIL.OPQTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSTATUSNull()
            Me(Me.tableCASEDETAIL.STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLOCNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.LOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLOCNull()
            Me(Me.tableCASEDETAIL.LOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTOLOCNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.TOLOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTOLOCNull()
            Me(Me.tableCASEDETAIL.TOLOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWAVEKEYNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.WAVEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWAVEKEYNull()
            Me(Me.tableCASEDETAIL.WAVEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEFFECTIVEDATENull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.EFFECTIVEDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEFFECTIVEDATENull()
            Me(Me.tableCASEDETAIL.EFFECTIVEDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCONSIGNEEKEYNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.CONSIGNEEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCONSIGNEEKEYNull()
            Me(Me.tableCASEDETAIL.CONSIGNEEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsROUTENull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.ROUTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetROUTENull()
            Me(Me.tableCASEDETAIL.ROUTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDOORNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.DOORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDOORNull()
            Me(Me.tableCASEDETAIL.DOORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNOTESNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.NOTESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNOTESNull()
            Me(Me.tableCASEDETAIL.NOTESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSOURCEKEYNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.SOURCEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSOURCEKEYNull()
            Me(Me.tableCASEDETAIL.SOURCEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEDITDATENull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.EDITDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEDITDATENull()
            Me(Me.tableCASEDETAIL.EDITDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEDITWHONull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.EDITWHOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEDITWHONull()
            Me(Me.tableCASEDETAIL.EDITWHOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPackModNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.PackModColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPackModNull()
            Me(Me.tableCASEDETAIL.PackModColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsGUINONull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.GUINOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetGUINONull()
            Me(Me.tableCASEDETAIL.GUINOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOKEYLINENUMBERNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.POKEYLINENUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOKEYLINENUMBERNull()
            Me(Me.tableCASEDETAIL.POKEYLINENUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOKEYNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.POKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOKEYNull()
            Me(Me.tableCASEDETAIL.POKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCASELABLENull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.CASELABLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCASELABLENull()
            Me(Me.tableCASEDETAIL.CASELABLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHIPDATENull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.SHIPDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHIPDATENull()
            Me(Me.tableCASEDETAIL.SHIPDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSprintNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.SprintColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSprintNull()
            Me(Me.tableCASEDETAIL.SprintColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLastShipmentNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.LastShipmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLastShipmentNull()
            Me(Me.tableCASEDETAIL.LastShipmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBarcode_imageNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.Barcode_imageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBarcode_imageNull()
            Me(Me.tableCASEDETAIL.Barcode_imageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTaxTypeNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.TaxTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTaxTypeNull()
            Me(Me.tableCASEDETAIL.TaxTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUNITPRICENull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.UNITPRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUNITPRICENull()
            Me(Me.tableCASEDETAIL.UNITPRICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPRICENull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.PRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPRICENull()
            Me(Me.tableCASEDETAIL.PRICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTAX01Null() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.TAX01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTAX01Null()
            Me(Me.tableCASEDETAIL.TAX01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCURCYNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.CURCYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCURCYNull()
            Me(Me.tableCASEDETAIL.CURCYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDESCRNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.DESCRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDESCRNull()
            Me(Me.tableCASEDETAIL.DESCRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWeightNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.WeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWeightNull()
            Me(Me.tableCASEDETAIL.WeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsAmountNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetAmountNull()
            Me(Me.tableCASEDETAIL.AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRandomNumberNull() As Boolean
            Return Me.IsNull(Me.tableCASEDETAIL.RandomNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRandomNumberNull()
            Me(Me.tableCASEDETAIL.RandomNumberColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Vw_PICKDETAIL_RateRow
        Inherits Global.System.Data.DataRow
        
        Private tableVw_PICKDETAIL_Rate As Vw_PICKDETAIL_RateDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVw_PICKDETAIL_Rate = CType(Me.Table,Vw_PICKDETAIL_RateDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property GENNUMBER() As Decimal
            Get
                Return CType(Me(Me.tableVw_PICKDETAIL_Rate.GENNUMBERColumn),Decimal)
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.GENNUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PICKDETAILKEY() As String
            Get
                Return CType(Me(Me.tableVw_PICKDETAIL_Rate.PICKDETAILKEYColumn),String)
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.PICKDETAILKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CASEID() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.CASEIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CASEID' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.CASEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PICKHEADERKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.PICKHEADERKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PICKHEADERKEY' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.PICKHEADERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ORDERKEY() As String
            Get
                Return CType(Me(Me.tableVw_PICKDETAIL_Rate.ORDERKEYColumn),String)
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.ORDERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ORDERLINENUMBER() As String
            Get
                Return CType(Me(Me.tableVw_PICKDETAIL_Rate.ORDERLINENUMBERColumn),String)
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.ORDERLINENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LOT() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.LOTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOT' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.LOTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STORERKEY() As String
            Get
                Return CType(Me(Me.tableVw_PICKDETAIL_Rate.STORERKEYColumn),String)
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.STORERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SKU() As String
            Get
                Return CType(Me(Me.tableVw_PICKDETAIL_Rate.SKUColumn),String)
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.SKUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ALTSKU() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.ALTSKUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ALTSKU' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.ALTSKUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UOM() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.UOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UOM' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.UOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UOMQTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.UOMQTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UOMQTY' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.UOMQTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property QTYMOVED() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.QTYMOVEDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTYMOVED' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.QTYMOVEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STATUS() As String
            Get
                Return CType(Me(Me.tableVw_PICKDETAIL_Rate.STATUSColumn),String)
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DROPID() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.DROPIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DROPID' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.DROPIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LOC() As String
            Get
                Return CType(Me(Me.tableVw_PICKDETAIL_Rate.LOCColumn),String)
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.LOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PACKKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.PACKKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PACKKEY' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.PACKKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UPDATESOURCE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.UPDATESOURCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDATESOURCE' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.UPDATESOURCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CARTONGROUP() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.CARTONGROUPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CARTONGROUP' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.CARTONGROUPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CARTONTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.CARTONTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CARTONTYPE' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.CARTONTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TOLOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.TOLOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOLOC' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.TOLOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DOREPLENISH() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.DOREPLENISHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOREPLENISH' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.DOREPLENISHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property REPLENISHZONE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.REPLENISHZONEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REPLENISHZONE' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.REPLENISHZONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DOCARTONIZE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.DOCARTONIZEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOCARTONIZE' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.DOCARTONIZEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PICKMETHOD() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.PICKMETHODColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PICKMETHOD' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.PICKMETHODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WAVEKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.WAVEKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WAVEKEY' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.WAVEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EFFECTIVEDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.EFFECTIVEDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EFFECTIVEDATE' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.EFFECTIVEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ADDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.ADDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDDATE' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.ADDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ADDWHO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.ADDWHOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDWHO' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.ADDWHOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EDITDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.EDITDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EDITDATE' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.EDITDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EDITWHO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.EDITWHOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EDITWHO' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.EDITWHOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FORTE_FLAG() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.FORTE_FLAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FORTE_FLAG' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.FORTE_FLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TRAFFICCOP() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.TRAFFICCOPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRAFFICCOP' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.TRAFFICCOPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ARCHIVECOP() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.ARCHIVECOPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ARCHIVECOP' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.ARCHIVECOPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OPTIMIZECOP() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.OPTIMIZECOPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPTIMIZECOP' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.OPTIMIZECOPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LOADID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.LOADIDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOADID' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.LOADIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property _STOP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.STOPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOP' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.STOPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ROUTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.ROUTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ROUTE' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.ROUTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DOOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.DOORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOOR' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.DOORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TRACKINGID() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.TRACKINGIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRACKINGID' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.TRACKINGIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FREIGHTCHARGES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.FREIGHTCHARGESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FREIGHTCHARGES' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.FREIGHTCHARGESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property INTERMODALVEHICLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.INTERMODALVEHICLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INTERMODALVEHICLE' in table 'Vw_PICKDETAIL_Rate' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.INTERMODALVEHICLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EFQTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.EFQTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EFQTY' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.EFQTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOTES() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.NOTESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOTES' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.NOTESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RfeKey1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.RfeKey1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RfeKey1' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.RfeKey1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RfeKey2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.RfeKey2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RfeKey2' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.RfeKey2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RfeKey3() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.RfeKey3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RfeKey3' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.RfeKey3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Extkey4() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.Extkey4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Extkey4' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.Extkey4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Rfelino3() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.Rfelino3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rfelino3' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.Rfelino3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ExtLin2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.ExtLin2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExtLin2' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.ExtLin2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CarPickId() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.CarPickIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CarPickId' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.CarPickIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CarPickTrips() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.CarPickTripsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CarPickTrips' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.CarPickTripsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CarPickNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.CarPickNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CarPickNo' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.CarPickNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PrintMark() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.PrintMarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrintMark' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.PrintMarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property GUINO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.GUINOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUINO' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.GUINOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property GUIDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.GUIDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUIDATE' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.GUIDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CURCY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.CURCYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURCY' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.CURCYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TaxType() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.TaxTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TaxType' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.TaxTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.STOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STO' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.STOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STOLINENO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.STOLINENOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOLINENO' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.STOLINENOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BOOKDESC() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.BOOKDESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BOOKDESC' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.BOOKDESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_CONTACT1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.C_CONTACT1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_CONTACT1' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.C_CONTACT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_ADDRESS1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.C_ADDRESS1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_ADDRESS1' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.C_ADDRESS1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property KUNDEUINR() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.KUNDEUINRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KUNDEUINR' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.KUNDEUINRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TAX01() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.TAX01Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAX01' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.TAX01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PRICE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.PRICEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRICE' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.PRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UNITPRICE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.UNITPRICEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UNITPRICE' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.UNITPRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EXTERNORDERKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.EXTERNORDERKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTERNORDERKEY' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.EXTERNORDERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EXTERNLINENO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.EXTERNLINENOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTERNLINENO' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.EXTERNLINENOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DeliveryKey() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.DeliveryKeyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DeliveryKey' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.DeliveryKeyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CaseLable() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.CaseLableColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseLable' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.CaseLableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_KEEPPY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.C_KEEPPYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_KEEPPY' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.C_KEEPPYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CombinationNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.CombinationNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CombinationNumber' in table 'Vw_PICKDETAIL_Rate' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.CombinationNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CombinationRule() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.CombinationRuleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CombinationRule' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.CombinationRuleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_PHONE1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.C_PHONE1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_PHONE1' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.C_PHONE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_PHONE2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.C_PHONE2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_PHONE2' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.C_PHONE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CURRENCY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.CURRENCYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURRENCY' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.CURRENCYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PRICE_RATE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.PRICE_RATEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRICE_RATE' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.PRICE_RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BUSR2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.BUSR2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUSR2' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.BUSR2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BUSR3() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.BUSR3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUSR3' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.BUSR3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DESCR() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.DESCRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCR' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.DESCRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PICKQTY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.PICKQTYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PICKQTY' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.PICKQTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PACKQTY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.PACKQTYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PACKQTY' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.PACKQTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PART() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.PARTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PART' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.PARTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_ZIP() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.C_ZIPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_ZIP' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.C_ZIPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Amount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.AmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amount' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RandomNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.RandomNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RandomNumber' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.RandomNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PlateNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_PICKDETAIL_Rate.PlateNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PlateNo' in table 'Vw_PICKDETAIL_Rate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.PlateNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PlateSTATUS() As String
            Get
                Return CType(Me(Me.tableVw_PICKDETAIL_Rate.PlateSTATUSColumn),String)
            End Get
            Set
                Me(Me.tableVw_PICKDETAIL_Rate.PlateSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCASEIDNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.CASEIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCASEIDNull()
            Me(Me.tableVw_PICKDETAIL_Rate.CASEIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPICKHEADERKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.PICKHEADERKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPICKHEADERKEYNull()
            Me(Me.tableVw_PICKDETAIL_Rate.PICKHEADERKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLOTNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.LOTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLOTNull()
            Me(Me.tableVw_PICKDETAIL_Rate.LOTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsALTSKUNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.ALTSKUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetALTSKUNull()
            Me(Me.tableVw_PICKDETAIL_Rate.ALTSKUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUOMNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.UOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUOMNull()
            Me(Me.tableVw_PICKDETAIL_Rate.UOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUOMQTYNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.UOMQTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUOMQTYNull()
            Me(Me.tableVw_PICKDETAIL_Rate.UOMQTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsQTYNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetQTYNull()
            Me(Me.tableVw_PICKDETAIL_Rate.QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsQTYMOVEDNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.QTYMOVEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetQTYMOVEDNull()
            Me(Me.tableVw_PICKDETAIL_Rate.QTYMOVEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDROPIDNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.DROPIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDROPIDNull()
            Me(Me.tableVw_PICKDETAIL_Rate.DROPIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetIDNull()
            Me(Me.tableVw_PICKDETAIL_Rate.IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPACKKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.PACKKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPACKKEYNull()
            Me(Me.tableVw_PICKDETAIL_Rate.PACKKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUPDATESOURCENull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.UPDATESOURCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUPDATESOURCENull()
            Me(Me.tableVw_PICKDETAIL_Rate.UPDATESOURCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCARTONGROUPNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.CARTONGROUPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCARTONGROUPNull()
            Me(Me.tableVw_PICKDETAIL_Rate.CARTONGROUPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCARTONTYPENull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.CARTONTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCARTONTYPENull()
            Me(Me.tableVw_PICKDETAIL_Rate.CARTONTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTOLOCNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.TOLOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTOLOCNull()
            Me(Me.tableVw_PICKDETAIL_Rate.TOLOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDOREPLENISHNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.DOREPLENISHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDOREPLENISHNull()
            Me(Me.tableVw_PICKDETAIL_Rate.DOREPLENISHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsREPLENISHZONENull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.REPLENISHZONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetREPLENISHZONENull()
            Me(Me.tableVw_PICKDETAIL_Rate.REPLENISHZONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDOCARTONIZENull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.DOCARTONIZEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDOCARTONIZENull()
            Me(Me.tableVw_PICKDETAIL_Rate.DOCARTONIZEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPICKMETHODNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.PICKMETHODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPICKMETHODNull()
            Me(Me.tableVw_PICKDETAIL_Rate.PICKMETHODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWAVEKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.WAVEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWAVEKEYNull()
            Me(Me.tableVw_PICKDETAIL_Rate.WAVEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEFFECTIVEDATENull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.EFFECTIVEDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEFFECTIVEDATENull()
            Me(Me.tableVw_PICKDETAIL_Rate.EFFECTIVEDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsADDDATENull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.ADDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetADDDATENull()
            Me(Me.tableVw_PICKDETAIL_Rate.ADDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsADDWHONull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.ADDWHOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetADDWHONull()
            Me(Me.tableVw_PICKDETAIL_Rate.ADDWHOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEDITDATENull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.EDITDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEDITDATENull()
            Me(Me.tableVw_PICKDETAIL_Rate.EDITDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEDITWHONull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.EDITWHOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEDITWHONull()
            Me(Me.tableVw_PICKDETAIL_Rate.EDITWHOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFORTE_FLAGNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.FORTE_FLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFORTE_FLAGNull()
            Me(Me.tableVw_PICKDETAIL_Rate.FORTE_FLAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTRAFFICCOPNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.TRAFFICCOPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTRAFFICCOPNull()
            Me(Me.tableVw_PICKDETAIL_Rate.TRAFFICCOPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsARCHIVECOPNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.ARCHIVECOPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetARCHIVECOPNull()
            Me(Me.tableVw_PICKDETAIL_Rate.ARCHIVECOPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOPTIMIZECOPNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.OPTIMIZECOPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOPTIMIZECOPNull()
            Me(Me.tableVw_PICKDETAIL_Rate.OPTIMIZECOPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLOADIDNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.LOADIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLOADIDNull()
            Me(Me.tableVw_PICKDETAIL_Rate.LOADIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Is_STOPNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.STOPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Set_STOPNull()
            Me(Me.tableVw_PICKDETAIL_Rate.STOPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsROUTENull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.ROUTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetROUTENull()
            Me(Me.tableVw_PICKDETAIL_Rate.ROUTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDOORNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.DOORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDOORNull()
            Me(Me.tableVw_PICKDETAIL_Rate.DOORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTRACKINGIDNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.TRACKINGIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTRACKINGIDNull()
            Me(Me.tableVw_PICKDETAIL_Rate.TRACKINGIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFREIGHTCHARGESNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.FREIGHTCHARGESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFREIGHTCHARGESNull()
            Me(Me.tableVw_PICKDETAIL_Rate.FREIGHTCHARGESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsINTERMODALVEHICLENull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.INTERMODALVEHICLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetINTERMODALVEHICLENull()
            Me(Me.tableVw_PICKDETAIL_Rate.INTERMODALVEHICLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEFQTYNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.EFQTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEFQTYNull()
            Me(Me.tableVw_PICKDETAIL_Rate.EFQTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNOTESNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.NOTESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNOTESNull()
            Me(Me.tableVw_PICKDETAIL_Rate.NOTESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRfeKey1Null() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.RfeKey1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRfeKey1Null()
            Me(Me.tableVw_PICKDETAIL_Rate.RfeKey1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRfeKey2Null() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.RfeKey2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRfeKey2Null()
            Me(Me.tableVw_PICKDETAIL_Rate.RfeKey2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRfeKey3Null() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.RfeKey3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRfeKey3Null()
            Me(Me.tableVw_PICKDETAIL_Rate.RfeKey3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsExtkey4Null() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.Extkey4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetExtkey4Null()
            Me(Me.tableVw_PICKDETAIL_Rate.Extkey4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRfelino3Null() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.Rfelino3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRfelino3Null()
            Me(Me.tableVw_PICKDETAIL_Rate.Rfelino3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsExtLin2Null() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.ExtLin2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetExtLin2Null()
            Me(Me.tableVw_PICKDETAIL_Rate.ExtLin2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCarPickIdNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.CarPickIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCarPickIdNull()
            Me(Me.tableVw_PICKDETAIL_Rate.CarPickIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCarPickTripsNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.CarPickTripsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCarPickTripsNull()
            Me(Me.tableVw_PICKDETAIL_Rate.CarPickTripsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCarPickNoNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.CarPickNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCarPickNoNull()
            Me(Me.tableVw_PICKDETAIL_Rate.CarPickNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPrintMarkNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.PrintMarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPrintMarkNull()
            Me(Me.tableVw_PICKDETAIL_Rate.PrintMarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsGUINONull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.GUINOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetGUINONull()
            Me(Me.tableVw_PICKDETAIL_Rate.GUINOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsGUIDATENull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.GUIDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetGUIDATENull()
            Me(Me.tableVw_PICKDETAIL_Rate.GUIDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCURCYNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.CURCYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCURCYNull()
            Me(Me.tableVw_PICKDETAIL_Rate.CURCYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTaxTypeNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.TaxTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTaxTypeNull()
            Me(Me.tableVw_PICKDETAIL_Rate.TaxTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSTONull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.STOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSTONull()
            Me(Me.tableVw_PICKDETAIL_Rate.STOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSTOLINENONull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.STOLINENOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSTOLINENONull()
            Me(Me.tableVw_PICKDETAIL_Rate.STOLINENOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBOOKDESCNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.BOOKDESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBOOKDESCNull()
            Me(Me.tableVw_PICKDETAIL_Rate.BOOKDESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_CONTACT1Null() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.C_CONTACT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_CONTACT1Null()
            Me(Me.tableVw_PICKDETAIL_Rate.C_CONTACT1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_ADDRESS1Null() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.C_ADDRESS1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_ADDRESS1Null()
            Me(Me.tableVw_PICKDETAIL_Rate.C_ADDRESS1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsKUNDEUINRNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.KUNDEUINRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetKUNDEUINRNull()
            Me(Me.tableVw_PICKDETAIL_Rate.KUNDEUINRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTAX01Null() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.TAX01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTAX01Null()
            Me(Me.tableVw_PICKDETAIL_Rate.TAX01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPRICENull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.PRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPRICENull()
            Me(Me.tableVw_PICKDETAIL_Rate.PRICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUNITPRICENull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.UNITPRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUNITPRICENull()
            Me(Me.tableVw_PICKDETAIL_Rate.UNITPRICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEXTERNORDERKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.EXTERNORDERKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEXTERNORDERKEYNull()
            Me(Me.tableVw_PICKDETAIL_Rate.EXTERNORDERKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEXTERNLINENONull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.EXTERNLINENOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEXTERNLINENONull()
            Me(Me.tableVw_PICKDETAIL_Rate.EXTERNLINENOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDeliveryKeyNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.DeliveryKeyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDeliveryKeyNull()
            Me(Me.tableVw_PICKDETAIL_Rate.DeliveryKeyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCaseLableNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.CaseLableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCaseLableNull()
            Me(Me.tableVw_PICKDETAIL_Rate.CaseLableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_KEEPPYNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.C_KEEPPYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_KEEPPYNull()
            Me(Me.tableVw_PICKDETAIL_Rate.C_KEEPPYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCombinationNumberNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.CombinationNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCombinationNumberNull()
            Me(Me.tableVw_PICKDETAIL_Rate.CombinationNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCombinationRuleNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.CombinationRuleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCombinationRuleNull()
            Me(Me.tableVw_PICKDETAIL_Rate.CombinationRuleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_PHONE1Null() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.C_PHONE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_PHONE1Null()
            Me(Me.tableVw_PICKDETAIL_Rate.C_PHONE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_PHONE2Null() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.C_PHONE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_PHONE2Null()
            Me(Me.tableVw_PICKDETAIL_Rate.C_PHONE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCURRENCYNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.CURRENCYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCURRENCYNull()
            Me(Me.tableVw_PICKDETAIL_Rate.CURRENCYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPRICE_RATENull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.PRICE_RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPRICE_RATENull()
            Me(Me.tableVw_PICKDETAIL_Rate.PRICE_RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBUSR2Null() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.BUSR2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBUSR2Null()
            Me(Me.tableVw_PICKDETAIL_Rate.BUSR2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBUSR3Null() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.BUSR3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBUSR3Null()
            Me(Me.tableVw_PICKDETAIL_Rate.BUSR3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDESCRNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.DESCRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDESCRNull()
            Me(Me.tableVw_PICKDETAIL_Rate.DESCRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPICKQTYNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.PICKQTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPICKQTYNull()
            Me(Me.tableVw_PICKDETAIL_Rate.PICKQTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPACKQTYNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.PACKQTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPACKQTYNull()
            Me(Me.tableVw_PICKDETAIL_Rate.PACKQTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPARTNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.PARTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPARTNull()
            Me(Me.tableVw_PICKDETAIL_Rate.PARTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_ZIPNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.C_ZIPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_ZIPNull()
            Me(Me.tableVw_PICKDETAIL_Rate.C_ZIPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsAmountNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetAmountNull()
            Me(Me.tableVw_PICKDETAIL_Rate.AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRandomNumberNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.RandomNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRandomNumberNull()
            Me(Me.tableVw_PICKDETAIL_Rate.RandomNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPlateNoNull() As Boolean
            Return Me.IsNull(Me.tableVw_PICKDETAIL_Rate.PlateNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPlateNoNull()
            Me(Me.tableVw_PICKDETAIL_Rate.PlateNoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Combination_CaseDetailRow
        Inherits Global.System.Data.DataRow
        
        Private tableCombination_CaseDetail As Combination_CaseDetailDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCombination_CaseDetail = CType(Me.Table,Combination_CaseDetailDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Item_No() As Integer
            Get
                Return CType(Me(Me.tableCombination_CaseDetail.Item_NoColumn),Integer)
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.Item_NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CombinationNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.CombinationNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CombinationNumber' in table 'Combination_CaseDetail' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.CombinationNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CombinationNumberID() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.CombinationNumberIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CombinationNumberID' in table 'Combination_CaseDetail' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.CombinationNumberIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CombinationLineNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.CombinationLineNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CombinationLineNumber' in table 'Combination_CaseDetail' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.CombinationLineNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CombinationType() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.CombinationTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CombinationType' in table 'Combination_CaseDetail' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.CombinationTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Storerkey() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.StorerkeyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Storerkey' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.StorerkeyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Orderkey() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.OrderkeyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Orderkey' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.OrderkeyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OrderkeyLineNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.OrderkeyLineNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrderkeyLineNumber' in table 'Combination_CaseDetail' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.OrderkeyLineNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Externorderkey() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.ExternorderkeyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Externorderkey' in table 'Combination_CaseDetail' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.ExternorderkeyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WAVEKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.WAVEKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WAVEKEY' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.WAVEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ROUTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.ROUTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ROUTE' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.ROUTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DOOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.DOORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOOR' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.DOORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property descr() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.descrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'descr' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.descrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Sku() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.SkuColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sku' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.SkuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Loc() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.LocColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Loc' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.LocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property QTY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.QTYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property GUINO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.GUINOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUINO' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.GUINOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PACKKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.PACKKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PACKKEY' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.PACKKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOTES() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.NOTESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOTES' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.NOTESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Rfrkey1() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.Rfrkey1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rfrkey1' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.Rfrkey1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Rfrkey2() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.Rfrkey2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rfrkey2' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.Rfrkey2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Rfrkey3() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.Rfrkey3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rfrkey3' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.Rfrkey3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ADDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.ADDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDDATE' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.ADDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ADDWHO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.ADDWHOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDWHO' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.ADDWHOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EDITDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.EDITDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EDITDATE' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.EDITDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EDITWHO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.EDITWHOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EDITWHO' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.EDITWHOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PICKDETAILKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.PICKDETAILKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PICKDETAILKEY' in table 'Combination_CaseDetail' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.PICKDETAILKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CURCY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.CURCYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURCY' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.CURCYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TAX01() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.TAX01Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAX01' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.TAX01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PRICE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.PRICEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRICE' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.PRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UNITPRICE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.UNITPRICEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UNITPRICE' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.UNITPRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TaxType() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.TaxTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TaxType' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.TaxTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Weight() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.WeightColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Weight' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Amount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.AmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amount' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RandomNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.RandomNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RandomNumber' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.RandomNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PackMod() As String
            Get
                Try 
                    Return CType(Me(Me.tableCombination_CaseDetail.PackModColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PackMod' in table 'Combination_CaseDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCombination_CaseDetail.PackModColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCombinationNumberNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.CombinationNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCombinationNumberNull()
            Me(Me.tableCombination_CaseDetail.CombinationNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCombinationNumberIDNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.CombinationNumberIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCombinationNumberIDNull()
            Me(Me.tableCombination_CaseDetail.CombinationNumberIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCombinationLineNumberNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.CombinationLineNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCombinationLineNumberNull()
            Me(Me.tableCombination_CaseDetail.CombinationLineNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCombinationTypeNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.CombinationTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCombinationTypeNull()
            Me(Me.tableCombination_CaseDetail.CombinationTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsStorerkeyNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.StorerkeyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetStorerkeyNull()
            Me(Me.tableCombination_CaseDetail.StorerkeyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOrderkeyNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.OrderkeyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOrderkeyNull()
            Me(Me.tableCombination_CaseDetail.OrderkeyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOrderkeyLineNumberNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.OrderkeyLineNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOrderkeyLineNumberNull()
            Me(Me.tableCombination_CaseDetail.OrderkeyLineNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsExternorderkeyNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.ExternorderkeyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetExternorderkeyNull()
            Me(Me.tableCombination_CaseDetail.ExternorderkeyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWAVEKEYNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.WAVEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWAVEKEYNull()
            Me(Me.tableCombination_CaseDetail.WAVEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsROUTENull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.ROUTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetROUTENull()
            Me(Me.tableCombination_CaseDetail.ROUTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDOORNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.DOORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDOORNull()
            Me(Me.tableCombination_CaseDetail.DOORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsdescrNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.descrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetdescrNull()
            Me(Me.tableCombination_CaseDetail.descrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSkuNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.SkuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSkuNull()
            Me(Me.tableCombination_CaseDetail.SkuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLocNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.LocColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLocNull()
            Me(Me.tableCombination_CaseDetail.LocColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsQTYNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetQTYNull()
            Me(Me.tableCombination_CaseDetail.QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsGUINONull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.GUINOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetGUINONull()
            Me(Me.tableCombination_CaseDetail.GUINOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPACKKEYNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.PACKKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPACKKEYNull()
            Me(Me.tableCombination_CaseDetail.PACKKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNOTESNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.NOTESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNOTESNull()
            Me(Me.tableCombination_CaseDetail.NOTESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRfrkey1Null() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.Rfrkey1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRfrkey1Null()
            Me(Me.tableCombination_CaseDetail.Rfrkey1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRfrkey2Null() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.Rfrkey2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRfrkey2Null()
            Me(Me.tableCombination_CaseDetail.Rfrkey2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRfrkey3Null() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.Rfrkey3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRfrkey3Null()
            Me(Me.tableCombination_CaseDetail.Rfrkey3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsADDDATENull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.ADDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetADDDATENull()
            Me(Me.tableCombination_CaseDetail.ADDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsADDWHONull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.ADDWHOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetADDWHONull()
            Me(Me.tableCombination_CaseDetail.ADDWHOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEDITDATENull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.EDITDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEDITDATENull()
            Me(Me.tableCombination_CaseDetail.EDITDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEDITWHONull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.EDITWHOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEDITWHONull()
            Me(Me.tableCombination_CaseDetail.EDITWHOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPICKDETAILKEYNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.PICKDETAILKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPICKDETAILKEYNull()
            Me(Me.tableCombination_CaseDetail.PICKDETAILKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCURCYNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.CURCYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCURCYNull()
            Me(Me.tableCombination_CaseDetail.CURCYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTAX01Null() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.TAX01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTAX01Null()
            Me(Me.tableCombination_CaseDetail.TAX01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPRICENull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.PRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPRICENull()
            Me(Me.tableCombination_CaseDetail.PRICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUNITPRICENull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.UNITPRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUNITPRICENull()
            Me(Me.tableCombination_CaseDetail.UNITPRICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTaxTypeNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.TaxTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTaxTypeNull()
            Me(Me.tableCombination_CaseDetail.TaxTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWeightNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.WeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWeightNull()
            Me(Me.tableCombination_CaseDetail.WeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsAmountNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetAmountNull()
            Me(Me.tableCombination_CaseDetail.AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRandomNumberNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.RandomNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRandomNumberNull()
            Me(Me.tableCombination_CaseDetail.RandomNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPackModNull() As Boolean
            Return Me.IsNull(Me.tableCombination_CaseDetail.PackModColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPackModNull()
            Me(Me.tableCombination_CaseDetail.PackModColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Vw_Case_Addr_InvoiceRow
        Inherits Global.System.Data.DataRow
        
        Private tableVw_Case_Addr_Invoice As Vw_Case_Addr_InvoiceDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVw_Case_Addr_Invoice = CType(Me.Table,Vw_Case_Addr_InvoiceDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PICKDETAILKEY() As String
            Get
                Return CType(Me(Me.tableVw_Case_Addr_Invoice.PICKDETAILKEYColumn),String)
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.PICKDETAILKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CASEID() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.CASEIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CASEID' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.CASEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PICKHEADERKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.PICKHEADERKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PICKHEADERKEY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.PICKHEADERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EXTERNORDERKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.EXTERNORDERKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTERNORDERKEY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.EXTERNORDERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ORDERKEY() As String
            Get
                Return CType(Me(Me.tableVw_Case_Addr_Invoice.ORDERKEYColumn),String)
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.ORDERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ORDERLINENUMBER() As String
            Get
                Return CType(Me(Me.tableVw_Case_Addr_Invoice.ORDERLINENUMBERColumn),String)
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.ORDERLINENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STORERKEY() As String
            Get
                Return CType(Me(Me.tableVw_Case_Addr_Invoice.STORERKEYColumn),String)
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.STORERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SKU() As String
            Get
                Return CType(Me(Me.tableVw_Case_Addr_Invoice.SKUColumn),String)
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.SKUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ALTSKU() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.ALTSKUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ALTSKU' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.ALTSKUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PKQTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.PKQTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PKQTY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.PKQTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OPQTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.OPQTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPQTY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.OPQTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STATUS' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.LOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOC' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.LOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TOLOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.TOLOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOLOC' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.TOLOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WAVEKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.WAVEKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WAVEKEY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.WAVEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EFFECTIVEDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.EFFECTIVEDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EFFECTIVEDATE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.EFFECTIVEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONSIGNEEKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.CONSIGNEEKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONSIGNEEKEY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.CONSIGNEEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ROUTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.ROUTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ROUTE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.ROUTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DOOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.DOORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOOR' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.DOORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SOURCEKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.SOURCEKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SOURCEKEY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.SOURCEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EDITDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.EDITDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EDITDATE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.EDITDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EDITWHO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.EDITWHOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EDITWHO' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.EDITWHOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PackMod() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.PackModColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PackMod' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.PackModColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property GUINO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.GUINOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUINO' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.GUINOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POKEYLINENUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.POKEYLINENUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POKEYLINENUMBER' in table 'Vw_Case_Addr_Invoice' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.POKEYLINENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.POKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POKEY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.POKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CASELABLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.CASELABLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CASELABLE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.CASELABLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHIPDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.SHIPDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHIPDATE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.SHIPDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Sprint() As Short
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.SprintColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sprint' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.SprintColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LastShipment() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.LastShipmentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastShipment' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.LastShipmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Company() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.CompanyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Company' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.CompanyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property S_Address1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.S_Address1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_Address1' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.S_Address1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property S_Address2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.S_Address2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_Address2' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.S_Address2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property S_Phone1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.S_Phone1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_Phone1' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.S_Phone1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property S_Phone2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.S_Phone2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_Phone2' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.S_Phone2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_CONTACT1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_CONTACT1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_CONTACT1' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_CONTACT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_ADDRESS1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_ADDRESS1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_ADDRESS1' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_ADDRESS1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_ZIP() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_ZIPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_ZIP' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_ZIPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_PHONE1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_PHONE1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_PHONE1' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_PHONE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_KEEPPY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_KEEPPYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_KEEPPY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_KEEPPYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DESCR() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.DESCRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCR' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.DESCRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BILLTOKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.BILLTOKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BILLTOKEY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.BILLTOKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CURCY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.CURCYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURCY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.CURCYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TAX01() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.TAX01Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAX01' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.TAX01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PRICE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.PRICEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRICE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.PRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UNITPRICE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.UNITPRICEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UNITPRICE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.UNITPRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TaxType() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.TaxTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TaxType' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.TaxTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PRICE_RATE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.PRICE_RATEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRICE_RATE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.PRICE_RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_PHONE2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_PHONE2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_PHONE2' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_PHONE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SALESPERSON() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.SALESPERSONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SALESPERSON' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.SALESPERSONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PrintMark() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.PrintMarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrintMark' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.PrintMarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_COUNTRY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_COUNTRYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_COUNTRY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_COUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_CITY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_CITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_CITY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_CITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_STATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_STATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_STATE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_STATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_EMAIL1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_EMAIL1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_EMAIL1' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_EMAIL1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Weight() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.WeightColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Weight' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Amount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.AmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amount' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RandomNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.RandomNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RandomNumber' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.RandomNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Barcode_image() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.Barcode_imageColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode_image' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.Barcode_imageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Barcode_image2() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.Barcode_image2Column),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode_image2' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.Barcode_image2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Barcode_image3() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.Barcode_image3Column),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode_image3' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.Barcode_image3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Barcode_image4() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.Barcode_image4Column),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode_image4' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.Barcode_image4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Barcode_image1() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.Barcode_image1Column),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Barcode_image1' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.Barcode_image1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOTES() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.NOTESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOTES' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.NOTESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property AREA() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.AREAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AREA' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.AREAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RSNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.RSNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RSNO' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.RSNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EQID() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.EQIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EQID' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.EQIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TOTALVALUE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.TOTALVALUEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALVALUE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.TOTALVALUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property INCOTERM() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.INCOTERMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INCOTERM' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.INCOTERMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property StoreType2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.StoreType2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StoreType2' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.StoreType2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SUSR5() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.SUSR5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUSR5' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.SUSR5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property _DESCR1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice._DESCR1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCR1' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice._DESCR1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SPSHIPDATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.SPSHIPDATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPSHIPDATE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.SPSHIPDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STEP2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.STEP2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STEP2' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.STEP2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SPSHIPDATE1() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.SPSHIPDATE1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPSHIPDATE1' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.SPSHIPDATE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Labx01() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.Labx01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Labx01' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.Labx01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Labx02() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.Labx02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Labx02' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.Labx02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Labx03() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.Labx03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Labx03' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.Labx03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCASEIDNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.CASEIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCASEIDNull()
            Me(Me.tableVw_Case_Addr_Invoice.CASEIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPICKHEADERKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.PICKHEADERKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPICKHEADERKEYNull()
            Me(Me.tableVw_Case_Addr_Invoice.PICKHEADERKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEXTERNORDERKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.EXTERNORDERKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEXTERNORDERKEYNull()
            Me(Me.tableVw_Case_Addr_Invoice.EXTERNORDERKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsALTSKUNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.ALTSKUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetALTSKUNull()
            Me(Me.tableVw_Case_Addr_Invoice.ALTSKUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsQTYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetQTYNull()
            Me(Me.tableVw_Case_Addr_Invoice.QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPKQTYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.PKQTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPKQTYNull()
            Me(Me.tableVw_Case_Addr_Invoice.PKQTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOPQTYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.OPQTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOPQTYNull()
            Me(Me.tableVw_Case_Addr_Invoice.OPQTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSTATUSNull()
            Me(Me.tableVw_Case_Addr_Invoice.STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLOCNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.LOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLOCNull()
            Me(Me.tableVw_Case_Addr_Invoice.LOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTOLOCNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.TOLOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTOLOCNull()
            Me(Me.tableVw_Case_Addr_Invoice.TOLOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWAVEKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.WAVEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWAVEKEYNull()
            Me(Me.tableVw_Case_Addr_Invoice.WAVEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEFFECTIVEDATENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.EFFECTIVEDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEFFECTIVEDATENull()
            Me(Me.tableVw_Case_Addr_Invoice.EFFECTIVEDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCONSIGNEEKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.CONSIGNEEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCONSIGNEEKEYNull()
            Me(Me.tableVw_Case_Addr_Invoice.CONSIGNEEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsROUTENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.ROUTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetROUTENull()
            Me(Me.tableVw_Case_Addr_Invoice.ROUTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDOORNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.DOORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDOORNull()
            Me(Me.tableVw_Case_Addr_Invoice.DOORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSOURCEKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.SOURCEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSOURCEKEYNull()
            Me(Me.tableVw_Case_Addr_Invoice.SOURCEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEDITDATENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.EDITDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEDITDATENull()
            Me(Me.tableVw_Case_Addr_Invoice.EDITDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEDITWHONull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.EDITWHOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEDITWHONull()
            Me(Me.tableVw_Case_Addr_Invoice.EDITWHOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPackModNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.PackModColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPackModNull()
            Me(Me.tableVw_Case_Addr_Invoice.PackModColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsGUINONull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.GUINOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetGUINONull()
            Me(Me.tableVw_Case_Addr_Invoice.GUINOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOKEYLINENUMBERNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.POKEYLINENUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOKEYLINENUMBERNull()
            Me(Me.tableVw_Case_Addr_Invoice.POKEYLINENUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.POKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOKEYNull()
            Me(Me.tableVw_Case_Addr_Invoice.POKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCASELABLENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.CASELABLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCASELABLENull()
            Me(Me.tableVw_Case_Addr_Invoice.CASELABLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHIPDATENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.SHIPDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHIPDATENull()
            Me(Me.tableVw_Case_Addr_Invoice.SHIPDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSprintNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.SprintColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSprintNull()
            Me(Me.tableVw_Case_Addr_Invoice.SprintColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLastShipmentNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.LastShipmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLastShipmentNull()
            Me(Me.tableVw_Case_Addr_Invoice.LastShipmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCompanyNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.CompanyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCompanyNull()
            Me(Me.tableVw_Case_Addr_Invoice.CompanyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsS_Address1Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.S_Address1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetS_Address1Null()
            Me(Me.tableVw_Case_Addr_Invoice.S_Address1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsS_Address2Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.S_Address2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetS_Address2Null()
            Me(Me.tableVw_Case_Addr_Invoice.S_Address2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsS_Phone1Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.S_Phone1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetS_Phone1Null()
            Me(Me.tableVw_Case_Addr_Invoice.S_Phone1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsS_Phone2Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.S_Phone2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetS_Phone2Null()
            Me(Me.tableVw_Case_Addr_Invoice.S_Phone2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_CONTACT1Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_CONTACT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_CONTACT1Null()
            Me(Me.tableVw_Case_Addr_Invoice.C_CONTACT1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_ADDRESS1Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_ADDRESS1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_ADDRESS1Null()
            Me(Me.tableVw_Case_Addr_Invoice.C_ADDRESS1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_ZIPNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_ZIPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_ZIPNull()
            Me(Me.tableVw_Case_Addr_Invoice.C_ZIPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_PHONE1Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_PHONE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_PHONE1Null()
            Me(Me.tableVw_Case_Addr_Invoice.C_PHONE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_KEEPPYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_KEEPPYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_KEEPPYNull()
            Me(Me.tableVw_Case_Addr_Invoice.C_KEEPPYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDESCRNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.DESCRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDESCRNull()
            Me(Me.tableVw_Case_Addr_Invoice.DESCRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBILLTOKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.BILLTOKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBILLTOKEYNull()
            Me(Me.tableVw_Case_Addr_Invoice.BILLTOKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCURCYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.CURCYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCURCYNull()
            Me(Me.tableVw_Case_Addr_Invoice.CURCYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTAX01Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.TAX01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTAX01Null()
            Me(Me.tableVw_Case_Addr_Invoice.TAX01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPRICENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.PRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPRICENull()
            Me(Me.tableVw_Case_Addr_Invoice.PRICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUNITPRICENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.UNITPRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUNITPRICENull()
            Me(Me.tableVw_Case_Addr_Invoice.UNITPRICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTaxTypeNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.TaxTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTaxTypeNull()
            Me(Me.tableVw_Case_Addr_Invoice.TaxTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPRICE_RATENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.PRICE_RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPRICE_RATENull()
            Me(Me.tableVw_Case_Addr_Invoice.PRICE_RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_PHONE2Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_PHONE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_PHONE2Null()
            Me(Me.tableVw_Case_Addr_Invoice.C_PHONE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSALESPERSONNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.SALESPERSONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSALESPERSONNull()
            Me(Me.tableVw_Case_Addr_Invoice.SALESPERSONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPrintMarkNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.PrintMarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPrintMarkNull()
            Me(Me.tableVw_Case_Addr_Invoice.PrintMarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_COUNTRYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_COUNTRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_COUNTRYNull()
            Me(Me.tableVw_Case_Addr_Invoice.C_COUNTRYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_CITYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_CITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_CITYNull()
            Me(Me.tableVw_Case_Addr_Invoice.C_CITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_STATENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_STATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_STATENull()
            Me(Me.tableVw_Case_Addr_Invoice.C_STATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_EMAIL1Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_EMAIL1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_EMAIL1Null()
            Me(Me.tableVw_Case_Addr_Invoice.C_EMAIL1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWeightNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.WeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWeightNull()
            Me(Me.tableVw_Case_Addr_Invoice.WeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsAmountNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetAmountNull()
            Me(Me.tableVw_Case_Addr_Invoice.AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRandomNumberNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.RandomNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRandomNumberNull()
            Me(Me.tableVw_Case_Addr_Invoice.RandomNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBarcode_imageNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.Barcode_imageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBarcode_imageNull()
            Me(Me.tableVw_Case_Addr_Invoice.Barcode_imageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBarcode_image2Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.Barcode_image2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBarcode_image2Null()
            Me(Me.tableVw_Case_Addr_Invoice.Barcode_image2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBarcode_image3Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.Barcode_image3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBarcode_image3Null()
            Me(Me.tableVw_Case_Addr_Invoice.Barcode_image3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBarcode_image4Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.Barcode_image4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBarcode_image4Null()
            Me(Me.tableVw_Case_Addr_Invoice.Barcode_image4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBarcode_image1Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.Barcode_image1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBarcode_image1Null()
            Me(Me.tableVw_Case_Addr_Invoice.Barcode_image1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNOTESNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.NOTESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNOTESNull()
            Me(Me.tableVw_Case_Addr_Invoice.NOTESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsAREANull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.AREAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetAREANull()
            Me(Me.tableVw_Case_Addr_Invoice.AREAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRSNONull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.RSNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRSNONull()
            Me(Me.tableVw_Case_Addr_Invoice.RSNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEQIDNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.EQIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEQIDNull()
            Me(Me.tableVw_Case_Addr_Invoice.EQIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTOTALVALUENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.TOTALVALUEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTOTALVALUENull()
            Me(Me.tableVw_Case_Addr_Invoice.TOTALVALUEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsINCOTERMNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.INCOTERMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetINCOTERMNull()
            Me(Me.tableVw_Case_Addr_Invoice.INCOTERMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsStoreType2Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.StoreType2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetStoreType2Null()
            Me(Me.tableVw_Case_Addr_Invoice.StoreType2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSUSR5Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.SUSR5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSUSR5Null()
            Me(Me.tableVw_Case_Addr_Invoice.SUSR5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Is_DESCR1Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice._DESCR1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Set_DESCR1Null()
            Me(Me.tableVw_Case_Addr_Invoice._DESCR1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSPSHIPDATENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.SPSHIPDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSPSHIPDATENull()
            Me(Me.tableVw_Case_Addr_Invoice.SPSHIPDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSTEP2Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.STEP2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSTEP2Null()
            Me(Me.tableVw_Case_Addr_Invoice.STEP2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSPSHIPDATE1Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.SPSHIPDATE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSPSHIPDATE1Null()
            Me(Me.tableVw_Case_Addr_Invoice.SPSHIPDATE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLabx01Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.Labx01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLabx01Null()
            Me(Me.tableVw_Case_Addr_Invoice.Labx01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLabx02Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.Labx02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLabx02Null()
            Me(Me.tableVw_Case_Addr_Invoice.Labx02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLabx03Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.Labx03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLabx03Null()
            Me(Me.tableVw_Case_Addr_Invoice.Labx03Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Vw_Rpt_PickListRow
        Inherits Global.System.Data.DataRow
        
        Private tableVw_Rpt_PickList As Vw_Rpt_PickListDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVw_Rpt_PickList = CType(Me.Table,Vw_Rpt_PickListDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PICKDETAILKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.PICKDETAILKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PICKDETAILKEY' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.PICKDETAILKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EXTERNORDERKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.EXTERNORDERKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTERNORDERKEY' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.EXTERNORDERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STORERKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.STORERKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STORERKEY' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.STORERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.LOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOC' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.LOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SKU() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.SKUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SKU' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.SKUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BUSR2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.BUSR2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUSR2' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.BUSR2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DESCR() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.DESCRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCR' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.DESCRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ORDERKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.ORDERKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERKEY' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.ORDERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ORDERLINENUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.ORDERLINENUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDERLINENUMBER' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.ORDERLINENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOTES() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.NOTESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOTES' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.NOTESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Pkmemo() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.PkmemoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pkmemo' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.PkmemoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WAVEKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.WAVEKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WAVEKEY' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.WAVEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ROUTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.ROUTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ROUTE' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.ROUTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONSIGNEEKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.CONSIGNEEKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONSIGNEEKEY' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.CONSIGNEEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_CONTACT1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.C_CONTACT1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_CONTACT1' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.C_CONTACT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SALESPERSON() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.SALESPERSONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SALESPERSON' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.SALESPERSONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ALLOCATIONSTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.ALLOCATIONSTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ALLOCATIONSTATUS' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.ALLOCATIONSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ACTDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.ACTDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTDATE' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.ACTDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHIPPEDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.SHIPPEDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHIPPEDDATE' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.SHIPPEDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STATUS() As String
            Get
                Return CType(Me(Me.tableVw_Rpt_PickList.STATUSColumn),String)
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CarPickId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.CarPickIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CarPickId' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.CarPickIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ExtLin2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.ExtLin2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExtLin2' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.ExtLin2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_COMPANY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.C_COMPANYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_COMPANY' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.C_COMPANYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BillingKey() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.BillingKeyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BillingKey' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.BillingKeyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property susr3() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.susr3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'susr3' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.susr3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SUSR4() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.SUSR4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUSR4' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.SUSR4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property AgvBox() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Rpt_PickList.AgvBoxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AgvBox' in table 'Vw_Rpt_PickList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Rpt_PickList.AgvBoxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPICKDETAILKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.PICKDETAILKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPICKDETAILKEYNull()
            Me(Me.tableVw_Rpt_PickList.PICKDETAILKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEXTERNORDERKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.EXTERNORDERKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEXTERNORDERKEYNull()
            Me(Me.tableVw_Rpt_PickList.EXTERNORDERKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSTORERKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.STORERKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSTORERKEYNull()
            Me(Me.tableVw_Rpt_PickList.STORERKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLOCNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.LOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLOCNull()
            Me(Me.tableVw_Rpt_PickList.LOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSKUNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.SKUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSKUNull()
            Me(Me.tableVw_Rpt_PickList.SKUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBUSR2Null() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.BUSR2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBUSR2Null()
            Me(Me.tableVw_Rpt_PickList.BUSR2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDESCRNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.DESCRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDESCRNull()
            Me(Me.tableVw_Rpt_PickList.DESCRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsQTYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetQTYNull()
            Me(Me.tableVw_Rpt_PickList.QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsORDERKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.ORDERKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetORDERKEYNull()
            Me(Me.tableVw_Rpt_PickList.ORDERKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsORDERLINENUMBERNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.ORDERLINENUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetORDERLINENUMBERNull()
            Me(Me.tableVw_Rpt_PickList.ORDERLINENUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNOTESNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.NOTESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNOTESNull()
            Me(Me.tableVw_Rpt_PickList.NOTESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPkmemoNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.PkmemoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPkmemoNull()
            Me(Me.tableVw_Rpt_PickList.PkmemoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWAVEKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.WAVEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWAVEKEYNull()
            Me(Me.tableVw_Rpt_PickList.WAVEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsROUTENull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.ROUTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetROUTENull()
            Me(Me.tableVw_Rpt_PickList.ROUTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCONSIGNEEKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.CONSIGNEEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCONSIGNEEKEYNull()
            Me(Me.tableVw_Rpt_PickList.CONSIGNEEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_CONTACT1Null() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.C_CONTACT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_CONTACT1Null()
            Me(Me.tableVw_Rpt_PickList.C_CONTACT1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSALESPERSONNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.SALESPERSONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSALESPERSONNull()
            Me(Me.tableVw_Rpt_PickList.SALESPERSONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsALLOCATIONSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.ALLOCATIONSTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetALLOCATIONSTATUSNull()
            Me(Me.tableVw_Rpt_PickList.ALLOCATIONSTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsACTDATENull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.ACTDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetACTDATENull()
            Me(Me.tableVw_Rpt_PickList.ACTDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHIPPEDDATENull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.SHIPPEDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHIPPEDDATENull()
            Me(Me.tableVw_Rpt_PickList.SHIPPEDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCarPickIdNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.CarPickIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCarPickIdNull()
            Me(Me.tableVw_Rpt_PickList.CarPickIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsExtLin2Null() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.ExtLin2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetExtLin2Null()
            Me(Me.tableVw_Rpt_PickList.ExtLin2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_COMPANYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.C_COMPANYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_COMPANYNull()
            Me(Me.tableVw_Rpt_PickList.C_COMPANYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBillingKeyNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.BillingKeyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBillingKeyNull()
            Me(Me.tableVw_Rpt_PickList.BillingKeyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Issusr3Null() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.susr3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setsusr3Null()
            Me(Me.tableVw_Rpt_PickList.susr3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSUSR4Null() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.SUSR4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSUSR4Null()
            Me(Me.tableVw_Rpt_PickList.SUSR4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsAgvBoxNull() As Boolean
            Return Me.IsNull(Me.tableVw_Rpt_PickList.AgvBoxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetAgvBoxNull()
            Me(Me.tableVw_Rpt_PickList.AgvBoxColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class CASEDETAILRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CASEDETAILRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As CASEDETAILRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As CASEDETAILRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class Vw_PICKDETAIL_RateRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Vw_PICKDETAIL_RateRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As Vw_PICKDETAIL_RateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As Vw_PICKDETAIL_RateRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class Combination_CaseDetailRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Combination_CaseDetailRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As Combination_CaseDetailRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As Combination_CaseDetailRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class Vw_Case_Addr_InvoiceRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Vw_Case_Addr_InvoiceRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As Vw_Case_Addr_InvoiceRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As Vw_Case_Addr_InvoiceRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class Vw_Rpt_PickListRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Vw_Rpt_PickListRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As Vw_Rpt_PickListRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As Vw_Rpt_PickListRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace PRODDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CASEDETAILTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CASEDETAIL"
            tableMapping.ColumnMappings.Add("PICKDETAILKEY", "PICKDETAILKEY")
            tableMapping.ColumnMappings.Add("CASEID", "CASEID")
            tableMapping.ColumnMappings.Add("PICKHEADERKEY", "PICKHEADERKEY")
            tableMapping.ColumnMappings.Add("EXTERNORDERKEY", "EXTERNORDERKEY")
            tableMapping.ColumnMappings.Add("ORDERKEY", "ORDERKEY")
            tableMapping.ColumnMappings.Add("ORDERLINENUMBER", "ORDERLINENUMBER")
            tableMapping.ColumnMappings.Add("STORERKEY", "STORERKEY")
            tableMapping.ColumnMappings.Add("SKU", "SKU")
            tableMapping.ColumnMappings.Add("ALTSKU", "ALTSKU")
            tableMapping.ColumnMappings.Add("QTY", "QTY")
            tableMapping.ColumnMappings.Add("PKQTY", "PKQTY")
            tableMapping.ColumnMappings.Add("OPQTY", "OPQTY")
            tableMapping.ColumnMappings.Add("STATUS", "STATUS")
            tableMapping.ColumnMappings.Add("LOC", "LOC")
            tableMapping.ColumnMappings.Add("TOLOC", "TOLOC")
            tableMapping.ColumnMappings.Add("WAVEKEY", "WAVEKEY")
            tableMapping.ColumnMappings.Add("EFFECTIVEDATE", "EFFECTIVEDATE")
            tableMapping.ColumnMappings.Add("CONSIGNEEKEY", "CONSIGNEEKEY")
            tableMapping.ColumnMappings.Add("ROUTE", "ROUTE")
            tableMapping.ColumnMappings.Add("DOOR", "DOOR")
            tableMapping.ColumnMappings.Add("NOTES", "NOTES")
            tableMapping.ColumnMappings.Add("SOURCEKEY", "SOURCEKEY")
            tableMapping.ColumnMappings.Add("EDITDATE", "EDITDATE")
            tableMapping.ColumnMappings.Add("EDITWHO", "EDITWHO")
            tableMapping.ColumnMappings.Add("PackMod", "PackMod")
            tableMapping.ColumnMappings.Add("GUINO", "GUINO")
            tableMapping.ColumnMappings.Add("POKEYLINENUMBER", "POKEYLINENUMBER")
            tableMapping.ColumnMappings.Add("POKEY", "POKEY")
            tableMapping.ColumnMappings.Add("CASELABLE", "CASELABLE")
            tableMapping.ColumnMappings.Add("SHIPDATE", "SHIPDATE")
            tableMapping.ColumnMappings.Add("Sprint", "Sprint")
            tableMapping.ColumnMappings.Add("LastShipment", "LastShipment")
            tableMapping.ColumnMappings.Add("TaxType", "TaxType")
            tableMapping.ColumnMappings.Add("UNITPRICE", "UNITPRICE")
            tableMapping.ColumnMappings.Add("PRICE", "PRICE")
            tableMapping.ColumnMappings.Add("TAX01", "TAX01")
            tableMapping.ColumnMappings.Add("CURCY", "CURCY")
            tableMapping.ColumnMappings.Add("DESCR", "DESCR")
            tableMapping.ColumnMappings.Add("Weight", "Weight")
            tableMapping.ColumnMappings.Add("Amount", "Amount")
            tableMapping.ColumnMappings.Add("RandomNumber", "RandomNumber")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CASEDETAIL] ([PICKDETAILKEY], [CASEID], [PICKHEADERKEY], [EXTERNORDE"& _ 
                "RKEY], [ORDERKEY], [ORDERLINENUMBER], [STORERKEY], [SKU], [ALTSKU], [QTY], [PKQT"& _ 
                "Y], [OPQTY], [STATUS], [LOC], [TOLOC], [WAVEKEY], [EFFECTIVEDATE], [CONSIGNEEKEY"& _ 
                "], [ROUTE], [DOOR], [NOTES], [SOURCEKEY], [EDITDATE], [EDITWHO], [PackMod], [GUI"& _ 
                "NO], [POKEYLINENUMBER], [POKEY], [CASELABLE], [SHIPDATE], [Sprint], [LastShipmen"& _ 
                "t], [TaxType], [UNITPRICE], [PRICE], [TAX01], [CURCY], [DESCR], [Weight], [Amoun"& _ 
                "t], [RandomNumber]) VALUES (@PICKDETAILKEY, @CASEID, @PICKHEADERKEY, @EXTERNORDE"& _ 
                "RKEY, @ORDERKEY, @ORDERLINENUMBER, @STORERKEY, @SKU, @ALTSKU, @QTY, @PKQTY, @OPQ"& _ 
                "TY, @STATUS, @LOC, @TOLOC, @WAVEKEY, @EFFECTIVEDATE, @CONSIGNEEKEY, @ROUTE, @DOO"& _ 
                "R, @NOTES, @SOURCEKEY, @EDITDATE, @EDITWHO, @PackMod, @GUINO, @POKEYLINENUMBER, "& _ 
                "@POKEY, @CASELABLE, @SHIPDATE, @Sprint, @LastShipment, @TaxType, @UNITPRICE, @PR"& _ 
                "ICE, @TAX01, @CURCY, @DESCR, @Weight, @Amount, @RandomNumber)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PICKDETAILKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PICKDETAILKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CASEID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CASEID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PICKHEADERKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PICKHEADERKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTERNORDERKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTERNORDERKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERLINENUMBER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERLINENUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STORERKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STORERKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SKU", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SKU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ALTSKU", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALTSKU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QTY", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 0, "QTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PKQTY", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 0, "PKQTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPQTY", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 0, "OPQTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STATUS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOC", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOLOC", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOLOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WAVEKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WAVEKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EFFECTIVEDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EFFECTIVEDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONSIGNEEKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONSIGNEEKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ROUTE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ROUTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOOR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOTES", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOURCEKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SOURCEKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EDITDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDITDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EDITWHO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDITWHO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PackMod", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PackMod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GUINO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@POKEYLINENUMBER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "POKEYLINENUMBER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@POKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "POKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CASELABLE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CASELABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHIPDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHIPDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sprint", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sprint", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastShipment", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastShipment", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TaxType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaxType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UNITPRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 5, "UNITPRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 5, "PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TAX01", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 5, "TAX01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CURCY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CURCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Weight", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amount", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RandomNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RandomNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Packet_DEV.My.MySettings.Default.PRODConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT          PICKDETAILKEY, CASEID, PICKHEADERKEY, EXTERNORDERKEY, ORDERKEY, O"& _ 
                "RDERLINENUMBER, STORERKEY, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            SKU, ALTSKU, QTY, PKQTY"& _ 
                ", OPQTY, STATUS, LOC, TOLOC, WAVEKEY, EFFECTIVEDATE, CONSIGNEEKEY, ROUTE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                        DOOR, NOTES, SOURCEKEY, EDITDATE, EDITWHO, PackMod, GUIN"& _ 
                "O, POKEYLINENUMBER, POKEY, CASELABLE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            SHIPDATE, Sp"& _ 
                "rint, LastShipment, TaxType, UNITPRICE, PRICE, TAX01, CURCY, DESCR, Weight, Amou"& _ 
                "nt, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            RandomNumber"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM              CASEDETAIL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.CASEDETAIL_RePick"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserID", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@mod", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@exkey_OR_itemNo", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@caseID", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@msg", Global.System.Data.SqlDbType.VarChar, 200, Global.System.Data.ParameterDirection.InputOutput, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT ALTSKU, Amount, CASEID, CASELABLE, CONSIGNEEKEY, CURCY, DESCR, DOOR, EDITD"& _ 
                "ATE, EDITWHO, EFFECTIVEDATE, EXTERNORDERKEY, GUINO, LOC, LastShipment, NOTES, OP"& _ 
                "QTY, ORDERKEY, ORDERLINENUMBER, PICKDETAILKEY, PICKHEADERKEY, PKQTY, POKEY, POKE"& _ 
                "YLINENUMBER, PRICE, PackMod, QTY, ROUTE, RandomNumber, SHIPDATE, SKU, SOURCEKEY,"& _ 
                " STATUS, STORERKEY, Sprint, TAX01, TOLOC, TaxType, UNITPRICE, WAVEKEY, Weight FR"& _ 
                "OM CASEDETAIL WHERE (CASEID = @caseid)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@caseid", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "CASEID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PRODDataSet.CASEDETAILDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PRODDataSet.CASEDETAILDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PRODDataSet.CASEDETAILDataTable = New PRODDataSet.CASEDETAILDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByCaseID(ByVal dataTable As PRODDataSet.CASEDETAILDataTable, ByVal caseid As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (caseid Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(caseid,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByCaseID(ByVal caseid As String) As PRODDataSet.CASEDETAILDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (caseid Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(caseid,String)
            End If
            Dim dataTable As PRODDataSet.CASEDETAILDataTable = New PRODDataSet.CASEDETAILDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PRODDataSet.CASEDETAILDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PRODDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "CASEDETAIL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal PICKDETAILKEY As String,  _
                    ByVal CASEID As String,  _
                    ByVal PICKHEADERKEY As String,  _
                    ByVal EXTERNORDERKEY As String,  _
                    ByVal ORDERKEY As String,  _
                    ByVal ORDERLINENUMBER As String,  _
                    ByVal STORERKEY As String,  _
                    ByVal SKU As String,  _
                    ByVal ALTSKU As String,  _
                    ByVal QTY As Global.System.Nullable(Of Decimal),  _
                    ByVal PKQTY As Global.System.Nullable(Of Decimal),  _
                    ByVal OPQTY As Global.System.Nullable(Of Decimal),  _
                    ByVal STATUS As String,  _
                    ByVal LOC As String,  _
                    ByVal TOLOC As String,  _
                    ByVal WAVEKEY As String,  _
                    ByVal EFFECTIVEDATE As Global.System.Nullable(Of Date),  _
                    ByVal CONSIGNEEKEY As String,  _
                    ByVal ROUTE As String,  _
                    ByVal DOOR As String,  _
                    ByVal NOTES As String,  _
                    ByVal SOURCEKEY As String,  _
                    ByVal EDITDATE As Global.System.Nullable(Of Date),  _
                    ByVal EDITWHO As String,  _
                    ByVal PackMod As String,  _
                    ByVal GUINO As String,  _
                    ByVal POKEYLINENUMBER As String,  _
                    ByVal POKEY As String,  _
                    ByVal CASELABLE As String,  _
                    ByVal SHIPDATE As Global.System.Nullable(Of Date),  _
                    ByVal Sprint As Global.System.Nullable(Of Short),  _
                    ByVal LastShipment As String,  _
                    ByVal TaxType As String,  _
                    ByVal UNITPRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal TAX01 As Global.System.Nullable(Of Decimal),  _
                    ByVal CURCY As String,  _
                    ByVal DESCR As String,  _
                    ByVal Weight As String,  _
                    ByVal Amount As Global.System.Nullable(Of Decimal),  _
                    ByVal RandomNumber As String) As Integer
            If (PICKDETAILKEY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PICKDETAILKEY")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PICKDETAILKEY,String)
            End If
            If (CASEID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CASEID,String)
            End If
            If (PICKHEADERKEY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PICKHEADERKEY,String)
            End If
            If (EXTERNORDERKEY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(EXTERNORDERKEY,String)
            End If
            If (ORDERKEY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ORDERKEY")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ORDERKEY,String)
            End If
            If (ORDERLINENUMBER Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ORDERLINENUMBER")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ORDERLINENUMBER,String)
            End If
            If (STORERKEY Is Nothing) Then
                Throw New Global.System.ArgumentNullException("STORERKEY")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(STORERKEY,String)
            End If
            If (SKU Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SKU")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(SKU,String)
            End If
            If (ALTSKU Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(ALTSKU,String)
            End If
            If (QTY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(QTY.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (PKQTY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(PKQTY.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (OPQTY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(OPQTY.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (STATUS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(STATUS,String)
            End If
            If (LOC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(LOC,String)
            End If
            If (TOLOC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(TOLOC,String)
            End If
            If (WAVEKEY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(WAVEKEY,String)
            End If
            If (EFFECTIVEDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(EFFECTIVEDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (CONSIGNEEKEY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(CONSIGNEEKEY,String)
            End If
            If (ROUTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(ROUTE,String)
            End If
            If (DOOR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(DOOR,String)
            End If
            If (NOTES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(NOTES,String)
            End If
            If (SOURCEKEY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(SOURCEKEY,String)
            End If
            If (EDITDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(EDITDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (EDITWHO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(EDITWHO,String)
            End If
            If (PackMod Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(PackMod,String)
            End If
            If (GUINO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(GUINO,String)
            End If
            If (POKEYLINENUMBER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(POKEYLINENUMBER,String)
            End If
            If (POKEY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(POKEY,String)
            End If
            If (CASELABLE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(CASELABLE,String)
            End If
            If (SHIPDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(SHIPDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Sprint.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Sprint.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (LastShipment Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(LastShipment,String)
            End If
            If (TaxType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(TaxType,String)
            End If
            If (UNITPRICE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(UNITPRICE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (PRICE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(PRICE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (TAX01.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(TAX01.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (CURCY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(CURCY,String)
            End If
            If (DESCR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(DESCR,String)
            End If
            If (Weight Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(Weight,String)
            End If
            If (Amount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(Amount.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (RandomNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(RandomNumber,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function CASEDETAIL_RePick(ByVal UserID As String, ByVal _mod As String, ByVal exkey_OR_itemNo As String, ByVal caseID As String, ByRef msg As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (UserID Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(UserID,String)
            End If
            If (_mod Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(_mod,String)
            End If
            If (exkey_OR_itemNo Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(exkey_OR_itemNo,String)
            End If
            If (caseID Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(caseID,String)
            End If
            If (msg Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(msg,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(5).Value Is Nothing)  _
                        OrElse (command.Parameters(5).Value.GetType Is GetType(Global.System.DBNull))) Then
                msg = Nothing
            Else
                msg = CType(command.Parameters(5).Value,String)
            End If
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Vw_PICKDETAIL_RateTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Vw_PICKDETAIL_Rate"
            tableMapping.ColumnMappings.Add("GENNUMBER", "GENNUMBER")
            tableMapping.ColumnMappings.Add("PICKDETAILKEY", "PICKDETAILKEY")
            tableMapping.ColumnMappings.Add("CASEID", "CASEID")
            tableMapping.ColumnMappings.Add("PICKHEADERKEY", "PICKHEADERKEY")
            tableMapping.ColumnMappings.Add("ORDERKEY", "ORDERKEY")
            tableMapping.ColumnMappings.Add("ORDERLINENUMBER", "ORDERLINENUMBER")
            tableMapping.ColumnMappings.Add("LOT", "LOT")
            tableMapping.ColumnMappings.Add("STORERKEY", "STORERKEY")
            tableMapping.ColumnMappings.Add("SKU", "SKU")
            tableMapping.ColumnMappings.Add("ALTSKU", "ALTSKU")
            tableMapping.ColumnMappings.Add("UOM", "UOM")
            tableMapping.ColumnMappings.Add("UOMQTY", "UOMQTY")
            tableMapping.ColumnMappings.Add("QTY", "QTY")
            tableMapping.ColumnMappings.Add("QTYMOVED", "QTYMOVED")
            tableMapping.ColumnMappings.Add("STATUS", "STATUS")
            tableMapping.ColumnMappings.Add("DROPID", "DROPID")
            tableMapping.ColumnMappings.Add("LOC", "LOC")
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("PACKKEY", "PACKKEY")
            tableMapping.ColumnMappings.Add("UPDATESOURCE", "UPDATESOURCE")
            tableMapping.ColumnMappings.Add("CARTONGROUP", "CARTONGROUP")
            tableMapping.ColumnMappings.Add("CARTONTYPE", "CARTONTYPE")
            tableMapping.ColumnMappings.Add("TOLOC", "TOLOC")
            tableMapping.ColumnMappings.Add("DOREPLENISH", "DOREPLENISH")
            tableMapping.ColumnMappings.Add("REPLENISHZONE", "REPLENISHZONE")
            tableMapping.ColumnMappings.Add("DOCARTONIZE", "DOCARTONIZE")
            tableMapping.ColumnMappings.Add("PICKMETHOD", "PICKMETHOD")
            tableMapping.ColumnMappings.Add("WAVEKEY", "WAVEKEY")
            tableMapping.ColumnMappings.Add("EFFECTIVEDATE", "EFFECTIVEDATE")
            tableMapping.ColumnMappings.Add("ADDDATE", "ADDDATE")
            tableMapping.ColumnMappings.Add("ADDWHO", "ADDWHO")
            tableMapping.ColumnMappings.Add("EDITDATE", "EDITDATE")
            tableMapping.ColumnMappings.Add("EDITWHO", "EDITWHO")
            tableMapping.ColumnMappings.Add("FORTE_FLAG", "FORTE_FLAG")
            tableMapping.ColumnMappings.Add("TRAFFICCOP", "TRAFFICCOP")
            tableMapping.ColumnMappings.Add("ARCHIVECOP", "ARCHIVECOP")
            tableMapping.ColumnMappings.Add("OPTIMIZECOP", "OPTIMIZECOP")
            tableMapping.ColumnMappings.Add("LOADID", "LOADID")
            tableMapping.ColumnMappings.Add("STOP", "STOP")
            tableMapping.ColumnMappings.Add("ROUTE", "ROUTE")
            tableMapping.ColumnMappings.Add("DOOR", "DOOR")
            tableMapping.ColumnMappings.Add("TRACKINGID", "TRACKINGID")
            tableMapping.ColumnMappings.Add("FREIGHTCHARGES", "FREIGHTCHARGES")
            tableMapping.ColumnMappings.Add("INTERMODALVEHICLE", "INTERMODALVEHICLE")
            tableMapping.ColumnMappings.Add("EFQTY", "EFQTY")
            tableMapping.ColumnMappings.Add("NOTES", "NOTES")
            tableMapping.ColumnMappings.Add("RfeKey1", "RfeKey1")
            tableMapping.ColumnMappings.Add("RfeKey2", "RfeKey2")
            tableMapping.ColumnMappings.Add("RfeKey3", "RfeKey3")
            tableMapping.ColumnMappings.Add("Extkey4", "Extkey4")
            tableMapping.ColumnMappings.Add("Rfelino3", "Rfelino3")
            tableMapping.ColumnMappings.Add("ExtLin2", "ExtLin2")
            tableMapping.ColumnMappings.Add("CarPickId", "CarPickId")
            tableMapping.ColumnMappings.Add("CarPickTrips", "CarPickTrips")
            tableMapping.ColumnMappings.Add("CarPickNo", "CarPickNo")
            tableMapping.ColumnMappings.Add("PrintMark", "PrintMark")
            tableMapping.ColumnMappings.Add("GUINO", "GUINO")
            tableMapping.ColumnMappings.Add("GUIDATE", "GUIDATE")
            tableMapping.ColumnMappings.Add("CURCY", "CURCY")
            tableMapping.ColumnMappings.Add("TaxType", "TaxType")
            tableMapping.ColumnMappings.Add("STO", "STO")
            tableMapping.ColumnMappings.Add("STOLINENO", "STOLINENO")
            tableMapping.ColumnMappings.Add("BOOKDESC", "BOOKDESC")
            tableMapping.ColumnMappings.Add("C_CONTACT1", "C_CONTACT1")
            tableMapping.ColumnMappings.Add("C_ADDRESS1", "C_ADDRESS1")
            tableMapping.ColumnMappings.Add("KUNDEUINR", "KUNDEUINR")
            tableMapping.ColumnMappings.Add("TAX01", "TAX01")
            tableMapping.ColumnMappings.Add("PRICE", "PRICE")
            tableMapping.ColumnMappings.Add("UNITPRICE", "UNITPRICE")
            tableMapping.ColumnMappings.Add("EXTERNORDERKEY", "EXTERNORDERKEY")
            tableMapping.ColumnMappings.Add("EXTERNLINENO", "EXTERNLINENO")
            tableMapping.ColumnMappings.Add("DeliveryKey", "DeliveryKey")
            tableMapping.ColumnMappings.Add("CaseLable", "CaseLable")
            tableMapping.ColumnMappings.Add("C_KEEPPY", "C_KEEPPY")
            tableMapping.ColumnMappings.Add("CombinationNumber", "CombinationNumber")
            tableMapping.ColumnMappings.Add("CombinationRule", "CombinationRule")
            tableMapping.ColumnMappings.Add("C_PHONE1", "C_PHONE1")
            tableMapping.ColumnMappings.Add("C_PHONE2", "C_PHONE2")
            tableMapping.ColumnMappings.Add("CURRENCY", "CURRENCY")
            tableMapping.ColumnMappings.Add("PRICE_RATE", "PRICE_RATE")
            tableMapping.ColumnMappings.Add("BUSR2", "BUSR2")
            tableMapping.ColumnMappings.Add("BUSR3", "BUSR3")
            tableMapping.ColumnMappings.Add("DESCR", "DESCR")
            tableMapping.ColumnMappings.Add("PICKQTY", "PICKQTY")
            tableMapping.ColumnMappings.Add("PACKQTY", "PACKQTY")
            tableMapping.ColumnMappings.Add("PART", "PART")
            tableMapping.ColumnMappings.Add("C_ZIP", "C_ZIP")
            tableMapping.ColumnMappings.Add("Amount", "Amount")
            tableMapping.ColumnMappings.Add("RandomNumber", "RandomNumber")
            tableMapping.ColumnMappings.Add("PlateNo", "PlateNo")
            tableMapping.ColumnMappings.Add("PlateSTATUS", "PlateSTATUS")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Packet_DEV.My.MySettings.Default.PRODConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(6) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT          GENNUMBER, PICKDETAILKEY, CASEID, PICKHEADERKEY, ORDERKEY, ORDERL"& _ 
                "INENUMBER, LOT, STORERKEY, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            SKU, ALTSKU, UOM, UOMQT"& _ 
                "Y, QTY, QTYMOVED, STATUS, DROPID, LOC, ID, PACKKEY, UPDATESOURCE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "                CARTONGROUP, CARTONTYPE, TOLOC, DOREPLENISH, REPLENISHZONE, DOCA"& _ 
                "RTONIZE, PICKMETHOD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            WAVEKEY, EFFECTIVEDATE, ADDDA"& _ 
                "TE, ADDWHO, EDITDATE, EDITWHO, FORTE_FLAG, TRAFFICCOP, ARCHIVECOP, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                 OPTIMIZECOP, LOADID, STOP, ROUTE, DOOR, TRACKINGID, FREIGHTCHAR"& _ 
                "GES, INTERMODALVEHICLE, EFQTY, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            NOTES, RfeKey1, Rfe"& _ 
                "Key2, RfeKey3, Extkey4, Rfelino3, ExtLin2, CarPickId, CarPickTrips, CarPickNo, P"& _ 
                "rintMark, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            GUINO, GUIDATE, CURCY, TaxType, STO, STO"& _ 
                "LINENO, BOOKDESC, C_CONTACT1, C_ADDRESS1, KUNDEUINR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "   TAX01, PRICE, UNITPRICE, EXTERNORDERKEY, EXTERNLINENO, DeliveryKey, CaseLable"& _ 
                ", C_KEEPPY, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            CombinationNumber, CombinationRule, C_"& _ 
                "PHONE1, C_PHONE2, PICKQTY, PACKQTY, BUSR2, BUSR3, DESCR, PART,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "             C_ZIP, Amount, RandomNumber, PlateNo, PlateSTATUS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            "& _ 
                "  Vw_PICKDETAIL_Rate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY   ORDERLINENUMBER"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.CASEDETAIL_PickFinish"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserID", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@mod", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@exkey", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@route", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@caseID", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@lastShipment", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@msg", Global.System.Data.SqlDbType.VarChar, 200, Global.System.Data.ParameterDirection.InputOutput, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "dbo.CASEDETAIL_UpdateCheck"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserID", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@mod", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@key", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.InputOutput, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@msg", Global.System.Data.SqlDbType.VarChar, 200, Global.System.Data.ParameterDirection.InputOutput, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT ADDDATE, ADDWHO, ALTSKU, ARCHIVECOP, Amount, BOOKDESC, BUSR2, BUSR3, CARTO"& _ 
                "NGROUP, CARTONTYPE, CASEID, CURCY, C_ADDRESS1, C_CONTACT1, C_KEEPPY, C_PHONE1, C"& _ 
                "_PHONE2, C_ZIP, CarPickId, CarPickNo, CarPickTrips, CaseLable, CombinationNumber"& _ 
                ", CombinationRule, DESCR, DOCARTONIZE, DOOR, DOREPLENISH, DROPID, DeliveryKey, E"& _ 
                "DITDATE, EDITWHO, EFFECTIVEDATE, EFQTY, EXTERNLINENO, EXTERNORDERKEY, ExtLin2, E"& _ 
                "xtkey4, FORTE_FLAG, FREIGHTCHARGES, GENNUMBER, GUIDATE, GUINO, ID, INTERMODALVEH"& _ 
                "ICLE, KUNDEUINR, LOADID, LOC, LOT, NOTES, OPTIMIZECOP, ORDERKEY, ORDERLINENUMBER"& _ 
                ", PACKKEY, PACKQTY, PART, PICKDETAILKEY, PICKHEADERKEY, PICKMETHOD, PICKQTY, PRI"& _ 
                "CE, PlateNo, PlateSTATUS, PrintMark, QTY, QTYMOVED, REPLENISHZONE, ROUTE, Random"& _ 
                "Number, RfeKey1, RfeKey2, RfeKey3, Rfelino3, SKU, STATUS, STO, STOLINENO, STOP, "& _ 
                "STORERKEY, TAX01, TOLOC, TRACKINGID, TRAFFICCOP, TaxType, UNITPRICE, UOM, UOMQTY"& _ 
                ", UPDATESOURCE, WAVEKEY FROM Vw_PICKDETAIL_Rate WHERE (EXTERNORDERKEY = @exkey o"& _ 
                "r (PlateNo = @exkey and PlateSTATUS = 0 )) AND (QTY <> 0)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@exkey", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTERNORDERKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT ADDDATE, ADDWHO, ALTSKU, ARCHIVECOP, Amount, BOOKDESC, BUSR2, BUSR3, CARTO"& _ 
                "NGROUP, CARTONTYPE, CASEID, CURCY, C_ADDRESS1, C_CONTACT1, C_KEEPPY, C_PHONE1, C"& _ 
                "_PHONE2, C_ZIP, CarPickId, CarPickNo, CarPickTrips, CaseLable, CombinationNumber"& _ 
                ", CombinationRule, DESCR, DOCARTONIZE, DOOR, DOREPLENISH, DROPID, DeliveryKey, E"& _ 
                "DITDATE, EDITWHO, EFFECTIVEDATE, EFQTY, EXTERNLINENO, EXTERNORDERKEY, ExtLin2, E"& _ 
                "xtkey4, FORTE_FLAG, FREIGHTCHARGES, GENNUMBER, GUIDATE, GUINO, ID, INTERMODALVEH"& _ 
                "ICLE, KUNDEUINR, LOADID, LOC, LOT, NOTES, OPTIMIZECOP, ORDERKEY, ORDERLINENUMBER"& _ 
                ", PACKKEY, PACKQTY, PART, PICKDETAILKEY, PICKHEADERKEY, PICKMETHOD, PICKQTY, PRI"& _ 
                "CE, PlateNo, PlateSTATUS, PrintMark, QTY, QTYMOVED, REPLENISHZONE, ROUTE, Random"& _ 
                "Number, RfeKey1, RfeKey2, RfeKey3, Rfelino3, SKU, STATUS, STO, STOLINENO, STOP, "& _ 
                "STORERKEY, TAX01, TOLOC, TRACKINGID, TRAFFICCOP, TaxType, UNITPRICE, UOM, UOMQTY"& _ 
                ", UPDATESOURCE, WAVEKEY FROM Vw_PICKDETAIL_Rate WHERE (GUINO = @guino)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@guino", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "GUINO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "dbo.GetKey"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KeyName", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserID", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Returnkey", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.InputOutput, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "UPDATE          Vw_PICKDETAIL_Rate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                   PACKQTY = @packqty, STA"& _ 
                "TUS = @status"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE          (EXTERNORDERKEY = @exkey) AND (SKU = @sku) AND (LO"& _ 
                "C = @loc) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            (ORDERLINENUMBER = @orderlinenumber)"& _ 
                " AND (GENNUMBER = @GENNUMBER)"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@packqty", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "PACKQTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@status", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@exkey", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTERNORDERKEY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@sku", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "SKU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@loc", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "LOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@orderlinenumber", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERLINENUMBER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GENNUMBER", Global.System.Data.SqlDbType.[Decimal], 17, Global.System.Data.ParameterDirection.Input, 38, 0, "GENNUMBER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PRODDataSet.Vw_PICKDETAIL_RateDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PRODDataSet.Vw_PICKDETAIL_RateDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PRODDataSet.Vw_PICKDETAIL_RateDataTable = New PRODDataSet.Vw_PICKDETAIL_RateDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByExkey(ByVal dataTable As PRODDataSet.Vw_PICKDETAIL_RateDataTable, ByVal exkey As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (exkey Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(exkey,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByExkey(ByVal exkey As String) As PRODDataSet.Vw_PICKDETAIL_RateDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (exkey Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(exkey,String)
            End If
            Dim dataTable As PRODDataSet.Vw_PICKDETAIL_RateDataTable = New PRODDataSet.Vw_PICKDETAIL_RateDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByGUINO(ByVal dataTable As PRODDataSet.Vw_PICKDETAIL_RateDataTable, ByVal guino As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (guino Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(guino,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByGUINO(ByVal guino As String) As PRODDataSet.Vw_PICKDETAIL_RateDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (guino Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(guino,String)
            End If
            Dim dataTable As PRODDataSet.Vw_PICKDETAIL_RateDataTable = New PRODDataSet.Vw_PICKDETAIL_RateDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function CASEDETAIL_PickFinish(ByVal UserID As String, ByVal _mod As String, ByVal exkey As String, ByVal route As String, ByVal caseID As String, ByVal lastShipment As String, ByRef msg As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (UserID Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(UserID,String)
            End If
            If (_mod Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(_mod,String)
            End If
            If (exkey Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(exkey,String)
            End If
            If (route Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(route,String)
            End If
            If (caseID Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(caseID,String)
            End If
            If (lastShipment Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(lastShipment,String)
            End If
            If (msg Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(msg,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(7).Value Is Nothing)  _
                        OrElse (command.Parameters(7).Value.GetType Is GetType(Global.System.DBNull))) Then
                msg = Nothing
            Else
                msg = CType(command.Parameters(7).Value,String)
            End If
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function CASEDETAIL_UpdateCheck(ByVal UserID As String, ByVal _mod As String, ByRef key As String, ByRef msg As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (UserID Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(UserID,String)
            End If
            If (_mod Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(_mod,String)
            End If
            If (key Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(key,String)
            End If
            If (msg Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(msg,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(3).Value Is Nothing)  _
                        OrElse (command.Parameters(3).Value.GetType Is GetType(Global.System.DBNull))) Then
                key = Nothing
            Else
                key = CType(command.Parameters(3).Value,String)
            End If
            If ((command.Parameters(4).Value Is Nothing)  _
                        OrElse (command.Parameters(4).Value.GetType Is GetType(Global.System.DBNull))) Then
                msg = Nothing
            Else
                msg = CType(command.Parameters(4).Value,String)
            End If
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetKey(ByVal KeyName As String, ByVal UserID As String, ByRef Returnkey As String) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(5)
            If (KeyName Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(KeyName,String)
            End If
            If (UserID Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(UserID,String)
            End If
            If (Returnkey Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(Returnkey,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((command.Parameters(3).Value Is Nothing)  _
                        OrElse (command.Parameters(3).Value.GetType Is GetType(Global.System.DBNull))) Then
                Returnkey = Nothing
            Else
                Returnkey = CType(command.Parameters(3).Value,String)
            End If
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function UpdatePICKDETAIL(ByVal packqty As Global.System.Nullable(Of Integer), ByVal status As String, ByVal exkey As String, ByVal sku As String, ByVal loc As String, ByVal orderlinenumber As String, ByVal GENNUMBER As Decimal) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(6)
            If (packqty.HasValue = true) Then
                command.Parameters(0).Value = CType(packqty.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (status Is Nothing) Then
                Throw New Global.System.ArgumentNullException("status")
            Else
                command.Parameters(1).Value = CType(status,String)
            End If
            If (exkey Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(exkey,String)
            End If
            If (sku Is Nothing) Then
                Throw New Global.System.ArgumentNullException("sku")
            Else
                command.Parameters(3).Value = CType(sku,String)
            End If
            If (loc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("loc")
            Else
                command.Parameters(4).Value = CType(loc,String)
            End If
            If (orderlinenumber Is Nothing) Then
                Throw New Global.System.ArgumentNullException("orderlinenumber")
            Else
                command.Parameters(5).Value = CType(orderlinenumber,String)
            End If
            command.Parameters(6).Value = CType(GENNUMBER,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Combination_CaseDetailTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Combination_CaseDetail"
            tableMapping.ColumnMappings.Add("Item_No", "Item_No")
            tableMapping.ColumnMappings.Add("CombinationNumber", "CombinationNumber")
            tableMapping.ColumnMappings.Add("CombinationNumberID", "CombinationNumberID")
            tableMapping.ColumnMappings.Add("CombinationLineNumber", "CombinationLineNumber")
            tableMapping.ColumnMappings.Add("CombinationType", "CombinationType")
            tableMapping.ColumnMappings.Add("Storerkey", "Storerkey")
            tableMapping.ColumnMappings.Add("Orderkey", "Orderkey")
            tableMapping.ColumnMappings.Add("OrderkeyLineNumber", "OrderkeyLineNumber")
            tableMapping.ColumnMappings.Add("Externorderkey", "Externorderkey")
            tableMapping.ColumnMappings.Add("WAVEKEY", "WAVEKEY")
            tableMapping.ColumnMappings.Add("ROUTE", "ROUTE")
            tableMapping.ColumnMappings.Add("DOOR", "DOOR")
            tableMapping.ColumnMappings.Add("descr", "descr")
            tableMapping.ColumnMappings.Add("Sku", "Sku")
            tableMapping.ColumnMappings.Add("Loc", "Loc")
            tableMapping.ColumnMappings.Add("QTY", "QTY")
            tableMapping.ColumnMappings.Add("GUINO", "GUINO")
            tableMapping.ColumnMappings.Add("PACKKEY", "PACKKEY")
            tableMapping.ColumnMappings.Add("NOTES", "NOTES")
            tableMapping.ColumnMappings.Add("Rfrkey1", "Rfrkey1")
            tableMapping.ColumnMappings.Add("Rfrkey2", "Rfrkey2")
            tableMapping.ColumnMappings.Add("Rfrkey3", "Rfrkey3")
            tableMapping.ColumnMappings.Add("ADDDATE", "ADDDATE")
            tableMapping.ColumnMappings.Add("ADDWHO", "ADDWHO")
            tableMapping.ColumnMappings.Add("EDITDATE", "EDITDATE")
            tableMapping.ColumnMappings.Add("EDITWHO", "EDITWHO")
            tableMapping.ColumnMappings.Add("PICKDETAILKEY", "PICKDETAILKEY")
            tableMapping.ColumnMappings.Add("CURCY", "CURCY")
            tableMapping.ColumnMappings.Add("TAX01", "TAX01")
            tableMapping.ColumnMappings.Add("PRICE", "PRICE")
            tableMapping.ColumnMappings.Add("UNITPRICE", "UNITPRICE")
            tableMapping.ColumnMappings.Add("TaxType", "TaxType")
            tableMapping.ColumnMappings.Add("Weight", "Weight")
            tableMapping.ColumnMappings.Add("Amount", "Amount")
            tableMapping.ColumnMappings.Add("RandomNumber", "RandomNumber")
            tableMapping.ColumnMappings.Add("PackMod", "PackMod")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [Combination_CaseDetail] WHERE (([Item_No] = @Original_Item_No) AND ("& _ 
                "(@IsNull_CombinationNumber = 1 AND [CombinationNumber] IS NULL) OR ([Combination"& _ 
                "Number] = @Original_CombinationNumber)) AND ((@IsNull_CombinationNumberID = 1 AN"& _ 
                "D [CombinationNumberID] IS NULL) OR ([CombinationNumberID] = @Original_Combinati"& _ 
                "onNumberID)) AND ((@IsNull_CombinationLineNumber = 1 AND [CombinationLineNumber]"& _ 
                " IS NULL) OR ([CombinationLineNumber] = @Original_CombinationLineNumber)) AND (("& _ 
                "@IsNull_CombinationType = 1 AND [CombinationType] IS NULL) OR ([CombinationType]"& _ 
                " = @Original_CombinationType)) AND ((@IsNull_Storerkey = 1 AND [Storerkey] IS NU"& _ 
                "LL) OR ([Storerkey] = @Original_Storerkey)) AND ((@IsNull_Orderkey = 1 AND [Orde"& _ 
                "rkey] IS NULL) OR ([Orderkey] = @Original_Orderkey)) AND ((@IsNull_OrderkeyLineN"& _ 
                "umber = 1 AND [OrderkeyLineNumber] IS NULL) OR ([OrderkeyLineNumber] = @Original"& _ 
                "_OrderkeyLineNumber)) AND ((@IsNull_Externorderkey = 1 AND [Externorderkey] IS N"& _ 
                "ULL) OR ([Externorderkey] = @Original_Externorderkey)) AND ((@IsNull_WAVEKEY = 1"& _ 
                " AND [WAVEKEY] IS NULL) OR ([WAVEKEY] = @Original_WAVEKEY)) AND ((@IsNull_ROUTE "& _ 
                "= 1 AND [ROUTE] IS NULL) OR ([ROUTE] = @Original_ROUTE)) AND ((@IsNull_DOOR = 1 "& _ 
                "AND [DOOR] IS NULL) OR ([DOOR] = @Original_DOOR)) AND ((@IsNull_descr = 1 AND [d"& _ 
                "escr] IS NULL) OR ([descr] = @Original_descr)) AND ((@IsNull_Sku = 1 AND [Sku] I"& _ 
                "S NULL) OR ([Sku] = @Original_Sku)) AND ((@IsNull_Loc = 1 AND [Loc] IS NULL) OR "& _ 
                "([Loc] = @Original_Loc)) AND ((@IsNull_QTY = 1 AND [QTY] IS NULL) OR ([QTY] = @O"& _ 
                "riginal_QTY)) AND ((@IsNull_GUINO = 1 AND [GUINO] IS NULL) OR ([GUINO] = @Origin"& _ 
                "al_GUINO)) AND ((@IsNull_PACKKEY = 1 AND [PACKKEY] IS NULL) OR ([PACKKEY] = @Ori"& _ 
                "ginal_PACKKEY)) AND ((@IsNull_NOTES = 1 AND [NOTES] IS NULL) OR ([NOTES] = @Orig"& _ 
                "inal_NOTES)) AND ((@IsNull_Rfrkey1 = 1 AND [Rfrkey1] IS NULL) OR ([Rfrkey1] = @O"& _ 
                "riginal_Rfrkey1)) AND ((@IsNull_Rfrkey2 = 1 AND [Rfrkey2] IS NULL) OR ([Rfrkey2]"& _ 
                " = @Original_Rfrkey2)) AND ((@IsNull_Rfrkey3 = 1 AND [Rfrkey3] IS NULL) OR ([Rfr"& _ 
                "key3] = @Original_Rfrkey3)) AND ((@IsNull_ADDDATE = 1 AND [ADDDATE] IS NULL) OR "& _ 
                "([ADDDATE] = @Original_ADDDATE)) AND ((@IsNull_ADDWHO = 1 AND [ADDWHO] IS NULL) "& _ 
                "OR ([ADDWHO] = @Original_ADDWHO)) AND ((@IsNull_EDITDATE = 1 AND [EDITDATE] IS N"& _ 
                "ULL) OR ([EDITDATE] = @Original_EDITDATE)) AND ((@IsNull_EDITWHO = 1 AND [EDITWH"& _ 
                "O] IS NULL) OR ([EDITWHO] = @Original_EDITWHO)) AND ((@IsNull_PICKDETAILKEY = 1 "& _ 
                "AND [PICKDETAILKEY] IS NULL) OR ([PICKDETAILKEY] = @Original_PICKDETAILKEY)) AND"& _ 
                " ((@IsNull_CURCY = 1 AND [CURCY] IS NULL) OR ([CURCY] = @Original_CURCY)) AND (("& _ 
                "@IsNull_TAX01 = 1 AND [TAX01] IS NULL) OR ([TAX01] = @Original_TAX01)) AND ((@Is"& _ 
                "Null_PRICE = 1 AND [PRICE] IS NULL) OR ([PRICE] = @Original_PRICE)) AND ((@IsNul"& _ 
                "l_UNITPRICE = 1 AND [UNITPRICE] IS NULL) OR ([UNITPRICE] = @Original_UNITPRICE))"& _ 
                " AND ((@IsNull_TaxType = 1 AND [TaxType] IS NULL) OR ([TaxType] = @Original_TaxT"& _ 
                "ype)) AND ((@IsNull_Weight = 1 AND [Weight] IS NULL) OR ([Weight] = @Original_We"& _ 
                "ight)) AND ((@IsNull_Amount = 1 AND [Amount] IS NULL) OR ([Amount] = @Original_A"& _ 
                "mount)) AND ((@IsNull_RandomNumber = 1 AND [RandomNumber] IS NULL) OR ([RandomNu"& _ 
                "mber] = @Original_RandomNumber)) AND ((@IsNull_PackMod = 1 AND [PackMod] IS NULL"& _ 
                ") OR ([PackMod] = @Original_PackMod)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_No", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CombinationNumber", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationNumber", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CombinationNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationNumber", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CombinationNumberID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationNumberID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CombinationNumberID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationNumberID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CombinationLineNumber", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationLineNumber", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CombinationLineNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationLineNumber", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CombinationType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CombinationType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Storerkey", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Storerkey", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Storerkey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Storerkey", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Orderkey", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Orderkey", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Orderkey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Orderkey", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OrderkeyLineNumber", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderkeyLineNumber", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OrderkeyLineNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderkeyLineNumber", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Externorderkey", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Externorderkey", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Externorderkey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Externorderkey", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_WAVEKEY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WAVEKEY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WAVEKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WAVEKEY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ROUTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ROUTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ROUTE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ROUTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOOR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_descr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "descr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_descr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "descr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sku", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sku", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sku", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sku", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Loc", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Loc", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Loc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Loc", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QTY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QTY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GUINO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GUINO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GUINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GUINO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PACKKEY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PACKKEY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PACKKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PACKKEY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NOTES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NOTES", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Rfrkey1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Rfrkey1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Rfrkey2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Rfrkey2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Rfrkey3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Rfrkey3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADDDATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDDATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADDDATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDDATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADDWHO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDWHO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADDWHO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDWHO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EDITDATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDITDATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EDITDATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDITDATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EDITWHO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDITWHO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EDITWHO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDITWHO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PICKDETAILKEY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PICKDETAILKEY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PICKDETAILKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PICKDETAILKEY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CURCY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CURCY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CURCY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CURCY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TAX01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TAX01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TAX01", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 5, "TAX01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRICE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRICE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 5, "PRICE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UNITPRICE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UNITPRICE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UNITPRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 5, "UNITPRICE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TaxType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaxType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TaxType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaxType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Weight", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Weight", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Weight", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Weight", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Amount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Amount", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "Amount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RandomNumber", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RandomNumber", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RandomNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RandomNumber", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PackMod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PackMod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PackMod", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PackMod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Combination_CaseDetail] ([CombinationNumber], [CombinationNumberID],"& _ 
                " [CombinationLineNumber], [CombinationType], [Storerkey], [Orderkey], [OrderkeyL"& _ 
                "ineNumber], [Externorderkey], [WAVEKEY], [ROUTE], [DOOR], [descr], [Sku], [Loc],"& _ 
                " [QTY], [GUINO], [PACKKEY], [NOTES], [Rfrkey1], [Rfrkey2], [Rfrkey3], [ADDDATE],"& _ 
                " [ADDWHO], [EDITDATE], [EDITWHO], [PICKDETAILKEY], [CURCY], [TAX01], [PRICE], [U"& _ 
                "NITPRICE], [TaxType], [Weight], [Amount], [RandomNumber], [PackMod]) VALUES (@Co"& _ 
                "mbinationNumber, @CombinationNumberID, @CombinationLineNumber, @CombinationType,"& _ 
                " @Storerkey, @Orderkey, @OrderkeyLineNumber, @Externorderkey, @WAVEKEY, @ROUTE, "& _ 
                "@DOOR, @descr, @Sku, @Loc, @QTY, @GUINO, @PACKKEY, @NOTES, @Rfrkey1, @Rfrkey2, @"& _ 
                "Rfrkey3, @ADDDATE, @ADDWHO, @EDITDATE, @EDITWHO, @PICKDETAILKEY, @CURCY, @TAX01,"& _ 
                " @PRICE, @UNITPRICE, @TaxType, @Weight, @Amount, @RandomNumber, @PackMod);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELE"& _ 
                "CT Item_No, CombinationNumber, CombinationNumberID, CombinationLineNumber, Combi"& _ 
                "nationType, Storerkey, Orderkey, OrderkeyLineNumber, Externorderkey, WAVEKEY, RO"& _ 
                "UTE, DOOR, descr, Sku, Loc, QTY, GUINO, PACKKEY, NOTES, Rfrkey1, Rfrkey2, Rfrkey"& _ 
                "3, ADDDATE, ADDWHO, EDITDATE, EDITWHO, PICKDETAILKEY, CURCY, TAX01, PRICE, UNITP"& _ 
                "RICE, TaxType, Weight, Amount, RandomNumber, PackMod FROM Combination_CaseDetail"& _ 
                " WHERE (Item_No = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CombinationNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CombinationNumberID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationNumberID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CombinationLineNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationLineNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CombinationType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Storerkey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Storerkey", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Orderkey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Orderkey", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OrderkeyLineNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderkeyLineNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Externorderkey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Externorderkey", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WAVEKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WAVEKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ROUTE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ROUTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOOR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@descr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "descr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sku", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sku", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Loc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Loc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GUINO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PACKKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PACKKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOTES", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rfrkey1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rfrkey2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rfrkey3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADDDATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADDWHO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDWHO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EDITDATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDITDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EDITWHO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDITWHO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PICKDETAILKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PICKDETAILKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CURCY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CURCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TAX01", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 5, "TAX01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 5, "PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UNITPRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 5, "UNITPRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TaxType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaxType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Weight", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amount", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RandomNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RandomNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PackMod", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PackMod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Combination_CaseDetail] SET [CombinationNumber] = @CombinationNumber, [Co"& _ 
                "mbinationNumberID] = @CombinationNumberID, [CombinationLineNumber] = @Combinatio"& _ 
                "nLineNumber, [CombinationType] = @CombinationType, [Storerkey] = @Storerkey, [Or"& _ 
                "derkey] = @Orderkey, [OrderkeyLineNumber] = @OrderkeyLineNumber, [Externorderkey"& _ 
                "] = @Externorderkey, [WAVEKEY] = @WAVEKEY, [ROUTE] = @ROUTE, [DOOR] = @DOOR, [de"& _ 
                "scr] = @descr, [Sku] = @Sku, [Loc] = @Loc, [QTY] = @QTY, [GUINO] = @GUINO, [PACK"& _ 
                "KEY] = @PACKKEY, [NOTES] = @NOTES, [Rfrkey1] = @Rfrkey1, [Rfrkey2] = @Rfrkey2, ["& _ 
                "Rfrkey3] = @Rfrkey3, [ADDDATE] = @ADDDATE, [ADDWHO] = @ADDWHO, [EDITDATE] = @EDI"& _ 
                "TDATE, [EDITWHO] = @EDITWHO, [PICKDETAILKEY] = @PICKDETAILKEY, [CURCY] = @CURCY,"& _ 
                " [TAX01] = @TAX01, [PRICE] = @PRICE, [UNITPRICE] = @UNITPRICE, [TaxType] = @TaxT"& _ 
                "ype, [Weight] = @Weight, [Amount] = @Amount, [RandomNumber] = @RandomNumber, [Pa"& _ 
                "ckMod] = @PackMod WHERE (([Item_No] = @Original_Item_No) AND ((@IsNull_Combinati"& _ 
                "onNumber = 1 AND [CombinationNumber] IS NULL) OR ([CombinationNumber] = @Origina"& _ 
                "l_CombinationNumber)) AND ((@IsNull_CombinationNumberID = 1 AND [CombinationNumb"& _ 
                "erID] IS NULL) OR ([CombinationNumberID] = @Original_CombinationNumberID)) AND ("& _ 
                "(@IsNull_CombinationLineNumber = 1 AND [CombinationLineNumber] IS NULL) OR ([Com"& _ 
                "binationLineNumber] = @Original_CombinationLineNumber)) AND ((@IsNull_Combinatio"& _ 
                "nType = 1 AND [CombinationType] IS NULL) OR ([CombinationType] = @Original_Combi"& _ 
                "nationType)) AND ((@IsNull_Storerkey = 1 AND [Storerkey] IS NULL) OR ([Storerkey"& _ 
                "] = @Original_Storerkey)) AND ((@IsNull_Orderkey = 1 AND [Orderkey] IS NULL) OR "& _ 
                "([Orderkey] = @Original_Orderkey)) AND ((@IsNull_OrderkeyLineNumber = 1 AND [Ord"& _ 
                "erkeyLineNumber] IS NULL) OR ([OrderkeyLineNumber] = @Original_OrderkeyLineNumbe"& _ 
                "r)) AND ((@IsNull_Externorderkey = 1 AND [Externorderkey] IS NULL) OR ([Externor"& _ 
                "derkey] = @Original_Externorderkey)) AND ((@IsNull_WAVEKEY = 1 AND [WAVEKEY] IS "& _ 
                "NULL) OR ([WAVEKEY] = @Original_WAVEKEY)) AND ((@IsNull_ROUTE = 1 AND [ROUTE] IS"& _ 
                " NULL) OR ([ROUTE] = @Original_ROUTE)) AND ((@IsNull_DOOR = 1 AND [DOOR] IS NULL"& _ 
                ") OR ([DOOR] = @Original_DOOR)) AND ((@IsNull_descr = 1 AND [descr] IS NULL) OR "& _ 
                "([descr] = @Original_descr)) AND ((@IsNull_Sku = 1 AND [Sku] IS NULL) OR ([Sku] "& _ 
                "= @Original_Sku)) AND ((@IsNull_Loc = 1 AND [Loc] IS NULL) OR ([Loc] = @Original"& _ 
                "_Loc)) AND ((@IsNull_QTY = 1 AND [QTY] IS NULL) OR ([QTY] = @Original_QTY)) AND "& _ 
                "((@IsNull_GUINO = 1 AND [GUINO] IS NULL) OR ([GUINO] = @Original_GUINO)) AND ((@"& _ 
                "IsNull_PACKKEY = 1 AND [PACKKEY] IS NULL) OR ([PACKKEY] = @Original_PACKKEY)) AN"& _ 
                "D ((@IsNull_NOTES = 1 AND [NOTES] IS NULL) OR ([NOTES] = @Original_NOTES)) AND ("& _ 
                "(@IsNull_Rfrkey1 = 1 AND [Rfrkey1] IS NULL) OR ([Rfrkey1] = @Original_Rfrkey1)) "& _ 
                "AND ((@IsNull_Rfrkey2 = 1 AND [Rfrkey2] IS NULL) OR ([Rfrkey2] = @Original_Rfrke"& _ 
                "y2)) AND ((@IsNull_Rfrkey3 = 1 AND [Rfrkey3] IS NULL) OR ([Rfrkey3] = @Original_"& _ 
                "Rfrkey3)) AND ((@IsNull_ADDDATE = 1 AND [ADDDATE] IS NULL) OR ([ADDDATE] = @Orig"& _ 
                "inal_ADDDATE)) AND ((@IsNull_ADDWHO = 1 AND [ADDWHO] IS NULL) OR ([ADDWHO] = @Or"& _ 
                "iginal_ADDWHO)) AND ((@IsNull_EDITDATE = 1 AND [EDITDATE] IS NULL) OR ([EDITDATE"& _ 
                "] = @Original_EDITDATE)) AND ((@IsNull_EDITWHO = 1 AND [EDITWHO] IS NULL) OR ([E"& _ 
                "DITWHO] = @Original_EDITWHO)) AND ((@IsNull_PICKDETAILKEY = 1 AND [PICKDETAILKEY"& _ 
                "] IS NULL) OR ([PICKDETAILKEY] = @Original_PICKDETAILKEY)) AND ((@IsNull_CURCY ="& _ 
                " 1 AND [CURCY] IS NULL) OR ([CURCY] = @Original_CURCY)) AND ((@IsNull_TAX01 = 1 "& _ 
                "AND [TAX01] IS NULL) OR ([TAX01] = @Original_TAX01)) AND ((@IsNull_PRICE = 1 AND"& _ 
                " [PRICE] IS NULL) OR ([PRICE] = @Original_PRICE)) AND ((@IsNull_UNITPRICE = 1 AN"& _ 
                "D [UNITPRICE] IS NULL) OR ([UNITPRICE] = @Original_UNITPRICE)) AND ((@IsNull_Tax"& _ 
                "Type = 1 AND [TaxType] IS NULL) OR ([TaxType] = @Original_TaxType)) AND ((@IsNul"& _ 
                "l_Weight = 1 AND [Weight] IS NULL) OR ([Weight] = @Original_Weight)) AND ((@IsNu"& _ 
                "ll_Amount = 1 AND [Amount] IS NULL) OR ([Amount] = @Original_Amount)) AND ((@IsN"& _ 
                "ull_RandomNumber = 1 AND [RandomNumber] IS NULL) OR ([RandomNumber] = @Original_"& _ 
                "RandomNumber)) AND ((@IsNull_PackMod = 1 AND [PackMod] IS NULL) OR ([PackMod] = "& _ 
                "@Original_PackMod)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Item_No, CombinationNumber, CombinationNumberID, C"& _ 
                "ombinationLineNumber, CombinationType, Storerkey, Orderkey, OrderkeyLineNumber, "& _ 
                "Externorderkey, WAVEKEY, ROUTE, DOOR, descr, Sku, Loc, QTY, GUINO, PACKKEY, NOTE"& _ 
                "S, Rfrkey1, Rfrkey2, Rfrkey3, ADDDATE, ADDWHO, EDITDATE, EDITWHO, PICKDETAILKEY,"& _ 
                " CURCY, TAX01, PRICE, UNITPRICE, TaxType, Weight, Amount, RandomNumber, PackMod "& _ 
                "FROM Combination_CaseDetail WHERE (Item_No = @Item_No)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CombinationNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CombinationNumberID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationNumberID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CombinationLineNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationLineNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CombinationType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Storerkey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Storerkey", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Orderkey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Orderkey", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OrderkeyLineNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderkeyLineNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Externorderkey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Externorderkey", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WAVEKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WAVEKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ROUTE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ROUTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOOR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@descr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "descr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sku", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sku", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Loc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Loc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GUINO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PACKKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PACKKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOTES", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rfrkey1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rfrkey2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rfrkey3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADDDATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADDWHO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDWHO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EDITDATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDITDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EDITWHO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDITWHO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PICKDETAILKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PICKDETAILKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CURCY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CURCY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TAX01", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 5, "TAX01", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 5, "PRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UNITPRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 5, "UNITPRICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TaxType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaxType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Weight", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amount", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "Amount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RandomNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RandomNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PackMod", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PackMod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Item_No", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_No", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CombinationNumber", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationNumber", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CombinationNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationNumber", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CombinationNumberID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationNumberID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CombinationNumberID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationNumberID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CombinationLineNumber", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationLineNumber", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CombinationLineNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationLineNumber", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CombinationType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CombinationType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CombinationType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Storerkey", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Storerkey", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Storerkey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Storerkey", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Orderkey", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Orderkey", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Orderkey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Orderkey", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OrderkeyLineNumber", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderkeyLineNumber", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OrderkeyLineNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OrderkeyLineNumber", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Externorderkey", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Externorderkey", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Externorderkey", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Externorderkey", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_WAVEKEY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WAVEKEY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_WAVEKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WAVEKEY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ROUTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ROUTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ROUTE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ROUTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOOR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_descr", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "descr", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_descr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "descr", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sku", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sku", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sku", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sku", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Loc", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Loc", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Loc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Loc", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_QTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QTY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_QTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QTY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GUINO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GUINO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GUINO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GUINO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PACKKEY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PACKKEY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PACKKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PACKKEY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NOTES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NOTES", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Rfrkey1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Rfrkey1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Rfrkey2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Rfrkey2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Rfrkey3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Rfrkey3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rfrkey3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADDDATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDDATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADDDATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDDATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADDWHO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDWHO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADDWHO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADDWHO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EDITDATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDITDATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EDITDATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDITDATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EDITWHO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDITWHO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EDITWHO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDITWHO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PICKDETAILKEY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PICKDETAILKEY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PICKDETAILKEY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PICKDETAILKEY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CURCY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CURCY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CURCY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CURCY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TAX01", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TAX01", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TAX01", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 5, "TAX01", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRICE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRICE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 5, "PRICE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UNITPRICE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UNITPRICE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UNITPRICE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 5, "UNITPRICE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TaxType", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaxType", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TaxType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaxType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Weight", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Weight", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Weight", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Weight", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Amount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Amount", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "Amount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RandomNumber", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RandomNumber", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RandomNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RandomNumber", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PackMod", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PackMod", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PackMod", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PackMod", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Item_No", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Item_No", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Packet_DEV.My.MySettings.Default.PRODConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT          Item_No, CombinationNumber, CombinationNumberID, CombinationLineN"& _ 
                "umber, CombinationType, Storerkey, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            Orderkey, Order"& _ 
                "keyLineNumber, Externorderkey, WAVEKEY, ROUTE, DOOR, descr, Sku, Loc, QTY, GUINO"& _ 
                ", PACKKEY, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            NOTES, Rfrkey1, Rfrkey2, Rfrkey3, ADDDA"& _ 
                "TE, ADDWHO, EDITDATE, EDITWHO, PICKDETAILKEY, CURCY, TAX01, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "          PRICE, UNITPRICE, TaxType, Weight, Amount, RandomNumber, PackMod"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM"& _ 
                "              Combination_CaseDetail"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ADDDATE, ADDWHO, Amount, CURCY, CombinationLineNumber, CombinationNumber, "& _ 
                "CombinationNumberID, CombinationType, DOOR, EDITDATE, EDITWHO, Externorderkey, G"& _ 
                "UINO, Item_No, Loc, NOTES, Orderkey, OrderkeyLineNumber, PACKKEY, PICKDETAILKEY,"& _ 
                " PRICE, PackMod, QTY, ROUTE, RandomNumber, Rfrkey1, Rfrkey2, Rfrkey3, Sku, Store"& _ 
                "rkey, TAX01, TaxType, UNITPRICE, WAVEKEY, Weight, descr FROM Combination_CaseDet"& _ 
                "ail WHERE (Externorderkey = @exkey)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@exkey", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "Externorderkey", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "UPDATE          Combination_CaseDetail"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                   Weight = @wt, PackM"& _ 
                "od = @pm"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE          (Externorderkey = @exkey) AND (PACKKEY = @packkey)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@wt", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "Weight", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@pm", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, "PackMod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@exkey", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "Externorderkey", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@packkey", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "PACKKEY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PRODDataSet.Combination_CaseDetailDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PRODDataSet.Combination_CaseDetailDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PRODDataSet.Combination_CaseDetailDataTable = New PRODDataSet.Combination_CaseDetailDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByExkey(ByVal dataTable As PRODDataSet.Combination_CaseDetailDataTable, ByVal exkey As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (exkey Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(exkey,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByExkey(ByVal exkey As String) As PRODDataSet.Combination_CaseDetailDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (exkey Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(exkey,String)
            End If
            Dim dataTable As PRODDataSet.Combination_CaseDetailDataTable = New PRODDataSet.Combination_CaseDetailDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PRODDataSet.Combination_CaseDetailDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PRODDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Combination_CaseDetail")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_Item_No As Integer,  _
                    ByVal Original_CombinationNumber As String,  _
                    ByVal Original_CombinationNumberID As String,  _
                    ByVal Original_CombinationLineNumber As String,  _
                    ByVal Original_CombinationType As String,  _
                    ByVal Original_Storerkey As String,  _
                    ByVal Original_Orderkey As String,  _
                    ByVal Original_OrderkeyLineNumber As String,  _
                    ByVal Original_Externorderkey As String,  _
                    ByVal Original_WAVEKEY As String,  _
                    ByVal Original_ROUTE As String,  _
                    ByVal Original_DOOR As String,  _
                    ByVal Original_descr As String,  _
                    ByVal Original_Sku As String,  _
                    ByVal Original_Loc As String,  _
                    ByVal Original_QTY As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GUINO As String,  _
                    ByVal Original_PACKKEY As String,  _
                    ByVal Original_NOTES As String,  _
                    ByVal Original_Rfrkey1 As String,  _
                    ByVal Original_Rfrkey2 As String,  _
                    ByVal Original_Rfrkey3 As String,  _
                    ByVal Original_ADDDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_ADDWHO As String,  _
                    ByVal Original_EDITDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_EDITWHO As String,  _
                    ByVal Original_PICKDETAILKEY As String,  _
                    ByVal Original_CURCY As String,  _
                    ByVal Original_TAX01 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_UNITPRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TaxType As String,  _
                    ByVal Original_Weight As String,  _
                    ByVal Original_Amount As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RandomNumber As String,  _
                    ByVal Original_PackMod As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Item_No,Integer)
            If (Original_CombinationNumber Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CombinationNumber,String)
            End If
            If (Original_CombinationNumberID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CombinationNumberID,String)
            End If
            If (Original_CombinationLineNumber Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CombinationLineNumber,String)
            End If
            If (Original_CombinationType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CombinationType,String)
            End If
            If (Original_Storerkey Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Storerkey,String)
            End If
            If (Original_Orderkey Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Orderkey,String)
            End If
            If (Original_OrderkeyLineNumber Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_OrderkeyLineNumber,String)
            End If
            If (Original_Externorderkey Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Externorderkey,String)
            End If
            If (Original_WAVEKEY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_WAVEKEY,String)
            End If
            If (Original_ROUTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_ROUTE,String)
            End If
            If (Original_DOOR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_DOOR,String)
            End If
            If (Original_descr Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_descr,String)
            End If
            If (Original_Sku Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_Sku,String)
            End If
            If (Original_Loc Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_Loc,String)
            End If
            If (Original_QTY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_QTY.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_GUINO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_GUINO,String)
            End If
            If (Original_PACKKEY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_PACKKEY,String)
            End If
            If (Original_NOTES Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_NOTES,String)
            End If
            If (Original_Rfrkey1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_Rfrkey1,String)
            End If
            If (Original_Rfrkey2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_Rfrkey2,String)
            End If
            If (Original_Rfrkey3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_Rfrkey3,String)
            End If
            If (Original_ADDDATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_ADDDATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_ADDWHO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_ADDWHO,String)
            End If
            If (Original_EDITDATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_EDITDATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_EDITWHO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_EDITWHO,String)
            End If
            If (Original_PICKDETAILKEY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_PICKDETAILKEY,String)
            End If
            If (Original_CURCY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_CURCY,String)
            End If
            If (Original_TAX01.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_TAX01.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_PRICE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_PRICE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_UNITPRICE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_UNITPRICE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_TaxType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_TaxType,String)
            End If
            If (Original_Weight Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_Weight,String)
            End If
            If (Original_Amount.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_Amount.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_RandomNumber Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_RandomNumber,String)
            End If
            If (Original_PackMod Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_PackMod,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CombinationNumber As String,  _
                    ByVal CombinationNumberID As String,  _
                    ByVal CombinationLineNumber As String,  _
                    ByVal CombinationType As String,  _
                    ByVal Storerkey As String,  _
                    ByVal Orderkey As String,  _
                    ByVal OrderkeyLineNumber As String,  _
                    ByVal Externorderkey As String,  _
                    ByVal WAVEKEY As String,  _
                    ByVal ROUTE As String,  _
                    ByVal DOOR As String,  _
                    ByVal descr As String,  _
                    ByVal Sku As String,  _
                    ByVal Loc As String,  _
                    ByVal QTY As Global.System.Nullable(Of Integer),  _
                    ByVal GUINO As String,  _
                    ByVal PACKKEY As String,  _
                    ByVal NOTES As String,  _
                    ByVal Rfrkey1 As String,  _
                    ByVal Rfrkey2 As String,  _
                    ByVal Rfrkey3 As String,  _
                    ByVal ADDDATE As Global.System.Nullable(Of Date),  _
                    ByVal ADDWHO As String,  _
                    ByVal EDITDATE As Global.System.Nullable(Of Date),  _
                    ByVal EDITWHO As String,  _
                    ByVal PICKDETAILKEY As String,  _
                    ByVal CURCY As String,  _
                    ByVal TAX01 As Global.System.Nullable(Of Decimal),  _
                    ByVal PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal UNITPRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal TaxType As String,  _
                    ByVal Weight As String,  _
                    ByVal Amount As Global.System.Nullable(Of Decimal),  _
                    ByVal RandomNumber As String,  _
                    ByVal PackMod As String) As Integer
            If (CombinationNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CombinationNumber,String)
            End If
            If (CombinationNumberID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CombinationNumberID,String)
            End If
            If (CombinationLineNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CombinationLineNumber,String)
            End If
            If (CombinationType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CombinationType,String)
            End If
            If (Storerkey Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Storerkey,String)
            End If
            If (Orderkey Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Orderkey,String)
            End If
            If (OrderkeyLineNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(OrderkeyLineNumber,String)
            End If
            If (Externorderkey Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Externorderkey,String)
            End If
            If (WAVEKEY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(WAVEKEY,String)
            End If
            If (ROUTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ROUTE,String)
            End If
            If (DOOR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(DOOR,String)
            End If
            If (descr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(descr,String)
            End If
            If (Sku Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Sku,String)
            End If
            If (Loc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Loc,String)
            End If
            If (QTY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(QTY.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (GUINO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(GUINO,String)
            End If
            If (PACKKEY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(PACKKEY,String)
            End If
            If (NOTES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(NOTES,String)
            End If
            If (Rfrkey1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Rfrkey1,String)
            End If
            If (Rfrkey2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Rfrkey2,String)
            End If
            If (Rfrkey3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Rfrkey3,String)
            End If
            If (ADDDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(ADDDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (ADDWHO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ADDWHO,String)
            End If
            If (EDITDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(EDITDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (EDITWHO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(EDITWHO,String)
            End If
            If (PICKDETAILKEY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(PICKDETAILKEY,String)
            End If
            If (CURCY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(CURCY,String)
            End If
            If (TAX01.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(TAX01.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (PRICE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(PRICE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (UNITPRICE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(UNITPRICE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (TaxType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(TaxType,String)
            End If
            If (Weight Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Weight,String)
            End If
            If (Amount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Amount.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (RandomNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(RandomNumber,String)
            End If
            If (PackMod Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(PackMod,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CombinationNumber As String,  _
                    ByVal CombinationNumberID As String,  _
                    ByVal CombinationLineNumber As String,  _
                    ByVal CombinationType As String,  _
                    ByVal Storerkey As String,  _
                    ByVal Orderkey As String,  _
                    ByVal OrderkeyLineNumber As String,  _
                    ByVal Externorderkey As String,  _
                    ByVal WAVEKEY As String,  _
                    ByVal ROUTE As String,  _
                    ByVal DOOR As String,  _
                    ByVal descr As String,  _
                    ByVal Sku As String,  _
                    ByVal Loc As String,  _
                    ByVal QTY As Global.System.Nullable(Of Integer),  _
                    ByVal GUINO As String,  _
                    ByVal PACKKEY As String,  _
                    ByVal NOTES As String,  _
                    ByVal Rfrkey1 As String,  _
                    ByVal Rfrkey2 As String,  _
                    ByVal Rfrkey3 As String,  _
                    ByVal ADDDATE As Global.System.Nullable(Of Date),  _
                    ByVal ADDWHO As String,  _
                    ByVal EDITDATE As Global.System.Nullable(Of Date),  _
                    ByVal EDITWHO As String,  _
                    ByVal PICKDETAILKEY As String,  _
                    ByVal CURCY As String,  _
                    ByVal TAX01 As Global.System.Nullable(Of Decimal),  _
                    ByVal PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal UNITPRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal TaxType As String,  _
                    ByVal Weight As String,  _
                    ByVal Amount As Global.System.Nullable(Of Decimal),  _
                    ByVal RandomNumber As String,  _
                    ByVal PackMod As String,  _
                    ByVal Original_Item_No As Integer,  _
                    ByVal Original_CombinationNumber As String,  _
                    ByVal Original_CombinationNumberID As String,  _
                    ByVal Original_CombinationLineNumber As String,  _
                    ByVal Original_CombinationType As String,  _
                    ByVal Original_Storerkey As String,  _
                    ByVal Original_Orderkey As String,  _
                    ByVal Original_OrderkeyLineNumber As String,  _
                    ByVal Original_Externorderkey As String,  _
                    ByVal Original_WAVEKEY As String,  _
                    ByVal Original_ROUTE As String,  _
                    ByVal Original_DOOR As String,  _
                    ByVal Original_descr As String,  _
                    ByVal Original_Sku As String,  _
                    ByVal Original_Loc As String,  _
                    ByVal Original_QTY As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GUINO As String,  _
                    ByVal Original_PACKKEY As String,  _
                    ByVal Original_NOTES As String,  _
                    ByVal Original_Rfrkey1 As String,  _
                    ByVal Original_Rfrkey2 As String,  _
                    ByVal Original_Rfrkey3 As String,  _
                    ByVal Original_ADDDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_ADDWHO As String,  _
                    ByVal Original_EDITDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_EDITWHO As String,  _
                    ByVal Original_PICKDETAILKEY As String,  _
                    ByVal Original_CURCY As String,  _
                    ByVal Original_TAX01 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_UNITPRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TaxType As String,  _
                    ByVal Original_Weight As String,  _
                    ByVal Original_Amount As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RandomNumber As String,  _
                    ByVal Original_PackMod As String,  _
                    ByVal Item_No As Integer) As Integer
            If (CombinationNumber Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CombinationNumber,String)
            End If
            If (CombinationNumberID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CombinationNumberID,String)
            End If
            If (CombinationLineNumber Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CombinationLineNumber,String)
            End If
            If (CombinationType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CombinationType,String)
            End If
            If (Storerkey Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Storerkey,String)
            End If
            If (Orderkey Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Orderkey,String)
            End If
            If (OrderkeyLineNumber Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(OrderkeyLineNumber,String)
            End If
            If (Externorderkey Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Externorderkey,String)
            End If
            If (WAVEKEY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(WAVEKEY,String)
            End If
            If (ROUTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ROUTE,String)
            End If
            If (DOOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(DOOR,String)
            End If
            If (descr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(descr,String)
            End If
            If (Sku Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Sku,String)
            End If
            If (Loc Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Loc,String)
            End If
            If (QTY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(QTY.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (GUINO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(GUINO,String)
            End If
            If (PACKKEY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(PACKKEY,String)
            End If
            If (NOTES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(NOTES,String)
            End If
            If (Rfrkey1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Rfrkey1,String)
            End If
            If (Rfrkey2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Rfrkey2,String)
            End If
            If (Rfrkey3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Rfrkey3,String)
            End If
            If (ADDDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(ADDDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (ADDWHO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(ADDWHO,String)
            End If
            If (EDITDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(EDITDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (EDITWHO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(EDITWHO,String)
            End If
            If (PICKDETAILKEY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(PICKDETAILKEY,String)
            End If
            If (CURCY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(CURCY,String)
            End If
            If (TAX01.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(TAX01.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (PRICE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(PRICE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (UNITPRICE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(UNITPRICE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (TaxType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(TaxType,String)
            End If
            If (Weight Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Weight,String)
            End If
            If (Amount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Amount.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (RandomNumber Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(RandomNumber,String)
            End If
            If (PackMod Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(PackMod,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_Item_No,Integer)
            If (Original_CombinationNumber Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_CombinationNumber,String)
            End If
            If (Original_CombinationNumberID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_CombinationNumberID,String)
            End If
            If (Original_CombinationLineNumber Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_CombinationLineNumber,String)
            End If
            If (Original_CombinationType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_CombinationType,String)
            End If
            If (Original_Storerkey Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_Storerkey,String)
            End If
            If (Original_Orderkey Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_Orderkey,String)
            End If
            If (Original_OrderkeyLineNumber Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_OrderkeyLineNumber,String)
            End If
            If (Original_Externorderkey Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_Externorderkey,String)
            End If
            If (Original_WAVEKEY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_WAVEKEY,String)
            End If
            If (Original_ROUTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_ROUTE,String)
            End If
            If (Original_DOOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_DOOR,String)
            End If
            If (Original_descr Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_descr,String)
            End If
            If (Original_Sku Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_Sku,String)
            End If
            If (Original_Loc Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_Loc,String)
            End If
            If (Original_QTY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_QTY.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_GUINO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_GUINO,String)
            End If
            If (Original_PACKKEY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_PACKKEY,String)
            End If
            If (Original_NOTES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_NOTES,String)
            End If
            If (Original_Rfrkey1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_Rfrkey1,String)
            End If
            If (Original_Rfrkey2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_Rfrkey2,String)
            End If
            If (Original_Rfrkey3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_Rfrkey3,String)
            End If
            If (Original_ADDDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_ADDDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_ADDWHO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_ADDWHO,String)
            End If
            If (Original_EDITDATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_EDITDATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_EDITWHO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_EDITWHO,String)
            End If
            If (Original_PICKDETAILKEY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_PICKDETAILKEY,String)
            End If
            If (Original_CURCY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_CURCY,String)
            End If
            If (Original_TAX01.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_TAX01.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_PRICE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_PRICE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (Original_UNITPRICE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_UNITPRICE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (Original_TaxType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_TaxType,String)
            End If
            If (Original_Weight Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_Weight,String)
            End If
            If (Original_Amount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_Amount.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            If (Original_RandomNumber Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_RandomNumber,String)
            End If
            If (Original_PackMod Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_PackMod,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Item_No,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CombinationNumber As String,  _
                    ByVal CombinationNumberID As String,  _
                    ByVal CombinationLineNumber As String,  _
                    ByVal CombinationType As String,  _
                    ByVal Storerkey As String,  _
                    ByVal Orderkey As String,  _
                    ByVal OrderkeyLineNumber As String,  _
                    ByVal Externorderkey As String,  _
                    ByVal WAVEKEY As String,  _
                    ByVal ROUTE As String,  _
                    ByVal DOOR As String,  _
                    ByVal descr As String,  _
                    ByVal Sku As String,  _
                    ByVal Loc As String,  _
                    ByVal QTY As Global.System.Nullable(Of Integer),  _
                    ByVal GUINO As String,  _
                    ByVal PACKKEY As String,  _
                    ByVal NOTES As String,  _
                    ByVal Rfrkey1 As String,  _
                    ByVal Rfrkey2 As String,  _
                    ByVal Rfrkey3 As String,  _
                    ByVal ADDDATE As Global.System.Nullable(Of Date),  _
                    ByVal ADDWHO As String,  _
                    ByVal EDITDATE As Global.System.Nullable(Of Date),  _
                    ByVal EDITWHO As String,  _
                    ByVal PICKDETAILKEY As String,  _
                    ByVal CURCY As String,  _
                    ByVal TAX01 As Global.System.Nullable(Of Decimal),  _
                    ByVal PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal UNITPRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal TaxType As String,  _
                    ByVal Weight As String,  _
                    ByVal Amount As Global.System.Nullable(Of Decimal),  _
                    ByVal RandomNumber As String,  _
                    ByVal PackMod As String,  _
                    ByVal Original_Item_No As Integer,  _
                    ByVal Original_CombinationNumber As String,  _
                    ByVal Original_CombinationNumberID As String,  _
                    ByVal Original_CombinationLineNumber As String,  _
                    ByVal Original_CombinationType As String,  _
                    ByVal Original_Storerkey As String,  _
                    ByVal Original_Orderkey As String,  _
                    ByVal Original_OrderkeyLineNumber As String,  _
                    ByVal Original_Externorderkey As String,  _
                    ByVal Original_WAVEKEY As String,  _
                    ByVal Original_ROUTE As String,  _
                    ByVal Original_DOOR As String,  _
                    ByVal Original_descr As String,  _
                    ByVal Original_Sku As String,  _
                    ByVal Original_Loc As String,  _
                    ByVal Original_QTY As Global.System.Nullable(Of Integer),  _
                    ByVal Original_GUINO As String,  _
                    ByVal Original_PACKKEY As String,  _
                    ByVal Original_NOTES As String,  _
                    ByVal Original_Rfrkey1 As String,  _
                    ByVal Original_Rfrkey2 As String,  _
                    ByVal Original_Rfrkey3 As String,  _
                    ByVal Original_ADDDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_ADDWHO As String,  _
                    ByVal Original_EDITDATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_EDITWHO As String,  _
                    ByVal Original_PICKDETAILKEY As String,  _
                    ByVal Original_CURCY As String,  _
                    ByVal Original_TAX01 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_UNITPRICE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TaxType As String,  _
                    ByVal Original_Weight As String,  _
                    ByVal Original_Amount As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RandomNumber As String,  _
                    ByVal Original_PackMod As String) As Integer
            Return Me.Update(CombinationNumber, CombinationNumberID, CombinationLineNumber, CombinationType, Storerkey, Orderkey, OrderkeyLineNumber, Externorderkey, WAVEKEY, ROUTE, DOOR, descr, Sku, Loc, QTY, GUINO, PACKKEY, NOTES, Rfrkey1, Rfrkey2, Rfrkey3, ADDDATE, ADDWHO, EDITDATE, EDITWHO, PICKDETAILKEY, CURCY, TAX01, PRICE, UNITPRICE, TaxType, Weight, Amount, RandomNumber, PackMod, Original_Item_No, Original_CombinationNumber, Original_CombinationNumberID, Original_CombinationLineNumber, Original_CombinationType, Original_Storerkey, Original_Orderkey, Original_OrderkeyLineNumber, Original_Externorderkey, Original_WAVEKEY, Original_ROUTE, Original_DOOR, Original_descr, Original_Sku, Original_Loc, Original_QTY, Original_GUINO, Original_PACKKEY, Original_NOTES, Original_Rfrkey1, Original_Rfrkey2, Original_Rfrkey3, Original_ADDDATE, Original_ADDWHO, Original_EDITDATE, Original_EDITWHO, Original_PICKDETAILKEY, Original_CURCY, Original_TAX01, Original_PRICE, Original_UNITPRICE, Original_TaxType, Original_Weight, Original_Amount, Original_RandomNumber, Original_PackMod, Original_Item_No)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateWeightQuery(ByVal wt As String, ByVal pm As String, ByVal exkey As String, ByVal packkey As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (wt Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(wt,String)
            End If
            If (pm Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(pm,String)
            End If
            If (exkey Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(exkey,String)
            End If
            If (packkey Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(packkey,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Vw_Case_Addr_InvoiceTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Vw_Case_Addr_Invoice"
            tableMapping.ColumnMappings.Add("PICKDETAILKEY", "PICKDETAILKEY")
            tableMapping.ColumnMappings.Add("CASEID", "CASEID")
            tableMapping.ColumnMappings.Add("PICKHEADERKEY", "PICKHEADERKEY")
            tableMapping.ColumnMappings.Add("EXTERNORDERKEY", "EXTERNORDERKEY")
            tableMapping.ColumnMappings.Add("ORDERKEY", "ORDERKEY")
            tableMapping.ColumnMappings.Add("ORDERLINENUMBER", "ORDERLINENUMBER")
            tableMapping.ColumnMappings.Add("STORERKEY", "STORERKEY")
            tableMapping.ColumnMappings.Add("SKU", "SKU")
            tableMapping.ColumnMappings.Add("ALTSKU", "ALTSKU")
            tableMapping.ColumnMappings.Add("QTY", "QTY")
            tableMapping.ColumnMappings.Add("PKQTY", "PKQTY")
            tableMapping.ColumnMappings.Add("OPQTY", "OPQTY")
            tableMapping.ColumnMappings.Add("STATUS", "STATUS")
            tableMapping.ColumnMappings.Add("LOC", "LOC")
            tableMapping.ColumnMappings.Add("TOLOC", "TOLOC")
            tableMapping.ColumnMappings.Add("WAVEKEY", "WAVEKEY")
            tableMapping.ColumnMappings.Add("EFFECTIVEDATE", "EFFECTIVEDATE")
            tableMapping.ColumnMappings.Add("CONSIGNEEKEY", "CONSIGNEEKEY")
            tableMapping.ColumnMappings.Add("ROUTE", "ROUTE")
            tableMapping.ColumnMappings.Add("DOOR", "DOOR")
            tableMapping.ColumnMappings.Add("SOURCEKEY", "SOURCEKEY")
            tableMapping.ColumnMappings.Add("EDITDATE", "EDITDATE")
            tableMapping.ColumnMappings.Add("EDITWHO", "EDITWHO")
            tableMapping.ColumnMappings.Add("PackMod", "PackMod")
            tableMapping.ColumnMappings.Add("GUINO", "GUINO")
            tableMapping.ColumnMappings.Add("POKEYLINENUMBER", "POKEYLINENUMBER")
            tableMapping.ColumnMappings.Add("POKEY", "POKEY")
            tableMapping.ColumnMappings.Add("CASELABLE", "CASELABLE")
            tableMapping.ColumnMappings.Add("SHIPDATE", "SHIPDATE")
            tableMapping.ColumnMappings.Add("Sprint", "Sprint")
            tableMapping.ColumnMappings.Add("LastShipment", "LastShipment")
            tableMapping.ColumnMappings.Add("Company", "Company")
            tableMapping.ColumnMappings.Add("S_Address1", "S_Address1")
            tableMapping.ColumnMappings.Add("S_Address2", "S_Address2")
            tableMapping.ColumnMappings.Add("S_Phone1", "S_Phone1")
            tableMapping.ColumnMappings.Add("S_Phone2", "S_Phone2")
            tableMapping.ColumnMappings.Add("C_CONTACT1", "C_CONTACT1")
            tableMapping.ColumnMappings.Add("C_ADDRESS1", "C_ADDRESS1")
            tableMapping.ColumnMappings.Add("C_ZIP", "C_ZIP")
            tableMapping.ColumnMappings.Add("C_PHONE1", "C_PHONE1")
            tableMapping.ColumnMappings.Add("C_KEEPPY", "C_KEEPPY")
            tableMapping.ColumnMappings.Add("DESCR", "DESCR")
            tableMapping.ColumnMappings.Add("BILLTOKEY", "BILLTOKEY")
            tableMapping.ColumnMappings.Add("CURCY", "CURCY")
            tableMapping.ColumnMappings.Add("TAX01", "TAX01")
            tableMapping.ColumnMappings.Add("PRICE", "PRICE")
            tableMapping.ColumnMappings.Add("UNITPRICE", "UNITPRICE")
            tableMapping.ColumnMappings.Add("TaxType", "TaxType")
            tableMapping.ColumnMappings.Add("PRICE_RATE", "PRICE_RATE")
            tableMapping.ColumnMappings.Add("C_PHONE2", "C_PHONE2")
            tableMapping.ColumnMappings.Add("SALESPERSON", "SALESPERSON")
            tableMapping.ColumnMappings.Add("PrintMark", "PrintMark")
            tableMapping.ColumnMappings.Add("C_COUNTRY", "C_COUNTRY")
            tableMapping.ColumnMappings.Add("C_CITY", "C_CITY")
            tableMapping.ColumnMappings.Add("C_STATE", "C_STATE")
            tableMapping.ColumnMappings.Add("C_EMAIL1", "C_EMAIL1")
            tableMapping.ColumnMappings.Add("Weight", "Weight")
            tableMapping.ColumnMappings.Add("Amount", "Amount")
            tableMapping.ColumnMappings.Add("RandomNumber", "RandomNumber")
            tableMapping.ColumnMappings.Add("NOTES", "NOTES")
            tableMapping.ColumnMappings.Add("AREA", "AREA")
            tableMapping.ColumnMappings.Add("RSNO", "RSNO")
            tableMapping.ColumnMappings.Add("EQID", "EQID")
            tableMapping.ColumnMappings.Add("TOTALVALUE", "TOTALVALUE")
            tableMapping.ColumnMappings.Add("INCOTERM", "INCOTERM")
            tableMapping.ColumnMappings.Add("StoreType2", "StoreType2")
            tableMapping.ColumnMappings.Add("SUSR5", "SUSR5")
            tableMapping.ColumnMappings.Add("DESCR1", "DESCR1")
            tableMapping.ColumnMappings.Add("STEP2", "STEP2")
            tableMapping.ColumnMappings.Add("SPSHIPDATE", "SPSHIPDATE1")
            tableMapping.ColumnMappings.Add("Labx01", "Labx01")
            tableMapping.ColumnMappings.Add("Labx02", "Labx02")
            tableMapping.ColumnMappings.Add("Labx03", "Labx03")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Packet_DEV.My.MySettings.Default.PRODConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT      PICKDETAILKEY, CASEID, PICKHEADERKEY, EXTERNORDERKEY, ORDERKEY, ORDER"& _ 
                "LINENUMBER, STORERKEY, SKU, ALTSKU, QTY, PKQTY, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   OPQTY, STAT"& _ 
                "US, LOC, TOLOC, WAVEKEY, EFFECTIVEDATE, CONSIGNEEKEY, ROUTE, DOOR, SOURCEKEY, ED"& _ 
                "ITDATE, EDITWHO, PackMod, GUINO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   POKEYLINENUMBER, POKEY, CA"& _ 
                "SELABLE, SHIPDATE, Sprint, LastShipment, Company, S_Address1, S_Address2, S_Phon"& _ 
                "e1, S_Phone2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   C_CONTACT1, C_ADDRESS1, C_ZIP, C_PHONE1, C_KE"& _ 
                "EPPY, BILLTOKEY, CURCY, TAX01, PRICE, UNITPRICE, TaxType, PRICE_RATE, C_PHONE2, "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   SALESPERSON, DESCR, DESCR1,  PrintMark, C_COUNTRY, C_CITY, "& _ 
                "C_STATE, C_EMAIL1, Weight, Amount, RandomNumber, NOTES, AREA, RSNO, STEP2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                EQID, TOTALVALUE, INCOTERM, StoreType2, SUSR5, SPSHIPDATE, Labx0"& _ 
                "1, Labx02, Labx03"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Vw_Case_Addr_Invoice"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ALTSKU, AREA, Amount, BILLTOKEY, CASEID, CASELABLE, CONSIGNEEKEY, CURCY, C"& _ 
                "_ADDRESS1, C_CITY, C_CONTACT1, C_COUNTRY, C_EMAIL1, C_KEEPPY, C_PHONE1, C_PHONE2"& _ 
                ", C_STATE, C_ZIP, Company, DESCR, DESCR1, DOOR, EDITDATE, EDITWHO, EFFECTIVEDATE"& _ 
                ", EQID, EXTERNORDERKEY, GUINO, INCOTERM, LOC, Labx01, Labx02, Labx03, LastShipme"& _ 
                "nt, NOTES, OPQTY, ORDERKEY, ORDERLINENUMBER, PICKDETAILKEY, PICKHEADERKEY, PKQTY"& _ 
                ", POKEY, POKEYLINENUMBER, PRICE, PRICE_RATE, PackMod, PrintMark, QTY, ROUTE, RSN"& _ 
                "O, RandomNumber, SALESPERSON, SHIPDATE, SKU, SOURCEKEY, SPSHIPDATE, STATUS, STEP"& _ 
                "2, STORERKEY, SUSR5, S_Address1, S_Address2, S_Phone1, S_Phone2, Sprint, StoreTy"& _ 
                "pe2, TAX01, TOLOC, TOTALVALUE, TaxType, UNITPRICE, WAVEKEY, Weight FROM Vw_Case_"& _ 
                "Addr_Invoice WHERE (EXTERNORDERKEY = @exkey)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@exkey", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTERNORDERKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT ALTSKU, AREA, Amount, BILLTOKEY, CASEID, CASELABLE, CONSIGNEEKEY, CURCY, C"& _ 
                "_ADDRESS1, C_CITY, C_CONTACT1, C_COUNTRY, C_EMAIL1, C_KEEPPY, C_PHONE1, C_PHONE2"& _ 
                ", C_STATE, C_ZIP, Company, DESCR, DESCR1, DOOR, EDITDATE, EDITWHO, EFFECTIVEDATE"& _ 
                ", EQID, EXTERNORDERKEY, GUINO, INCOTERM, LOC, Labx01, Labx02, Labx03, LastShipme"& _ 
                "nt, NOTES, OPQTY, ORDERKEY, ORDERLINENUMBER, PICKDETAILKEY, PICKHEADERKEY, PKQTY"& _ 
                ", POKEY, POKEYLINENUMBER, PRICE, PRICE_RATE, PackMod, PrintMark, QTY, ROUTE, RSN"& _ 
                "O, RandomNumber, SALESPERSON, SHIPDATE, SKU, SOURCEKEY, SPSHIPDATE, STATUS, STEP"& _ 
                "2, STORERKEY, SUSR5, S_Address1, S_Address2, S_Phone1, S_Phone2, Sprint, StoreTy"& _ 
                "pe2, TAX01, TOLOC, TOTALVALUE, TaxType, UNITPRICE, WAVEKEY, Weight FROM Vw_Case_"& _ 
                "Addr_Invoice WHERE (WAVEKEY = @WK)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WK", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "WAVEKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PRODDataSet.Vw_Case_Addr_InvoiceDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PRODDataSet.Vw_Case_Addr_InvoiceDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PRODDataSet.Vw_Case_Addr_InvoiceDataTable = New PRODDataSet.Vw_Case_Addr_InvoiceDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByExkey(ByVal dataTable As PRODDataSet.Vw_Case_Addr_InvoiceDataTable, ByVal exkey As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (exkey Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(exkey,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByExkey(ByVal exkey As String) As PRODDataSet.Vw_Case_Addr_InvoiceDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (exkey Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(exkey,String)
            End If
            Dim dataTable As PRODDataSet.Vw_Case_Addr_InvoiceDataTable = New PRODDataSet.Vw_Case_Addr_InvoiceDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByWAVEKEY(ByVal dataTable As PRODDataSet.Vw_Case_Addr_InvoiceDataTable, ByVal WK As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (WK Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(WK,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByWAVEKEY(ByVal WK As String) As PRODDataSet.Vw_Case_Addr_InvoiceDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (WK Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(WK,String)
            End If
            Dim dataTable As PRODDataSet.Vw_Case_Addr_InvoiceDataTable = New PRODDataSet.Vw_Case_Addr_InvoiceDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Vw_Rpt_PickListTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Vw_Rpt_PickList"
            tableMapping.ColumnMappings.Add("PICKDETAILKEY", "PICKDETAILKEY")
            tableMapping.ColumnMappings.Add("EXTERNORDERKEY", "EXTERNORDERKEY")
            tableMapping.ColumnMappings.Add("STORERKEY", "STORERKEY")
            tableMapping.ColumnMappings.Add("LOC", "LOC")
            tableMapping.ColumnMappings.Add("SKU", "SKU")
            tableMapping.ColumnMappings.Add("BUSR2", "BUSR2")
            tableMapping.ColumnMappings.Add("DESCR", "DESCR")
            tableMapping.ColumnMappings.Add("QTY", "QTY")
            tableMapping.ColumnMappings.Add("ORDERKEY", "ORDERKEY")
            tableMapping.ColumnMappings.Add("ORDERLINENUMBER", "ORDERLINENUMBER")
            tableMapping.ColumnMappings.Add("NOTES", "NOTES")
            tableMapping.ColumnMappings.Add("Pkmemo", "Pkmemo")
            tableMapping.ColumnMappings.Add("WAVEKEY", "WAVEKEY")
            tableMapping.ColumnMappings.Add("ROUTE", "ROUTE")
            tableMapping.ColumnMappings.Add("CONSIGNEEKEY", "CONSIGNEEKEY")
            tableMapping.ColumnMappings.Add("C_CONTACT1", "C_CONTACT1")
            tableMapping.ColumnMappings.Add("SALESPERSON", "SALESPERSON")
            tableMapping.ColumnMappings.Add("ALLOCATIONSTATUS", "ALLOCATIONSTATUS")
            tableMapping.ColumnMappings.Add("ACTDATE", "ACTDATE")
            tableMapping.ColumnMappings.Add("SHIPPEDDATE", "SHIPPEDDATE")
            tableMapping.ColumnMappings.Add("STATUS", "STATUS")
            tableMapping.ColumnMappings.Add("CarPickId", "CarPickId")
            tableMapping.ColumnMappings.Add("ExtLin2", "ExtLin2")
            tableMapping.ColumnMappings.Add("C_COMPANY", "C_COMPANY")
            tableMapping.ColumnMappings.Add("BillingKey", "BillingKey")
            tableMapping.ColumnMappings.Add("susr3", "susr3")
            tableMapping.ColumnMappings.Add("SUSR4", "SUSR4")
            tableMapping.ColumnMappings.Add("AgvBox", "AgvBox")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Packet_DEV.My.MySettings.Default.PRODConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT          PICKDETAILKEY, EXTERNORDERKEY, STORERKEY, LOC, SKU, BUSR2, DESCR,"& _ 
                " QTY, ORDERKEY, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            ORDERLINENUMBER, NOTES, Pkmemo, WA"& _ 
                "VEKEY, ROUTE, CONSIGNEEKEY, C_CONTACT1, SALESPERSON, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "   ALLOCATIONSTATUS, ACTDATE, SHIPPEDDATE, STATUS, CarPickId, ExtLin2, C_COMPANY"& _ 
                ", BillingKey, susr3, SUSR4,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             AgvBox"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          "& _ 
                "    Vw_Rpt_PickList"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ACTDATE, ALLOCATIONSTATUS, AgvBox, BUSR2, BillingKey, CONSIGNEEKEY, C_COMP"& _ 
                "ANY, C_CONTACT1, CarPickId, DESCR, EXTERNORDERKEY, ExtLin2, LOC, NOTES, ORDERKEY"& _ 
                ", ORDERLINENUMBER, PICKDETAILKEY, Pkmemo, QTY, ROUTE, SALESPERSON, SHIPPEDDATE, "& _ 
                "SKU, STATUS, STORERKEY, SUSR4, WAVEKEY, susr3 FROM Vw_Rpt_PickList WHERE (ORDERK"& _ 
                "EY = @ORDERKEY) AND (QTY > 0) ORDER BY LOC"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERKEY", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDERKEY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT          TOP (1) ORDERKEY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM              Vw_Rpt_PickList"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE       "& _ 
                "   (AgvBox = @ORDERKEY)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDERKEY", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "AgvBox", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PRODDataSet.Vw_Rpt_PickListDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PRODDataSet.Vw_Rpt_PickListDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PRODDataSet.Vw_Rpt_PickListDataTable = New PRODDataSet.Vw_Rpt_PickListDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy_ORDERKEY(ByVal dataTable As PRODDataSet.Vw_Rpt_PickListDataTable, ByVal ORDERKEY As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (ORDERKEY Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(ORDERKEY,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal ORDERKEY As String) As PRODDataSet.Vw_Rpt_PickListDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (ORDERKEY Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(ORDERKEY,String)
            End If
            Dim dataTable As PRODDataSet.Vw_Rpt_PickListDataTable = New PRODDataSet.Vw_Rpt_PickListDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetOrderkey(ByVal ORDERKEY As String) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (ORDERKEY Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(ORDERKEY,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _cASEDETAILTableAdapter As CASEDETAILTableAdapter
        
        Private _combination_CaseDetailTableAdapter As Combination_CaseDetailTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CASEDETAILTableAdapter() As CASEDETAILTableAdapter
            Get
                Return Me._cASEDETAILTableAdapter
            End Get
            Set
                Me._cASEDETAILTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Combination_CaseDetailTableAdapter() As Combination_CaseDetailTableAdapter
            Get
                Return Me._combination_CaseDetailTableAdapter
            End Get
            Set
                Me._combination_CaseDetailTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._cASEDETAILTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cASEDETAILTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cASEDETAILTableAdapter.Connection
                End If
                If ((Not (Me._combination_CaseDetailTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._combination_CaseDetailTableAdapter.Connection) Is Nothing)) Then
                    Return Me._combination_CaseDetailTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._cASEDETAILTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._combination_CaseDetailTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As PRODDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cASEDETAILTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CASEDETAIL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cASEDETAILTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._combination_CaseDetailTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Combination_CaseDetail.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._combination_CaseDetailTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As PRODDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cASEDETAILTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CASEDETAIL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cASEDETAILTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._combination_CaseDetailTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Combination_CaseDetail.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._combination_CaseDetailTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As PRODDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._combination_CaseDetailTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Combination_CaseDetail.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._combination_CaseDetailTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cASEDETAILTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CASEDETAIL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cASEDETAILTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As PRODDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._cASEDETAILTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cASEDETAILTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._combination_CaseDetailTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._combination_CaseDetailTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._cASEDETAILTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cASEDETAILTableAdapter, Me._cASEDETAILTableAdapter.Connection)
                    Me._cASEDETAILTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cASEDETAILTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cASEDETAILTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cASEDETAILTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cASEDETAILTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._combination_CaseDetailTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._combination_CaseDetailTableAdapter, Me._combination_CaseDetailTableAdapter.Connection)
                    Me._combination_CaseDetailTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._combination_CaseDetailTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._combination_CaseDetailTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._combination_CaseDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._combination_CaseDetailTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._cASEDETAILTableAdapter) Is Nothing) Then
                    Me._cASEDETAILTableAdapter.Connection = CType(revertConnections(Me._cASEDETAILTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cASEDETAILTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._combination_CaseDetailTableAdapter) Is Nothing) Then
                    Me._combination_CaseDetailTableAdapter.Connection = CType(revertConnections(Me._combination_CaseDetailTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._combination_CaseDetailTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
