'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("PRODDataSet2"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class PRODDataSet2
    Inherits Global.System.Data.DataSet
    
    Private tableVw_Case_Addr_Invoice As Vw_Case_Addr_InvoiceDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Vw_Case_Addr_Invoice")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_Case_Addr_InvoiceDataTable(ds.Tables("Vw_Case_Addr_Invoice")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Vw_Case_Addr_Invoice() As Vw_Case_Addr_InvoiceDataTable
        Get
            Return Me.tableVw_Case_Addr_Invoice
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As PRODDataSet2 = CType(MyBase.Clone,PRODDataSet2)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("Vw_Case_Addr_Invoice")) Is Nothing) Then
                MyBase.Tables.Add(New Vw_Case_Addr_InvoiceDataTable(ds.Tables("Vw_Case_Addr_Invoice")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableVw_Case_Addr_Invoice = CType(MyBase.Tables("Vw_Case_Addr_Invoice"),Vw_Case_Addr_InvoiceDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVw_Case_Addr_Invoice) Is Nothing) Then
                Me.tableVw_Case_Addr_Invoice.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "PRODDataSet2"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/PRODDataSet2.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableVw_Case_Addr_Invoice = New Vw_Case_Addr_InvoiceDataTable()
        MyBase.Tables.Add(Me.tableVw_Case_Addr_Invoice)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeVw_Case_Addr_Invoice() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As PRODDataSet2 = New PRODDataSet2()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub Vw_Case_Addr_InvoiceRowChangeEventHandler(ByVal sender As Object, ByVal e As Vw_Case_Addr_InvoiceRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Vw_Case_Addr_InvoiceDataTable
        Inherits Global.System.Data.TypedTableBase(Of Vw_Case_Addr_InvoiceRow)
        
        Private columnPICKDETAILKEY As Global.System.Data.DataColumn
        
        Private columnCASEID As Global.System.Data.DataColumn
        
        Private columnPICKHEADERKEY As Global.System.Data.DataColumn
        
        Private columnEXTERNORDERKEY As Global.System.Data.DataColumn
        
        Private columnORDERKEY As Global.System.Data.DataColumn
        
        Private columnORDERLINENUMBER As Global.System.Data.DataColumn
        
        Private columnSTORERKEY As Global.System.Data.DataColumn
        
        Private columnSKU As Global.System.Data.DataColumn
        
        Private columnALTSKU As Global.System.Data.DataColumn
        
        Private columnQTY As Global.System.Data.DataColumn
        
        Private columnPKQTY As Global.System.Data.DataColumn
        
        Private columnOPQTY As Global.System.Data.DataColumn
        
        Private columnSTATUS As Global.System.Data.DataColumn
        
        Private columnLOC As Global.System.Data.DataColumn
        
        Private columnTOLOC As Global.System.Data.DataColumn
        
        Private columnWAVEKEY As Global.System.Data.DataColumn
        
        Private columnEFFECTIVEDATE As Global.System.Data.DataColumn
        
        Private columnCONSIGNEEKEY As Global.System.Data.DataColumn
        
        Private columnROUTE As Global.System.Data.DataColumn
        
        Private columnDOOR As Global.System.Data.DataColumn
        
        Private columnSOURCEKEY As Global.System.Data.DataColumn
        
        Private columnEDITDATE As Global.System.Data.DataColumn
        
        Private columnEDITWHO As Global.System.Data.DataColumn
        
        Private columnPackMod As Global.System.Data.DataColumn
        
        Private columnGUINO As Global.System.Data.DataColumn
        
        Private columnPOKEYLINENUMBER As Global.System.Data.DataColumn
        
        Private columnPOKEY As Global.System.Data.DataColumn
        
        Private columnCASELABLE As Global.System.Data.DataColumn
        
        Private columnSHIPDATE As Global.System.Data.DataColumn
        
        Private columnSprint As Global.System.Data.DataColumn
        
        Private columnLastShipment As Global.System.Data.DataColumn
        
        Private columnCompany As Global.System.Data.DataColumn
        
        Private columnS_Address1 As Global.System.Data.DataColumn
        
        Private columnS_Address2 As Global.System.Data.DataColumn
        
        Private columnS_Phone1 As Global.System.Data.DataColumn
        
        Private columnS_Phone2 As Global.System.Data.DataColumn
        
        Private columnC_CONTACT1 As Global.System.Data.DataColumn
        
        Private columnC_ADDRESS1 As Global.System.Data.DataColumn
        
        Private columnC_ZIP As Global.System.Data.DataColumn
        
        Private columnC_PHONE1 As Global.System.Data.DataColumn
        
        Private columnC_KEEPPY As Global.System.Data.DataColumn
        
        Private columnBILLTOKEY As Global.System.Data.DataColumn
        
        Private columnCURCY As Global.System.Data.DataColumn
        
        Private columnTAX01 As Global.System.Data.DataColumn
        
        Private columnPRICE As Global.System.Data.DataColumn
        
        Private columnUNITPRICE As Global.System.Data.DataColumn
        
        Private columnTaxType As Global.System.Data.DataColumn
        
        Private columnPRICE_RATE As Global.System.Data.DataColumn
        
        Private columnC_PHONE2 As Global.System.Data.DataColumn
        
        Private columnSALESPERSON As Global.System.Data.DataColumn
        
        Private columnDESCR As Global.System.Data.DataColumn
        
        Private columnPrintMark As Global.System.Data.DataColumn
        
        Private columnC_COUNTRY As Global.System.Data.DataColumn
        
        Private columnC_CITY As Global.System.Data.DataColumn
        
        Private columnC_STATE As Global.System.Data.DataColumn
        
        Private columnC_EMAIL1 As Global.System.Data.DataColumn
        
        Private columnWeight As Global.System.Data.DataColumn
        
        Private columnAmount As Global.System.Data.DataColumn
        
        Private columnRandomNumber As Global.System.Data.DataColumn
        
        Private columnNOTES As Global.System.Data.DataColumn
        
        Private columnTOTALVALUE As Global.System.Data.DataColumn
        
        Private columnINCOTERM As Global.System.Data.DataColumn
        
        Private columnStoreType2 As Global.System.Data.DataColumn
        
        Private columnDESCR1 As Global.System.Data.DataColumn
        
        Private columnSPSHIPDATE As Global.System.Data.DataColumn
        
        Private columnAREA As Global.System.Data.DataColumn
        
        Private columnRSNO As Global.System.Data.DataColumn
        
        Private columnSTEP2 As Global.System.Data.DataColumn
        
        Private columnEQID As Global.System.Data.DataColumn
        
        Private columnSUSR5 As Global.System.Data.DataColumn
        
        Private columnLabx01 As Global.System.Data.DataColumn
        
        Private columnLabx02 As Global.System.Data.DataColumn
        
        Private columnLabx03 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Vw_Case_Addr_Invoice"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PICKDETAILKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPICKDETAILKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CASEIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASEID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PICKHEADERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPICKHEADERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EXTERNORDERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTERNORDERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ORDERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ORDERLINENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDERLINENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STORERKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTORERKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SKUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ALTSKUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALTSKU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PKQTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPKQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OPQTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TOLOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOLOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WAVEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWAVEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EFFECTIVEDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEFFECTIVEDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CONSIGNEEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONSIGNEEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ROUTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROUTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DOORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SOURCEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOURCEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EDITDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDITDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EDITWHOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDITWHO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PackModColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPackMod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property GUINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUINO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POKEYLINENUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOKEYLINENUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CASELABLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASELABLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHIPDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHIPDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SprintColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSprint
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LastShipmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastShipment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CompanyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompany
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property S_Address1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_Address1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property S_Address2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_Address2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property S_Phone1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_Phone1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property S_Phone2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_Phone2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_CONTACT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_CONTACT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_ADDRESS1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_ADDRESS1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_ZIPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_ZIP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_PHONE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_PHONE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_KEEPPYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_KEEPPY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BILLTOKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBILLTOKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CURCYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURCY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TAX01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAX01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property UNITPRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNITPRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TaxTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PRICE_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRICE_RATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_PHONE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_PHONE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SALESPERSONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALESPERSON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DESCRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PrintMarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrintMark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_COUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_CITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_STATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_STATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property C_EMAIL1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_EMAIL1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RandomNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRandomNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NOTESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOTES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TOTALVALUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALVALUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property INCOTERMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINCOTERM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property StoreType2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnStoreType2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DESCR1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCR1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SPSHIPDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPSHIPDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property AREAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAREA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RSNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRSNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property STEP2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTEP2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EQIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SUSR5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUSR5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Labx01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnLabx01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Labx02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnLabx02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Labx03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnLabx03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Vw_Case_Addr_InvoiceRow
            Get
                Return CType(Me.Rows(index),Vw_Case_Addr_InvoiceRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Vw_Case_Addr_InvoiceRowChanging As Vw_Case_Addr_InvoiceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Vw_Case_Addr_InvoiceRowChanged As Vw_Case_Addr_InvoiceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Vw_Case_Addr_InvoiceRowDeleting As Vw_Case_Addr_InvoiceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event Vw_Case_Addr_InvoiceRowDeleted As Vw_Case_Addr_InvoiceRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddVw_Case_Addr_InvoiceRow(ByVal row As Vw_Case_Addr_InvoiceRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddVw_Case_Addr_InvoiceRow( _
                    ByVal PICKDETAILKEY As String,  _
                    ByVal CASEID As String,  _
                    ByVal PICKHEADERKEY As String,  _
                    ByVal EXTERNORDERKEY As String,  _
                    ByVal ORDERKEY As String,  _
                    ByVal ORDERLINENUMBER As String,  _
                    ByVal STORERKEY As String,  _
                    ByVal SKU As String,  _
                    ByVal ALTSKU As String,  _
                    ByVal QTY As Decimal,  _
                    ByVal PKQTY As Decimal,  _
                    ByVal OPQTY As Decimal,  _
                    ByVal STATUS As String,  _
                    ByVal LOC As String,  _
                    ByVal TOLOC As String,  _
                    ByVal WAVEKEY As String,  _
                    ByVal EFFECTIVEDATE As Date,  _
                    ByVal CONSIGNEEKEY As String,  _
                    ByVal ROUTE As String,  _
                    ByVal DOOR As String,  _
                    ByVal SOURCEKEY As String,  _
                    ByVal EDITDATE As Date,  _
                    ByVal EDITWHO As String,  _
                    ByVal PackMod As String,  _
                    ByVal GUINO As String,  _
                    ByVal POKEYLINENUMBER As String,  _
                    ByVal POKEY As String,  _
                    ByVal CASELABLE As String,  _
                    ByVal SHIPDATE As Date,  _
                    ByVal Sprint As Short,  _
                    ByVal LastShipment As String,  _
                    ByVal Company As String,  _
                    ByVal S_Address1 As String,  _
                    ByVal S_Address2 As String,  _
                    ByVal S_Phone1 As String,  _
                    ByVal S_Phone2 As String,  _
                    ByVal C_CONTACT1 As String,  _
                    ByVal C_ADDRESS1 As String,  _
                    ByVal C_ZIP As String,  _
                    ByVal C_PHONE1 As String,  _
                    ByVal C_KEEPPY As Decimal,  _
                    ByVal BILLTOKEY As String,  _
                    ByVal CURCY As String,  _
                    ByVal TAX01 As Decimal,  _
                    ByVal PRICE As Decimal,  _
                    ByVal UNITPRICE As Decimal,  _
                    ByVal TaxType As String,  _
                    ByVal PRICE_RATE As Decimal,  _
                    ByVal C_PHONE2 As String,  _
                    ByVal SALESPERSON As String,  _
                    ByVal DESCR As String,  _
                    ByVal PrintMark As String,  _
                    ByVal C_COUNTRY As String,  _
                    ByVal C_CITY As String,  _
                    ByVal C_STATE As String,  _
                    ByVal C_EMAIL1 As String,  _
                    ByVal Weight As String,  _
                    ByVal Amount As Decimal,  _
                    ByVal RandomNumber As String,  _
                    ByVal NOTES As String,  _
                    ByVal TOTALVALUE As Decimal,  _
                    ByVal INCOTERM As String,  _
                    ByVal StoreType2 As String,  _
                    ByVal DESCR1 As String,  _
                    ByVal SPSHIPDATE As Date,  _
                    ByVal AREA As String,  _
                    ByVal RSNO As String,  _
                    ByVal STEP2 As String,  _
                    ByVal EQID As String,  _
                    ByVal SUSR5 As String,  _
                    ByVal Labx01 As String,  _
                    ByVal Labx02 As String,  _
                    ByVal Labx03 As String) As Vw_Case_Addr_InvoiceRow
            Dim rowVw_Case_Addr_InvoiceRow As Vw_Case_Addr_InvoiceRow = CType(Me.NewRow,Vw_Case_Addr_InvoiceRow)
            Dim columnValuesArray() As Object = New Object() {PICKDETAILKEY, CASEID, PICKHEADERKEY, EXTERNORDERKEY, ORDERKEY, ORDERLINENUMBER, STORERKEY, SKU, ALTSKU, QTY, PKQTY, OPQTY, STATUS, LOC, TOLOC, WAVEKEY, EFFECTIVEDATE, CONSIGNEEKEY, ROUTE, DOOR, SOURCEKEY, EDITDATE, EDITWHO, PackMod, GUINO, POKEYLINENUMBER, POKEY, CASELABLE, SHIPDATE, Sprint, LastShipment, Company, S_Address1, S_Address2, S_Phone1, S_Phone2, C_CONTACT1, C_ADDRESS1, C_ZIP, C_PHONE1, C_KEEPPY, BILLTOKEY, CURCY, TAX01, PRICE, UNITPRICE, TaxType, PRICE_RATE, C_PHONE2, SALESPERSON, DESCR, PrintMark, C_COUNTRY, C_CITY, C_STATE, C_EMAIL1, Weight, Amount, RandomNumber, NOTES, TOTALVALUE, INCOTERM, StoreType2, DESCR1, SPSHIPDATE, AREA, RSNO, STEP2, EQID, SUSR5, Labx01, Labx02, Labx03}
            rowVw_Case_Addr_InvoiceRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVw_Case_Addr_InvoiceRow)
            Return rowVw_Case_Addr_InvoiceRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Vw_Case_Addr_InvoiceDataTable = CType(MyBase.Clone,Vw_Case_Addr_InvoiceDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Vw_Case_Addr_InvoiceDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPICKDETAILKEY = MyBase.Columns("PICKDETAILKEY")
            Me.columnCASEID = MyBase.Columns("CASEID")
            Me.columnPICKHEADERKEY = MyBase.Columns("PICKHEADERKEY")
            Me.columnEXTERNORDERKEY = MyBase.Columns("EXTERNORDERKEY")
            Me.columnORDERKEY = MyBase.Columns("ORDERKEY")
            Me.columnORDERLINENUMBER = MyBase.Columns("ORDERLINENUMBER")
            Me.columnSTORERKEY = MyBase.Columns("STORERKEY")
            Me.columnSKU = MyBase.Columns("SKU")
            Me.columnALTSKU = MyBase.Columns("ALTSKU")
            Me.columnQTY = MyBase.Columns("QTY")
            Me.columnPKQTY = MyBase.Columns("PKQTY")
            Me.columnOPQTY = MyBase.Columns("OPQTY")
            Me.columnSTATUS = MyBase.Columns("STATUS")
            Me.columnLOC = MyBase.Columns("LOC")
            Me.columnTOLOC = MyBase.Columns("TOLOC")
            Me.columnWAVEKEY = MyBase.Columns("WAVEKEY")
            Me.columnEFFECTIVEDATE = MyBase.Columns("EFFECTIVEDATE")
            Me.columnCONSIGNEEKEY = MyBase.Columns("CONSIGNEEKEY")
            Me.columnROUTE = MyBase.Columns("ROUTE")
            Me.columnDOOR = MyBase.Columns("DOOR")
            Me.columnSOURCEKEY = MyBase.Columns("SOURCEKEY")
            Me.columnEDITDATE = MyBase.Columns("EDITDATE")
            Me.columnEDITWHO = MyBase.Columns("EDITWHO")
            Me.columnPackMod = MyBase.Columns("PackMod")
            Me.columnGUINO = MyBase.Columns("GUINO")
            Me.columnPOKEYLINENUMBER = MyBase.Columns("POKEYLINENUMBER")
            Me.columnPOKEY = MyBase.Columns("POKEY")
            Me.columnCASELABLE = MyBase.Columns("CASELABLE")
            Me.columnSHIPDATE = MyBase.Columns("SHIPDATE")
            Me.columnSprint = MyBase.Columns("Sprint")
            Me.columnLastShipment = MyBase.Columns("LastShipment")
            Me.columnCompany = MyBase.Columns("Company")
            Me.columnS_Address1 = MyBase.Columns("S_Address1")
            Me.columnS_Address2 = MyBase.Columns("S_Address2")
            Me.columnS_Phone1 = MyBase.Columns("S_Phone1")
            Me.columnS_Phone2 = MyBase.Columns("S_Phone2")
            Me.columnC_CONTACT1 = MyBase.Columns("C_CONTACT1")
            Me.columnC_ADDRESS1 = MyBase.Columns("C_ADDRESS1")
            Me.columnC_ZIP = MyBase.Columns("C_ZIP")
            Me.columnC_PHONE1 = MyBase.Columns("C_PHONE1")
            Me.columnC_KEEPPY = MyBase.Columns("C_KEEPPY")
            Me.columnBILLTOKEY = MyBase.Columns("BILLTOKEY")
            Me.columnCURCY = MyBase.Columns("CURCY")
            Me.columnTAX01 = MyBase.Columns("TAX01")
            Me.columnPRICE = MyBase.Columns("PRICE")
            Me.columnUNITPRICE = MyBase.Columns("UNITPRICE")
            Me.columnTaxType = MyBase.Columns("TaxType")
            Me.columnPRICE_RATE = MyBase.Columns("PRICE_RATE")
            Me.columnC_PHONE2 = MyBase.Columns("C_PHONE2")
            Me.columnSALESPERSON = MyBase.Columns("SALESPERSON")
            Me.columnDESCR = MyBase.Columns("DESCR")
            Me.columnPrintMark = MyBase.Columns("PrintMark")
            Me.columnC_COUNTRY = MyBase.Columns("C_COUNTRY")
            Me.columnC_CITY = MyBase.Columns("C_CITY")
            Me.columnC_STATE = MyBase.Columns("C_STATE")
            Me.columnC_EMAIL1 = MyBase.Columns("C_EMAIL1")
            Me.columnWeight = MyBase.Columns("Weight")
            Me.columnAmount = MyBase.Columns("Amount")
            Me.columnRandomNumber = MyBase.Columns("RandomNumber")
            Me.columnNOTES = MyBase.Columns("NOTES")
            Me.columnTOTALVALUE = MyBase.Columns("TOTALVALUE")
            Me.columnINCOTERM = MyBase.Columns("INCOTERM")
            Me.columnStoreType2 = MyBase.Columns("StoreType2")
            Me.columnDESCR1 = MyBase.Columns("DESCR1")
            Me.columnSPSHIPDATE = MyBase.Columns("SPSHIPDATE")
            Me.columnAREA = MyBase.Columns("AREA")
            Me.columnRSNO = MyBase.Columns("RSNO")
            Me.columnSTEP2 = MyBase.Columns("STEP2")
            Me.columnEQID = MyBase.Columns("EQID")
            Me.columnSUSR5 = MyBase.Columns("SUSR5")
            Me.columnLabx01 = MyBase.Columns("Labx01")
            Me.columnLabx02 = MyBase.Columns("Labx02")
            Me.columnLabx03 = MyBase.Columns("Labx03")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPICKDETAILKEY = New Global.System.Data.DataColumn("PICKDETAILKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPICKDETAILKEY)
            Me.columnCASEID = New Global.System.Data.DataColumn("CASEID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASEID)
            Me.columnPICKHEADERKEY = New Global.System.Data.DataColumn("PICKHEADERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPICKHEADERKEY)
            Me.columnEXTERNORDERKEY = New Global.System.Data.DataColumn("EXTERNORDERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTERNORDERKEY)
            Me.columnORDERKEY = New Global.System.Data.DataColumn("ORDERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERKEY)
            Me.columnORDERLINENUMBER = New Global.System.Data.DataColumn("ORDERLINENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDERLINENUMBER)
            Me.columnSTORERKEY = New Global.System.Data.DataColumn("STORERKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTORERKEY)
            Me.columnSKU = New Global.System.Data.DataColumn("SKU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKU)
            Me.columnALTSKU = New Global.System.Data.DataColumn("ALTSKU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALTSKU)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.columnPKQTY = New Global.System.Data.DataColumn("PKQTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPKQTY)
            Me.columnOPQTY = New Global.System.Data.DataColumn("OPQTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPQTY)
            Me.columnSTATUS = New Global.System.Data.DataColumn("STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATUS)
            Me.columnLOC = New Global.System.Data.DataColumn("LOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOC)
            Me.columnTOLOC = New Global.System.Data.DataColumn("TOLOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOLOC)
            Me.columnWAVEKEY = New Global.System.Data.DataColumn("WAVEKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWAVEKEY)
            Me.columnEFFECTIVEDATE = New Global.System.Data.DataColumn("EFFECTIVEDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEFFECTIVEDATE)
            Me.columnCONSIGNEEKEY = New Global.System.Data.DataColumn("CONSIGNEEKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONSIGNEEKEY)
            Me.columnROUTE = New Global.System.Data.DataColumn("ROUTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROUTE)
            Me.columnDOOR = New Global.System.Data.DataColumn("DOOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOOR)
            Me.columnSOURCEKEY = New Global.System.Data.DataColumn("SOURCEKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOURCEKEY)
            Me.columnEDITDATE = New Global.System.Data.DataColumn("EDITDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDITDATE)
            Me.columnEDITWHO = New Global.System.Data.DataColumn("EDITWHO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDITWHO)
            Me.columnPackMod = New Global.System.Data.DataColumn("PackMod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPackMod)
            Me.columnGUINO = New Global.System.Data.DataColumn("GUINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUINO)
            Me.columnPOKEYLINENUMBER = New Global.System.Data.DataColumn("POKEYLINENUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOKEYLINENUMBER)
            Me.columnPOKEY = New Global.System.Data.DataColumn("POKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOKEY)
            Me.columnCASELABLE = New Global.System.Data.DataColumn("CASELABLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASELABLE)
            Me.columnSHIPDATE = New Global.System.Data.DataColumn("SHIPDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHIPDATE)
            Me.columnSprint = New Global.System.Data.DataColumn("Sprint", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSprint)
            Me.columnLastShipment = New Global.System.Data.DataColumn("LastShipment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastShipment)
            Me.columnCompany = New Global.System.Data.DataColumn("Company", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompany)
            Me.columnS_Address1 = New Global.System.Data.DataColumn("S_Address1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_Address1)
            Me.columnS_Address2 = New Global.System.Data.DataColumn("S_Address2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_Address2)
            Me.columnS_Phone1 = New Global.System.Data.DataColumn("S_Phone1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_Phone1)
            Me.columnS_Phone2 = New Global.System.Data.DataColumn("S_Phone2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_Phone2)
            Me.columnC_CONTACT1 = New Global.System.Data.DataColumn("C_CONTACT1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_CONTACT1)
            Me.columnC_ADDRESS1 = New Global.System.Data.DataColumn("C_ADDRESS1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_ADDRESS1)
            Me.columnC_ZIP = New Global.System.Data.DataColumn("C_ZIP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_ZIP)
            Me.columnC_PHONE1 = New Global.System.Data.DataColumn("C_PHONE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_PHONE1)
            Me.columnC_KEEPPY = New Global.System.Data.DataColumn("C_KEEPPY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_KEEPPY)
            Me.columnBILLTOKEY = New Global.System.Data.DataColumn("BILLTOKEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBILLTOKEY)
            Me.columnCURCY = New Global.System.Data.DataColumn("CURCY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURCY)
            Me.columnTAX01 = New Global.System.Data.DataColumn("TAX01", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAX01)
            Me.columnPRICE = New Global.System.Data.DataColumn("PRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRICE)
            Me.columnUNITPRICE = New Global.System.Data.DataColumn("UNITPRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNITPRICE)
            Me.columnTaxType = New Global.System.Data.DataColumn("TaxType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxType)
            Me.columnPRICE_RATE = New Global.System.Data.DataColumn("PRICE_RATE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRICE_RATE)
            Me.columnC_PHONE2 = New Global.System.Data.DataColumn("C_PHONE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_PHONE2)
            Me.columnSALESPERSON = New Global.System.Data.DataColumn("SALESPERSON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALESPERSON)
            Me.columnDESCR = New Global.System.Data.DataColumn("DESCR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCR)
            Me.columnPrintMark = New Global.System.Data.DataColumn("PrintMark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrintMark)
            Me.columnC_COUNTRY = New Global.System.Data.DataColumn("C_COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_COUNTRY)
            Me.columnC_CITY = New Global.System.Data.DataColumn("C_CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_CITY)
            Me.columnC_STATE = New Global.System.Data.DataColumn("C_STATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_STATE)
            Me.columnC_EMAIL1 = New Global.System.Data.DataColumn("C_EMAIL1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_EMAIL1)
            Me.columnWeight = New Global.System.Data.DataColumn("Weight", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeight)
            Me.columnAmount = New Global.System.Data.DataColumn("Amount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount)
            Me.columnRandomNumber = New Global.System.Data.DataColumn("RandomNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRandomNumber)
            Me.columnNOTES = New Global.System.Data.DataColumn("NOTES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOTES)
            Me.columnTOTALVALUE = New Global.System.Data.DataColumn("TOTALVALUE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALVALUE)
            Me.columnINCOTERM = New Global.System.Data.DataColumn("INCOTERM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINCOTERM)
            Me.columnStoreType2 = New Global.System.Data.DataColumn("StoreType2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStoreType2)
            Me.columnDESCR1 = New Global.System.Data.DataColumn("DESCR1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCR1)
            Me.columnSPSHIPDATE = New Global.System.Data.DataColumn("SPSHIPDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPSHIPDATE)
            Me.columnAREA = New Global.System.Data.DataColumn("AREA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAREA)
            Me.columnRSNO = New Global.System.Data.DataColumn("RSNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRSNO)
            Me.columnSTEP2 = New Global.System.Data.DataColumn("STEP2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTEP2)
            Me.columnEQID = New Global.System.Data.DataColumn("EQID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQID)
            Me.columnSUSR5 = New Global.System.Data.DataColumn("SUSR5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUSR5)
            Me.columnLabx01 = New Global.System.Data.DataColumn("Labx01", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLabx01)
            Me.columnLabx02 = New Global.System.Data.DataColumn("Labx02", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLabx02)
            Me.columnLabx03 = New Global.System.Data.DataColumn("Labx03", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLabx03)
            Me.columnPICKDETAILKEY.AllowDBNull = false
            Me.columnPICKDETAILKEY.MaxLength = 18
            Me.columnCASEID.MaxLength = 20
            Me.columnPICKHEADERKEY.MaxLength = 18
            Me.columnEXTERNORDERKEY.MaxLength = 20
            Me.columnORDERKEY.AllowDBNull = false
            Me.columnORDERKEY.MaxLength = 10
            Me.columnORDERLINENUMBER.AllowDBNull = false
            Me.columnORDERLINENUMBER.MaxLength = 5
            Me.columnSTORERKEY.AllowDBNull = false
            Me.columnSTORERKEY.MaxLength = 15
            Me.columnSKU.ReadOnly = true
            Me.columnSKU.MaxLength = 30
            Me.columnALTSKU.MaxLength = 20
            Me.columnSTATUS.MaxLength = 10
            Me.columnLOC.MaxLength = 10
            Me.columnTOLOC.MaxLength = 10
            Me.columnWAVEKEY.ReadOnly = true
            Me.columnWAVEKEY.MaxLength = 10
            Me.columnCONSIGNEEKEY.MaxLength = 15
            Me.columnROUTE.MaxLength = 18
            Me.columnDOOR.ReadOnly = true
            Me.columnDOOR.MaxLength = 8000
            Me.columnSOURCEKEY.MaxLength = 20
            Me.columnEDITWHO.MaxLength = 30
            Me.columnPackMod.MaxLength = 30
            Me.columnGUINO.ReadOnly = true
            Me.columnGUINO.MaxLength = 20
            Me.columnPOKEYLINENUMBER.MaxLength = 10
            Me.columnPOKEY.MaxLength = 30
            Me.columnCASELABLE.ReadOnly = true
            Me.columnCASELABLE.MaxLength = 8000
            Me.columnLastShipment.MaxLength = 5
            Me.columnCompany.ReadOnly = true
            Me.columnCompany.MaxLength = 200
            Me.columnS_Address1.MaxLength = 120
            Me.columnS_Address2.MaxLength = 120
            Me.columnS_Phone1.MaxLength = 18
            Me.columnS_Phone2.MaxLength = 18
            Me.columnC_CONTACT1.ReadOnly = true
            Me.columnC_CONTACT1.MaxLength = 50
            Me.columnC_ADDRESS1.MaxLength = 200
            Me.columnC_ZIP.MaxLength = 18
            Me.columnC_PHONE1.MaxLength = 30
            Me.columnBILLTOKEY.MaxLength = 15
            Me.columnCURCY.MaxLength = 10
            Me.columnTaxType.MaxLength = 10
            Me.columnPRICE_RATE.ReadOnly = true
            Me.columnC_PHONE2.MaxLength = 18
            Me.columnSALESPERSON.MaxLength = 30
            Me.columnDESCR.MaxLength = 160
            Me.columnPrintMark.MaxLength = 2
            Me.columnC_COUNTRY.MaxLength = 30
            Me.columnC_CITY.MaxLength = 45
            Me.columnC_STATE.MaxLength = 45
            Me.columnC_EMAIL1.MaxLength = 55
            Me.columnWeight.MaxLength = 20
            Me.columnRandomNumber.MaxLength = 4
            Me.columnNOTES.ReadOnly = true
            Me.columnNOTES.MaxLength = 12
            Me.columnINCOTERM.ReadOnly = true
            Me.columnINCOTERM.MaxLength = 10
            Me.columnStoreType2.ReadOnly = true
            Me.columnStoreType2.MaxLength = 30
            Me.columnDESCR1.MaxLength = 160
            Me.columnAREA.ReadOnly = true
            Me.columnAREA.MaxLength = 10
            Me.columnRSNO.ReadOnly = true
            Me.columnRSNO.MaxLength = 5
            Me.columnSTEP2.ReadOnly = true
            Me.columnSTEP2.MaxLength = 4
            Me.columnEQID.ReadOnly = true
            Me.columnEQID.MaxLength = 2
            Me.columnSUSR5.ReadOnly = true
            Me.columnSUSR5.MaxLength = 30
            Me.columnLabx01.ReadOnly = true
            Me.columnLabx01.MaxLength = 30
            Me.columnLabx02.ReadOnly = true
            Me.columnLabx02.MaxLength = 30
            Me.columnLabx03.ReadOnly = true
            Me.columnLabx03.MaxLength = 200
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewVw_Case_Addr_InvoiceRow() As Vw_Case_Addr_InvoiceRow
            Return CType(Me.NewRow,Vw_Case_Addr_InvoiceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Vw_Case_Addr_InvoiceRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Vw_Case_Addr_InvoiceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Vw_Case_Addr_InvoiceRowChangedEvent) Is Nothing) Then
                RaiseEvent Vw_Case_Addr_InvoiceRowChanged(Me, New Vw_Case_Addr_InvoiceRowChangeEvent(CType(e.Row,Vw_Case_Addr_InvoiceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Vw_Case_Addr_InvoiceRowChangingEvent) Is Nothing) Then
                RaiseEvent Vw_Case_Addr_InvoiceRowChanging(Me, New Vw_Case_Addr_InvoiceRowChangeEvent(CType(e.Row,Vw_Case_Addr_InvoiceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Vw_Case_Addr_InvoiceRowDeletedEvent) Is Nothing) Then
                RaiseEvent Vw_Case_Addr_InvoiceRowDeleted(Me, New Vw_Case_Addr_InvoiceRowChangeEvent(CType(e.Row,Vw_Case_Addr_InvoiceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Vw_Case_Addr_InvoiceRowDeletingEvent) Is Nothing) Then
                RaiseEvent Vw_Case_Addr_InvoiceRowDeleting(Me, New Vw_Case_Addr_InvoiceRowChangeEvent(CType(e.Row,Vw_Case_Addr_InvoiceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveVw_Case_Addr_InvoiceRow(ByVal row As Vw_Case_Addr_InvoiceRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As PRODDataSet2 = New PRODDataSet2()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Vw_Case_Addr_InvoiceDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Vw_Case_Addr_InvoiceRow
        Inherits Global.System.Data.DataRow
        
        Private tableVw_Case_Addr_Invoice As Vw_Case_Addr_InvoiceDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVw_Case_Addr_Invoice = CType(Me.Table,Vw_Case_Addr_InvoiceDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PICKDETAILKEY() As String
            Get
                Return CType(Me(Me.tableVw_Case_Addr_Invoice.PICKDETAILKEYColumn),String)
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.PICKDETAILKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CASEID() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.CASEIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CASEID' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.CASEIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PICKHEADERKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.PICKHEADERKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PICKHEADERKEY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.PICKHEADERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EXTERNORDERKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.EXTERNORDERKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTERNORDERKEY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.EXTERNORDERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ORDERKEY() As String
            Get
                Return CType(Me(Me.tableVw_Case_Addr_Invoice.ORDERKEYColumn),String)
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.ORDERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ORDERLINENUMBER() As String
            Get
                Return CType(Me(Me.tableVw_Case_Addr_Invoice.ORDERLINENUMBERColumn),String)
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.ORDERLINENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STORERKEY() As String
            Get
                Return CType(Me(Me.tableVw_Case_Addr_Invoice.STORERKEYColumn),String)
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.STORERKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SKU() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.SKUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SKU' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.SKUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ALTSKU() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.ALTSKUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ALTSKU' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.ALTSKUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PKQTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.PKQTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PKQTY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.PKQTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OPQTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.OPQTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPQTY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.OPQTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STATUS' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.LOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOC' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.LOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TOLOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.TOLOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOLOC' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.TOLOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WAVEKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.WAVEKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WAVEKEY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.WAVEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EFFECTIVEDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.EFFECTIVEDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EFFECTIVEDATE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.EFFECTIVEDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CONSIGNEEKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.CONSIGNEEKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONSIGNEEKEY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.CONSIGNEEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ROUTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.ROUTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ROUTE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.ROUTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DOOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.DOORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOOR' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.DOORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SOURCEKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.SOURCEKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SOURCEKEY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.SOURCEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EDITDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.EDITDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EDITDATE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.EDITDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EDITWHO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.EDITWHOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EDITWHO' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.EDITWHOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PackMod() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.PackModColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PackMod' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.PackModColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property GUINO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.GUINOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUINO' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.GUINOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POKEYLINENUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.POKEYLINENUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POKEYLINENUMBER' in table 'Vw_Case_Addr_Invoice' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.POKEYLINENUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.POKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POKEY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.POKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CASELABLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.CASELABLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CASELABLE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.CASELABLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHIPDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.SHIPDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHIPDATE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.SHIPDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Sprint() As Short
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.SprintColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sprint' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.SprintColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LastShipment() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.LastShipmentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastShipment' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.LastShipmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Company() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.CompanyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Company' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.CompanyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property S_Address1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.S_Address1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_Address1' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.S_Address1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property S_Address2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.S_Address2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_Address2' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.S_Address2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property S_Phone1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.S_Phone1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_Phone1' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.S_Phone1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property S_Phone2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.S_Phone2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_Phone2' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.S_Phone2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_CONTACT1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_CONTACT1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_CONTACT1' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_CONTACT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_ADDRESS1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_ADDRESS1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_ADDRESS1' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_ADDRESS1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_ZIP() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_ZIPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_ZIP' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_ZIPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_PHONE1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_PHONE1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_PHONE1' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_PHONE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_KEEPPY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_KEEPPYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_KEEPPY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_KEEPPYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BILLTOKEY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.BILLTOKEYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BILLTOKEY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.BILLTOKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CURCY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.CURCYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURCY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.CURCYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TAX01() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.TAX01Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAX01' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.TAX01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PRICE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.PRICEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRICE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.PRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UNITPRICE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.UNITPRICEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UNITPRICE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.UNITPRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TaxType() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.TaxTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TaxType' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.TaxTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PRICE_RATE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.PRICE_RATEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRICE_RATE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.PRICE_RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_PHONE2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_PHONE2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_PHONE2' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_PHONE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SALESPERSON() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.SALESPERSONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SALESPERSON' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.SALESPERSONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DESCR() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.DESCRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCR' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.DESCRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PrintMark() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.PrintMarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrintMark' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.PrintMarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_COUNTRY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_COUNTRYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_COUNTRY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_COUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_CITY() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_CITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_CITY' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_CITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_STATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_STATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_STATE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_STATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property C_EMAIL1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.C_EMAIL1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C_EMAIL1' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.C_EMAIL1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Weight() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.WeightColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Weight' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.WeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Amount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.AmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amount' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RandomNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.RandomNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RandomNumber' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.RandomNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NOTES() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.NOTESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOTES' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.NOTESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TOTALVALUE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.TOTALVALUEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALVALUE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.TOTALVALUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property INCOTERM() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.INCOTERMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INCOTERM' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.INCOTERMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property StoreType2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.StoreType2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StoreType2' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.StoreType2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DESCR1() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.DESCR1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCR1' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.DESCR1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SPSHIPDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.SPSHIPDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPSHIPDATE' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.SPSHIPDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property AREA() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.AREAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AREA' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.AREAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RSNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.RSNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RSNO' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.RSNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property STEP2() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.STEP2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STEP2' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.STEP2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EQID() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.EQIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EQID' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.EQIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SUSR5() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.SUSR5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUSR5' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.SUSR5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Labx01() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.Labx01Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Labx01' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.Labx01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Labx02() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.Labx02Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Labx02' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.Labx02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Labx03() As String
            Get
                Try 
                    Return CType(Me(Me.tableVw_Case_Addr_Invoice.Labx03Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Labx03' in table 'Vw_Case_Addr_Invoice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVw_Case_Addr_Invoice.Labx03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCASEIDNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.CASEIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCASEIDNull()
            Me(Me.tableVw_Case_Addr_Invoice.CASEIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPICKHEADERKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.PICKHEADERKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPICKHEADERKEYNull()
            Me(Me.tableVw_Case_Addr_Invoice.PICKHEADERKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEXTERNORDERKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.EXTERNORDERKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEXTERNORDERKEYNull()
            Me(Me.tableVw_Case_Addr_Invoice.EXTERNORDERKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSKUNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.SKUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSKUNull()
            Me(Me.tableVw_Case_Addr_Invoice.SKUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsALTSKUNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.ALTSKUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetALTSKUNull()
            Me(Me.tableVw_Case_Addr_Invoice.ALTSKUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsQTYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetQTYNull()
            Me(Me.tableVw_Case_Addr_Invoice.QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPKQTYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.PKQTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPKQTYNull()
            Me(Me.tableVw_Case_Addr_Invoice.PKQTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOPQTYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.OPQTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOPQTYNull()
            Me(Me.tableVw_Case_Addr_Invoice.OPQTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSTATUSNull()
            Me(Me.tableVw_Case_Addr_Invoice.STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLOCNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.LOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLOCNull()
            Me(Me.tableVw_Case_Addr_Invoice.LOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTOLOCNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.TOLOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTOLOCNull()
            Me(Me.tableVw_Case_Addr_Invoice.TOLOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWAVEKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.WAVEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWAVEKEYNull()
            Me(Me.tableVw_Case_Addr_Invoice.WAVEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEFFECTIVEDATENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.EFFECTIVEDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEFFECTIVEDATENull()
            Me(Me.tableVw_Case_Addr_Invoice.EFFECTIVEDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCONSIGNEEKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.CONSIGNEEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCONSIGNEEKEYNull()
            Me(Me.tableVw_Case_Addr_Invoice.CONSIGNEEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsROUTENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.ROUTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetROUTENull()
            Me(Me.tableVw_Case_Addr_Invoice.ROUTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDOORNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.DOORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDOORNull()
            Me(Me.tableVw_Case_Addr_Invoice.DOORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSOURCEKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.SOURCEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSOURCEKEYNull()
            Me(Me.tableVw_Case_Addr_Invoice.SOURCEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEDITDATENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.EDITDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEDITDATENull()
            Me(Me.tableVw_Case_Addr_Invoice.EDITDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEDITWHONull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.EDITWHOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEDITWHONull()
            Me(Me.tableVw_Case_Addr_Invoice.EDITWHOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPackModNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.PackModColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPackModNull()
            Me(Me.tableVw_Case_Addr_Invoice.PackModColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsGUINONull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.GUINOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetGUINONull()
            Me(Me.tableVw_Case_Addr_Invoice.GUINOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOKEYLINENUMBERNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.POKEYLINENUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOKEYLINENUMBERNull()
            Me(Me.tableVw_Case_Addr_Invoice.POKEYLINENUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.POKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOKEYNull()
            Me(Me.tableVw_Case_Addr_Invoice.POKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCASELABLENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.CASELABLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCASELABLENull()
            Me(Me.tableVw_Case_Addr_Invoice.CASELABLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHIPDATENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.SHIPDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHIPDATENull()
            Me(Me.tableVw_Case_Addr_Invoice.SHIPDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSprintNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.SprintColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSprintNull()
            Me(Me.tableVw_Case_Addr_Invoice.SprintColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLastShipmentNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.LastShipmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLastShipmentNull()
            Me(Me.tableVw_Case_Addr_Invoice.LastShipmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCompanyNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.CompanyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCompanyNull()
            Me(Me.tableVw_Case_Addr_Invoice.CompanyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsS_Address1Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.S_Address1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetS_Address1Null()
            Me(Me.tableVw_Case_Addr_Invoice.S_Address1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsS_Address2Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.S_Address2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetS_Address2Null()
            Me(Me.tableVw_Case_Addr_Invoice.S_Address2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsS_Phone1Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.S_Phone1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetS_Phone1Null()
            Me(Me.tableVw_Case_Addr_Invoice.S_Phone1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsS_Phone2Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.S_Phone2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetS_Phone2Null()
            Me(Me.tableVw_Case_Addr_Invoice.S_Phone2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_CONTACT1Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_CONTACT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_CONTACT1Null()
            Me(Me.tableVw_Case_Addr_Invoice.C_CONTACT1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_ADDRESS1Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_ADDRESS1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_ADDRESS1Null()
            Me(Me.tableVw_Case_Addr_Invoice.C_ADDRESS1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_ZIPNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_ZIPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_ZIPNull()
            Me(Me.tableVw_Case_Addr_Invoice.C_ZIPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_PHONE1Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_PHONE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_PHONE1Null()
            Me(Me.tableVw_Case_Addr_Invoice.C_PHONE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_KEEPPYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_KEEPPYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_KEEPPYNull()
            Me(Me.tableVw_Case_Addr_Invoice.C_KEEPPYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBILLTOKEYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.BILLTOKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBILLTOKEYNull()
            Me(Me.tableVw_Case_Addr_Invoice.BILLTOKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCURCYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.CURCYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCURCYNull()
            Me(Me.tableVw_Case_Addr_Invoice.CURCYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTAX01Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.TAX01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTAX01Null()
            Me(Me.tableVw_Case_Addr_Invoice.TAX01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPRICENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.PRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPRICENull()
            Me(Me.tableVw_Case_Addr_Invoice.PRICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsUNITPRICENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.UNITPRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetUNITPRICENull()
            Me(Me.tableVw_Case_Addr_Invoice.UNITPRICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTaxTypeNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.TaxTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTaxTypeNull()
            Me(Me.tableVw_Case_Addr_Invoice.TaxTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPRICE_RATENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.PRICE_RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPRICE_RATENull()
            Me(Me.tableVw_Case_Addr_Invoice.PRICE_RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_PHONE2Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_PHONE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_PHONE2Null()
            Me(Me.tableVw_Case_Addr_Invoice.C_PHONE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSALESPERSONNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.SALESPERSONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSALESPERSONNull()
            Me(Me.tableVw_Case_Addr_Invoice.SALESPERSONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDESCRNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.DESCRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDESCRNull()
            Me(Me.tableVw_Case_Addr_Invoice.DESCRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPrintMarkNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.PrintMarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPrintMarkNull()
            Me(Me.tableVw_Case_Addr_Invoice.PrintMarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_COUNTRYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_COUNTRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_COUNTRYNull()
            Me(Me.tableVw_Case_Addr_Invoice.C_COUNTRYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_CITYNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_CITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_CITYNull()
            Me(Me.tableVw_Case_Addr_Invoice.C_CITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_STATENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_STATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_STATENull()
            Me(Me.tableVw_Case_Addr_Invoice.C_STATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsC_EMAIL1Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.C_EMAIL1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetC_EMAIL1Null()
            Me(Me.tableVw_Case_Addr_Invoice.C_EMAIL1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWeightNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.WeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWeightNull()
            Me(Me.tableVw_Case_Addr_Invoice.WeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsAmountNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetAmountNull()
            Me(Me.tableVw_Case_Addr_Invoice.AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRandomNumberNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.RandomNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRandomNumberNull()
            Me(Me.tableVw_Case_Addr_Invoice.RandomNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNOTESNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.NOTESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNOTESNull()
            Me(Me.tableVw_Case_Addr_Invoice.NOTESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTOTALVALUENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.TOTALVALUEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTOTALVALUENull()
            Me(Me.tableVw_Case_Addr_Invoice.TOTALVALUEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsINCOTERMNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.INCOTERMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetINCOTERMNull()
            Me(Me.tableVw_Case_Addr_Invoice.INCOTERMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsStoreType2Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.StoreType2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetStoreType2Null()
            Me(Me.tableVw_Case_Addr_Invoice.StoreType2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDESCR1Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.DESCR1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDESCR1Null()
            Me(Me.tableVw_Case_Addr_Invoice.DESCR1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSPSHIPDATENull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.SPSHIPDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSPSHIPDATENull()
            Me(Me.tableVw_Case_Addr_Invoice.SPSHIPDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsAREANull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.AREAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetAREANull()
            Me(Me.tableVw_Case_Addr_Invoice.AREAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRSNONull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.RSNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRSNONull()
            Me(Me.tableVw_Case_Addr_Invoice.RSNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSTEP2Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.STEP2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSTEP2Null()
            Me(Me.tableVw_Case_Addr_Invoice.STEP2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEQIDNull() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.EQIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEQIDNull()
            Me(Me.tableVw_Case_Addr_Invoice.EQIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSUSR5Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.SUSR5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSUSR5Null()
            Me(Me.tableVw_Case_Addr_Invoice.SUSR5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLabx01Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.Labx01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLabx01Null()
            Me(Me.tableVw_Case_Addr_Invoice.Labx01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLabx02Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.Labx02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLabx02Null()
            Me(Me.tableVw_Case_Addr_Invoice.Labx02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLabx03Null() As Boolean
            Return Me.IsNull(Me.tableVw_Case_Addr_Invoice.Labx03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLabx03Null()
            Me(Me.tableVw_Case_Addr_Invoice.Labx03Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class Vw_Case_Addr_InvoiceRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Vw_Case_Addr_InvoiceRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As Vw_Case_Addr_InvoiceRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As Vw_Case_Addr_InvoiceRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace PRODDataSet2TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Vw_Case_Addr_InvoiceTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Vw_Case_Addr_Invoice"
            tableMapping.ColumnMappings.Add("PICKDETAILKEY", "PICKDETAILKEY")
            tableMapping.ColumnMappings.Add("CASEID", "CASEID")
            tableMapping.ColumnMappings.Add("PICKHEADERKEY", "PICKHEADERKEY")
            tableMapping.ColumnMappings.Add("EXTERNORDERKEY", "EXTERNORDERKEY")
            tableMapping.ColumnMappings.Add("ORDERKEY", "ORDERKEY")
            tableMapping.ColumnMappings.Add("ORDERLINENUMBER", "ORDERLINENUMBER")
            tableMapping.ColumnMappings.Add("STORERKEY", "STORERKEY")
            tableMapping.ColumnMappings.Add("SKU", "SKU")
            tableMapping.ColumnMappings.Add("ALTSKU", "ALTSKU")
            tableMapping.ColumnMappings.Add("QTY", "QTY")
            tableMapping.ColumnMappings.Add("PKQTY", "PKQTY")
            tableMapping.ColumnMappings.Add("OPQTY", "OPQTY")
            tableMapping.ColumnMappings.Add("STATUS", "STATUS")
            tableMapping.ColumnMappings.Add("LOC", "LOC")
            tableMapping.ColumnMappings.Add("TOLOC", "TOLOC")
            tableMapping.ColumnMappings.Add("WAVEKEY", "WAVEKEY")
            tableMapping.ColumnMappings.Add("EFFECTIVEDATE", "EFFECTIVEDATE")
            tableMapping.ColumnMappings.Add("CONSIGNEEKEY", "CONSIGNEEKEY")
            tableMapping.ColumnMappings.Add("ROUTE", "ROUTE")
            tableMapping.ColumnMappings.Add("DOOR", "DOOR")
            tableMapping.ColumnMappings.Add("SOURCEKEY", "SOURCEKEY")
            tableMapping.ColumnMappings.Add("EDITDATE", "EDITDATE")
            tableMapping.ColumnMappings.Add("EDITWHO", "EDITWHO")
            tableMapping.ColumnMappings.Add("PackMod", "PackMod")
            tableMapping.ColumnMappings.Add("GUINO", "GUINO")
            tableMapping.ColumnMappings.Add("POKEYLINENUMBER", "POKEYLINENUMBER")
            tableMapping.ColumnMappings.Add("POKEY", "POKEY")
            tableMapping.ColumnMappings.Add("CASELABLE", "CASELABLE")
            tableMapping.ColumnMappings.Add("SHIPDATE", "SHIPDATE")
            tableMapping.ColumnMappings.Add("Sprint", "Sprint")
            tableMapping.ColumnMappings.Add("LastShipment", "LastShipment")
            tableMapping.ColumnMappings.Add("Company", "Company")
            tableMapping.ColumnMappings.Add("S_Address1", "S_Address1")
            tableMapping.ColumnMappings.Add("S_Address2", "S_Address2")
            tableMapping.ColumnMappings.Add("S_Phone1", "S_Phone1")
            tableMapping.ColumnMappings.Add("S_Phone2", "S_Phone2")
            tableMapping.ColumnMappings.Add("C_CONTACT1", "C_CONTACT1")
            tableMapping.ColumnMappings.Add("C_ADDRESS1", "C_ADDRESS1")
            tableMapping.ColumnMappings.Add("C_ZIP", "C_ZIP")
            tableMapping.ColumnMappings.Add("C_PHONE1", "C_PHONE1")
            tableMapping.ColumnMappings.Add("C_KEEPPY", "C_KEEPPY")
            tableMapping.ColumnMappings.Add("BILLTOKEY", "BILLTOKEY")
            tableMapping.ColumnMappings.Add("CURCY", "CURCY")
            tableMapping.ColumnMappings.Add("TAX01", "TAX01")
            tableMapping.ColumnMappings.Add("PRICE", "PRICE")
            tableMapping.ColumnMappings.Add("UNITPRICE", "UNITPRICE")
            tableMapping.ColumnMappings.Add("TaxType", "TaxType")
            tableMapping.ColumnMappings.Add("PRICE_RATE", "PRICE_RATE")
            tableMapping.ColumnMappings.Add("C_PHONE2", "C_PHONE2")
            tableMapping.ColumnMappings.Add("SALESPERSON", "SALESPERSON")
            tableMapping.ColumnMappings.Add("DESCR", "DESCR")
            tableMapping.ColumnMappings.Add("PrintMark", "PrintMark")
            tableMapping.ColumnMappings.Add("C_COUNTRY", "C_COUNTRY")
            tableMapping.ColumnMappings.Add("C_CITY", "C_CITY")
            tableMapping.ColumnMappings.Add("C_STATE", "C_STATE")
            tableMapping.ColumnMappings.Add("C_EMAIL1", "C_EMAIL1")
            tableMapping.ColumnMappings.Add("Weight", "Weight")
            tableMapping.ColumnMappings.Add("Amount", "Amount")
            tableMapping.ColumnMappings.Add("RandomNumber", "RandomNumber")
            tableMapping.ColumnMappings.Add("NOTES", "NOTES")
            tableMapping.ColumnMappings.Add("TOTALVALUE", "TOTALVALUE")
            tableMapping.ColumnMappings.Add("INCOTERM", "INCOTERM")
            tableMapping.ColumnMappings.Add("StoreType2", "StoreType2")
            tableMapping.ColumnMappings.Add("DESCR1", "DESCR1")
            tableMapping.ColumnMappings.Add("SPSHIPDATE", "SPSHIPDATE")
            tableMapping.ColumnMappings.Add("AREA", "AREA")
            tableMapping.ColumnMappings.Add("RSNO", "RSNO")
            tableMapping.ColumnMappings.Add("STEP2", "STEP2")
            tableMapping.ColumnMappings.Add("EQID", "EQID")
            tableMapping.ColumnMappings.Add("SUSR5", "SUSR5")
            tableMapping.ColumnMappings.Add("Labx01", "Labx01")
            tableMapping.ColumnMappings.Add("Labx02", "Labx02")
            tableMapping.ColumnMappings.Add("Labx03", "Labx03")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Packet_DEV.My.MySettings.Default.PRODConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PICKDETAILKEY, CASEID, PICKHEADERKEY, EXTERNORDERKEY, ORDERKEY, ORDERLINEN"& _ 
                "UMBER, STORERKEY, SKU, ALTSKU, QTY, PKQTY, OPQTY, STATUS, LOC, TOLOC, WAVEKEY, E"& _ 
                "FFECTIVEDATE, CONSIGNEEKEY, ROUTE, DOOR, SOURCEKEY, EDITDATE, EDITWHO, PackMod, "& _ 
                "GUINO, POKEYLINENUMBER, POKEY, CASELABLE, SHIPDATE, Sprint, LastShipment, Compan"& _ 
                "y, S_Address1, S_Address2, S_Phone1, S_Phone2, C_CONTACT1, C_ADDRESS1, C_ZIP, C_"& _ 
                "PHONE1, C_KEEPPY, BILLTOKEY, CURCY, TAX01, PRICE, UNITPRICE, TaxType, PRICE_RATE"& _ 
                ", C_PHONE2, SALESPERSON, DESCR, PrintMark, C_COUNTRY, C_CITY, C_STATE, C_EMAIL1,"& _ 
                " Weight, Amount, RandomNumber, NOTES, TOTALVALUE, INCOTERM, StoreType2, DESCR1, "& _ 
                "SPSHIPDATE, AREA, RSNO, STEP2, EQID, SUSR5, Labx01, Labx02, Labx03 FROM dbo.Vw_C"& _ 
                "ase_Addr_Invoice"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PRODDataSet2.Vw_Case_Addr_InvoiceDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PRODDataSet2.Vw_Case_Addr_InvoiceDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PRODDataSet2.Vw_Case_Addr_InvoiceDataTable = New PRODDataSet2.Vw_Case_Addr_InvoiceDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As PRODDataSet2, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As PRODDataSet2, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As PRODDataSet2, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As PRODDataSet2) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
